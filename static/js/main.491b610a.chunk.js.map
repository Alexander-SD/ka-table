{"version":3,"sources":["lib/enums.ts","lib/Models/CssClasses.ts","lib/defaultOptions.ts","lib/Utils/ArrayUtils.ts","lib/Utils/CellUtils.ts","lib/Utils/ColumnUtils.ts","lib/Utils/HeadRowUtils.ts","lib/Utils/ActionUtils.ts","lib/Utils/CommonUtils.ts","lib/Utils/FilterUtils.ts","lib/Utils/PropsUtils.ts","lib/Utils/TypeUtils.ts","lib/Components/EmptyCells/EmptyCells.tsx","lib/Components/FilterRowBoolean/FilterRowBoolean.tsx","lib/Utils/DateUtils.ts","lib/Components/FilterRowDate/FilterRowDate.tsx","lib/Components/FilterRowNumber/FilterRowNumber.tsx","lib/Components/FilterRowString/FilterRowString.tsx","lib/Components/FilterRowDataType/FilterRowDataType.tsx","lib/Components/FilterCell/FilterCell.tsx","lib/Components/FilterRow/FilterRow.tsx","lib/Components/HeadCellContent/HeadCellContent.tsx","lib/Components/HeadCell/HeadCell.tsx","lib/Components/HeadRow/HeadRow.tsx","lib/Utils/GroupUtils.ts","lib/Components/NoDataRow/NoDataRow.tsx","lib/Components/CellText/CellText.tsx","lib/Components/CellContent/CellContent.tsx","lib/Utils/EffectUtils.ts","lib/Components/CellEditorBoolean/CellEditorBoolean.tsx","lib/Components/CellEditorDate/CellEditorDate.tsx","lib/Components/CellEditorNumber/CellEditorNumber.tsx","lib/Components/CellEditorString/CellEditorString.tsx","lib/Components/CellEditorDataType/CellEditorDataType.tsx","lib/Components/CellEditorValidationMessage/CellEditorValidationMessage.tsx","lib/Components/CellEditorState/CellEditorState.tsx","lib/Utils/Validation.ts","lib/Components/CellEditor/CellEditor.tsx","lib/Components/CellComponent/CellComponent.tsx","lib/Components/DataRowContent/DataRowContent.tsx","lib/Components/DataRow/DataRow.tsx","lib/Components/GroupRow/GroupRow.tsx","lib/Components/VirtualizedRows/VirtualizedRows.tsx","lib/Utils/Virtualize.ts","lib/Components/Rows/Rows.tsx","lib/Components/TableBody/TableBody.tsx","lib/Components/Table/Table.tsx","lib/Utils/SortUtils.ts","Demos/CommandColumnDemo/CommandColumnDemo.tsx","Demos/CustomCellDemo/CustomCellDemo.tsx","Demos/CustomDataRowDemo/CustomDataRowDemo.tsx","Demos/CustomEditorDemo/CustomEditorDemo.tsx","Demos/CustomHeaderCellDemo/CustomHeaderCellDemo.tsx","Demos/Demo.ts","Demos/DemoText.tsx","Demos/ga.ts","Demos/DemoPage.tsx","Demos/EditingDemo/EditingDemo.tsx","Demos/EventsDemo/EventsLog.tsx","Demos/EventsDemo/EventsDemo.tsx","Demos/FilterExtendedDemo/filterData.ts","Demos/FilterExtendedDemo/FilterExtendedDemo.tsx","Demos/FilterRowCustomEditorDemo/FilterRowCustomEditorDemo.tsx","Demos/FilterRowDemo/FilterRowDemo.tsx","Demos/GAWrapper.tsx","Demos/GroupingDemo/GroupingDemo.tsx","Demos/ManyRowsDemo/ManyRowsDemo.tsx","Demos/ManyRowsGroupingDemo/ManyRowsGroupingDemo.tsx","Demos/SearchDemo/SearchDemo.tsx","Demos/SelectionDemo/SelectionDemo.tsx","Demos/SortingDemo/SortingDemo.tsx","Demos/StateStoringDemo/dataStorage.ts","Demos/StateStoringDemo/StateStoringDemo.tsx","Demos/ValidationDemo/ValidationDemo.tsx","Demos/Demos.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DataType","EditingMode","ActionType","KeyboardEnum","SortDirection","SortingMode","FilteringMode","FilterOperatorName","CssClasses","table","tbody","thead","theadRow","theadCell","groupRow","row","rowSelected","cell","iconGroupArrowCollapsed","iconGroupArrowExpanded","iconClose","iconSortArrowDown","iconSortArrowUp","checkbox","dateInput","numberInput","textInput","defaultOptions","columnDataType","String","columnSortDirection","Ascend","css","getCopyOfArrayAndInsertOrReplaceItem","item","rowKey","array","newArray","rowKeyValue","index","findIndex","i","splice","push","isEditableCell","editingMode","column","rowEditableCells","undefined","isEditable","Cell","find","c","columnKey","key","getField","field","getNextSortDirection","previousSortdirection","Descend","wrapDispatch","columns","data","editableCells","onEvent","onDataChange","onOptionChange","rowKeyField","selectedRows","virtualScrolling","action","actionData","OpenEditor","concat","getCopyOfArrayAndAddItem","changeCellTextToCellEditorHandler","CloseEditor","filter","changeCellEditorToCellTextHandler","ChangeFilterRow","newColumns","ChangeRowData","newData","newValue","SelectRow","DeselectRowData","s","ChangeSorting","sortedColumns","column2","column1","forEach","newColumnIndex","sortDirection","getSortedColumns","ScrollTable","scrollPosition","scrollTop","isEmpty","value","length","getDefaultOperatorForType","type","filterOperator","predefinedFilterOperators","o","defaultForTypes","includes","name","compare","fieldValue","conditionValue","Boolean","Number","Date","Equal","MoreThan","LessThan","MoreThanOrEqual","LessThanOrEqual","toString","toLowerCase","Contains","extendProps","childElementAttributes","childProps","childCustomAttributes","dispatch","resultProps","mergeProps","emptyFunc","customPropsWithEvents","prop","hasOwnProperty","propName","propValue","baseFunc","isFunction","e","className","convertToColumnTypes","map","d","nd","dataType","toBoolean","trim","variableToCheck","Function","EmptyCells","count","shouldUseTh","Array","FilterRowBoolean","filterRowValue","autoFocus","ref","elem","indeterminate","checked","onChange","event","currentTarget","updatedColumn","getDateInputValue","date","getTime","getTimezoneOffset","toISOString","split","FilterRowDate","targetValue","FilterRowNumber","FilterRowString","FilterRowDataType","props","FilterCell","style","filterRowCell","FilterRow","groupColumnsCount","HeadCellContent","headCell","title","isSortingEnabled","sortingMode","Single","sortClick","newColumn","getColumnWithUpdatedSortDirection","onClick","HeadCell","scope","HeadRow","groupMark","convertToFlat","grouped","result","groupValue","groupKey","isArray","getGroupedStructure","groups","columnMap","expandedDeep","groupsExpanded","group","shift","groupBy","groupExpandedItems","ge","some","newStructure","set","keyGetter","isEmptyValue","Map","collection","get","NoDataRow","noDataRow","colSpan","CellText","childAttributes","format","rowData","formatedValue","divProps","CellContent","getEventListenerEffect","eventName","handler","window","addEventListener","removeEventListener","CellEditorBoolean","onBlur","CellEditorDate","CellEditorNumber","CellEditorString","CellEditorDataType","CellEditorValidationMessage","message","CellEditorState","useState","changeValue","validationValue","validation","getValidationValue","close","useCallback","closeHandler","useEffect","escKeyHandler","enterKeyHandler","keyCode","Esc","Enter","stateProps","rowValue","CellEditor","editor","CellComponent","DataRowContent","isSelectedRow","getRowEditableCells","DataRow","dataRow","trRef","dataRowProps","dataRowContent","GroupRow","emptyColumnsCount","groupRowData","newGroupsExpanded","JSON","stringify","groupClick","VirtualizedRows","firstRowRef","useRef","current","itemHeight","tbodyHeight","offsetHeight","parentElement","newVirtualScrolling","virtualized","virtualizedData","beginHeight","endHeight","reduce","acc","getVirtualized","rowRefLink","height","Rows","groupedColumns","groupedData","getGroupedData","getExpandedGroups","TableBody","onScroll","timeStamp","Table","None","filteringMode","search","searchText","initialData","indexOf","searchData","filterRowOperator","fo","Error","join","setHours","filterData","sortedColumn","sortFunc","a","b","sort","sortData","g","componentProps","tableProps","dataArray","fill","_","column3","column4","AlertCell","src","alt","alert","DeleteRow","tableOption","width","textAlign","CommandColumnDemo","option","changeOptions","changeData","eventData","id","score","passed","img","nextTry","toLocaleDateString","month","day","year","CustomCellDemo","CustomDataRowDemo","setValue","defaultValue","typeUtils","CustomEditorDemo","color","CustomHeaderCellDemo","Demo","component","path","fileName","jsLink","tsLink","disableOnlineEditor","this","DemoText","demoFileName","text","changeText","fetch","then","res","fileText","host","location","hostname","initializeGA","trackPage","page","options","trackEvent","category","ReactGA","initialize","pageview","label","getDemoPage","demo","href","rel","target","EditingDemo","EventsLog","events","showDataClick","eventsLog","time","toLocaleTimeString","milliseconds","getMilliseconds","val","showData","startsWith","textDecoration","textDecorationStyle","extendedEvent","onContextMenu","onDoubleClick","onMouseEnter","EventsDemo","changeEvents","prevValue","newEvents","filterItem","operator","contains","doesNotContain","equals","isNotEqual","more","less","filterGroup","groupName","items","filterGroupOr","filterGroupAnd","filteredData","fields","caption","operators","FilterExtendedDemo","filterValue","changeFilter","onFilterValueChanged","newFilterValue","CustomLookupEditor","toNullableBoolean","FilterOperators","dateUtils","FilterRowCustomEditorDemo","FilterRowDemo","withTracker","WrappedComponent","pathname","country","age","GroupingDemo","ManyRowsDemo","ManyRowsGroupingDemo","SearchDemo","SelectionDemo","SortingDemo","parse","localStorage","getItem","dataStorage","save","setItem","defaultOption","OPTION_KEY","StateStoringDemo","reload","newOption","async","ValidationDemo","cases","demoComponent","Demos","to","activeClassName","App","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8XAAYA,EAQAC,EAKAC,EAWAC,EAKAC,EAKAC,EAKAC,EAKAC,E,uGA5CAP,K,kBAAAA,E,YAAAA,E,gBAAAA,E,gBAAAA,E,iBAAAA,M,cAQAC,K,YAAAA,E,aAAAA,M,cAKAC,K,0BAAAA,E,kCAAAA,E,wBAAAA,E,8BAAAA,E,kCAAAA,E,sBAAAA,E,0BAAAA,E,+BAAAA,M,cAWAC,O,cAAAA,I,mBAAAA,M,cAKAC,K,gBAAAA,E,mBAAAA,M,cAKAC,K,YAAAA,E,iBAAAA,M,cAKAC,K,YAAAA,E,uBAAAA,M,cAKAC,K,UAAAA,E,aAAAA,E,aAAAA,E,qBAAAA,E,qBAAAA,E,qBAAAA,M,KC5CL,IAAMC,EAAb,sCACSC,MAAiB,WAD1B,KAESC,MAAiB,WAF1B,KAGSC,MAAiB,WAH1B,KAISC,SAAoB,qBAJ7B,KAKSC,UAAqB,gBAL9B,KAMSC,SAAoB,qBAN7B,KAOSC,IAAe,eAPxB,KAQSC,YAAuB,kBARhC,KASSC,KAAgB,UATzB,KAWSC,wBAAmC,4DAX5C,KAYSC,uBAAkC,2DAZ3C,KAaSC,UAAqB,wBAb9B,KAcSC,kBAA6B,+CAdtC,KAeSC,gBAA2B,6CAfpC,KAiBSC,SAAqB,WAjB9B,KAkBSC,UAAsB,WAlB/B,KAmBSC,YAAwB,WAnBjC,KAoBSC,UAAsB,YCRhBC,EAFQ,I,sCALdC,eAAiB5B,EAAS6B,O,KAC1BC,oBAAqC1B,EAAc2B,O,KACnDC,IAAkB,IAAIxB,G,OCElByB,EAAuC,SAACC,EAAWC,EAAaC,GAC3E,IAAMC,EAAQ,YAAOD,GACfE,EAAcJ,EAAKC,GACnBI,EAAQF,EAASG,WAAU,SAACC,GAAD,OAAOA,EAAEN,KAAYG,KAEtD,OADAC,GAAS,EAAIF,EAASK,OAAOH,EAAO,EAAGL,GAAQG,EAASM,KAAKT,GACtDG,GCRIO,EAAiB,SAACC,EAA0BC,EAAgBC,GACvE,YAA0BC,IAAtBF,EAAOG,WACFH,EAAOG,WAEZJ,IAAgB5C,EAAYiD,QACrBH,EAAiBI,MAAK,SAACC,GAAD,OAAOA,EAAEC,YAAcP,EAAOQ,QCLpDC,EAAW,SAACT,GACvB,OAAOA,EAAOU,OAASV,EAAOQ,KCsB1BG,EAAuB,SAACC,GAQ5B,OANIA,EACkBA,IAA0BtD,EAAc2B,OACxD3B,EAAcuD,QAAUvD,EAAc2B,OAEtBJ,EAAeG,qBC5B1B8B,EAAe,SAAC,GAUN,IATrBC,EASoB,EATpBA,QACAC,EAQoB,EARpBA,KAQoB,IAPpBC,qBAOoB,MAPJ,GAOI,MANpBC,eAMoB,MANV,aAMU,MALpBC,oBAKoB,MALL,aAKK,EAJpBC,EAIoB,EAJpBA,eACAC,EAGoB,EAHpBA,YAGoB,IAFpBC,oBAEoB,MAFL,GAEK,EADpBC,EACoB,EADpBA,iBAEA,OAAO,SAACC,EAAgBC,GACtB,OAAQD,GACN,KAAKpE,EAAWsE,YHJ2B,SAC/CtC,EAAY6B,EAAuBG,GAEjCA,EAAe,CAAEH,cDnBmB,SAAC7B,GAAyC,IAA9BE,EAA6B,uDAAd,GACjE,OAAOA,EAAMqC,OAAO,CAACvC,ICiBMwC,CAAyBxC,EAAM6B,KGGpDY,CACEJ,EAAWtD,KACX8C,EACAG,GACF,MACF,KAAKhE,EAAW0E,aHJ2B,SAC/C1C,EAAY6B,EAAuBG,GAEjCA,EAAe,CAAEH,cADQA,EAAcc,QAAO,SAACzB,GAAD,OAAOA,EAAEC,YAAcnB,EAAKmB,WAAaD,EAAEjB,SAAWD,EAAKC,YGGrG2C,CACEP,EAAWtD,KACX8C,EACAG,GACF,MACF,KAAKhE,EAAW6E,gBACZ,IAAMC,EAAa/C,EAAqCsC,EAAWzB,OAAQ,MAAOe,GAClFK,EAAe,CAAEL,QAASmB,IAC1B,MACJ,KAAK9E,EAAW+E,cACZ,IAAMC,EAAUjD,EAAqCsC,EAAWY,SAAUhB,EAAaL,GACvFG,EAAaiB,GACb,MACJ,KAAKhF,EAAWkF,UACZlB,EAAe,CAAEE,aAAa,GAAD,mBAAMA,GAAiB,CAACG,EAAWjC,gBAChE,MACJ,KAAKpC,EAAWmF,gBACZnB,EAAe,CAAEE,aAAc,YAAIA,GAAcS,QAAO,SAACS,GAAD,OAAOA,IAAMf,EAAWjC,iBAChF,MACJ,KAAKpC,EAAWqF,cACZ,IAAMC,ED1CgB,SAC9B3B,EACAf,GAEA,IAAMP,EAAQsB,EAAQrB,WAAU,SAACY,GAAD,ODPcqC,ECOW3C,GDP5B4C,ECOyBtC,GDNvCE,MAAQmC,EAAQnC,KAAOoC,EAAQlC,QAAUiC,EAAQjC,MADpC,IAACkC,EAAiBD,KCQxCT,EAAU,YAAOnB,GAUvB,OARAmB,EAAWW,SAAQ,SAACvC,EAAGwC,GACjBxC,EAAEyC,gBACJb,EAAWY,GAAX,eAAiCxC,GACjC4B,EAAWY,GAAgBC,mBAAgB7C,MAI/CgC,EAAWzC,GAAX,eAAwBO,GACjBkC,EC2BuBc,CAAiBjC,EAASU,EAAWzB,QAC3DoB,EAAe,CAAEL,QAAS2B,IAC1B,MACJ,KAAKtF,EAAW6F,YACZ,GAAI1B,EAAkB,CACpB,IAAM2B,EAAiBzB,EAAW0B,UAC9B5B,GACFH,EAAe,CAAEG,iBAAiB,eAAMA,EAAP,CAAyB2B,sBAKpEhC,EAAQM,EAAQC,KC3DP2B,EAAU,SAACC,GAAD,OAAmC,MAATA,GAAkC,IAAjBA,EAAMC,QC4C3DC,EAA4B,SAACC,GACxC,IAAMC,EAAiBC,EAA0BrD,MAAK,SAACsD,GAAD,OAAOA,EAAEC,iBAAmBD,EAAEC,gBAAgBC,SAASL,MAC7G,OAAQC,GAAkBA,EAAeK,MAAS,KAGvCJ,EAA8C,CAAC,CAC1DK,QAAS,SAACC,EAAiBC,GAAlB,OACPD,IAAeC,GACjBL,gBAAiB,CAAC1G,EAASgH,QAAShH,EAASiH,OAAQjH,EAASkH,MAC9DN,KAAMrG,EAAmB4G,OACxB,CACDN,QAAS,SAACC,EAAiBC,GAAlB,OACPD,EAAaC,GACfH,KAAMrG,EAAmB6G,UACxB,CACDP,QAAS,SAACC,EAAiBC,GAAlB,OACPD,EAAaC,GACfH,KAAMrG,EAAmB8G,UACxB,CACDR,QAAS,SAACC,EAAiBC,GAAlB,OACPD,GAAcC,GAChBH,KAAMrG,EAAmB+G,iBACxB,CACDT,QAAS,SAACC,EAAiBC,GAAlB,OACPD,GAAcC,GAChBH,KAAMrG,EAAmBgH,iBACxB,CACDV,QAAS,SAACC,EAAiBC,GAAlB,OACLD,EAAWU,WAAWC,cAAcd,SAASI,EAAeS,WAAWC,gBAC3Ef,gBAAiB,CAAC1G,EAAS6B,QAC3B+E,KAAMrG,EAAmBmH,W,QCrEdC,EAAc,SACzBC,EACAC,EACAC,EACAC,GACE,IAAIC,EAAcJ,EAIlB,OAHIE,IACFE,EAAcC,EAAWL,EAAwBC,EAAYC,EAAuBC,IAE/EC,GAGLE,EAAY,aACLD,EAAa,SACxBL,EACAC,EACAC,EACAC,GACA,IAAMI,EAA6B,GACnC,IAAK,IAAMC,KAAQN,EACbA,EAAsBO,eAAeD,IAAQ,WAC/C,IAAME,EAAWF,EACXG,EAAkBT,EAA8BQ,GAChDE,EAAYZ,EAA+BU,IAAaJ,EAC1DO,qBAAWF,KACbJ,EAAsBC,GAAQ,SAACM,GAC7BH,EAAUG,EAAG,CACXF,WACAZ,yBACAC,aACAE,eAVyC,GAwBnD,OARwD,eACnDH,EADmD,GAEnDE,EAFmD,GAGnDK,EAHmD,GAInD,CACDQ,UAAU,GAAD,OAAKf,EAAuBe,WAAa,GAAzC,YAA+Cb,EAAsBa,WAAa,OC1CpFC,EAAuB,SAAC9E,EAAaD,GAgBhD,OAfuBC,EAAK+E,KAAI,SAACC,GAC/B,IAAMC,EAAE,eAAOD,GAYf,OAXAjF,EAAQ8B,SAAQ,SAACvC,GACf,IAAMI,EAAQD,EAASH,GACvB,GAAiB,MAAb2F,EAAGvF,GACL,OAAQJ,EAAE4F,UACR,KAAKhJ,EAAS6B,OAAQkH,EAAGvF,GAASuF,EAAGvF,GAAOgE,WAAY,MACxD,KAAKxH,EAASiH,OAAQ8B,EAAGvF,GAASyD,OAAO8B,EAAGvF,IAAS,MACrD,KAAKxD,EAASkH,KAAM6B,EAAGvF,GAAS,IAAI0D,KAAK6B,EAAGvF,IAAS,MACrD,KAAKxD,EAASgH,QAAS+B,EAAGvF,GAASyF,EAAUF,EAAGvF,QAI/CuF,MAKEE,EAAY,SAAC9C,GACxB,GAAqB,kBAAVA,EACT,OAAQA,EAAMsB,cAAcyB,QAC1B,IAAK,OAAQ,IAAK,MAAO,IAAK,IAAK,OAAO,EAC1C,IAAK,QAAS,IAAK,KAAM,IAAK,IAAK,KAAK,KAAM,OAAO,EAGzD,OAAOlC,QAAQb,IAGV,SAASsC,EAAWU,GACzB,OAAIA,aAA2BC,SC3BjC,IAWeC,EAX+C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtE,OACE,gCACG,YAAIC,MAAMF,IAAQT,KAAI,SAAC3G,EAAMK,GAAP,OACrBgH,EACE,sBAAIjG,IAAKf,EAAOoG,UAAU,kBAC1B,sBAAIrF,IAAKf,EAAOoG,UAAU,uBCmBrBc,EAzB0D,SAAC,GAGnE,IAFL3G,EAEI,EAFJA,OACAiF,EACI,EADJA,SAEM5B,EAAQrD,EAAO4G,eACrB,OACE,2BAAOC,WAAW,EAChBhB,UAAWhH,EAAeK,IAAIT,SAC9B+E,KAAK,WACLsD,IAAK,SAACC,GAAD,OAAUA,IAASA,EAAKC,cAAgB5D,EAAQC,KACrD4D,QAAS5D,IAAS,EAClB6D,SAAU,SAACC,GACT,IAAIP,EAAsBO,EAAMC,cAAcH,SAChC,IAAV5D,IACqB,IAAnBuD,IACFA,OAAiB1G,GAGrB,IAAMmH,EAAa,eAAOrH,EAAP,CAAe4G,mBAClC3B,EAAS7H,EAAW6E,gBAAiB,CAACjC,OAAQqH,QC1BzCC,EAAoB,SAACC,GAChC,OAAO,IAAInD,KAAKmD,EAAKC,UAAuC,IAA3BD,EAAKE,qBAA6BC,cAAcC,MAAM,KAAK,IC2B/EC,EArBuD,SAAC,GAGhE,IAFL5H,EAEI,EAFJA,OACAiF,EACI,EADJA,SAEMjB,EAAahE,EAAO4G,eACpBvD,EAAQW,GAAcsD,EAAkBtD,GAC9C,OACE,2BACE6B,UAAWhH,EAAeK,IAAIR,UAC9B8E,KAAK,OACLH,MAAOA,GAAS,GAChB6D,SAAU,SAACC,GACT,IAAMU,EAAcV,EAAMC,cAAc/D,MAClCuD,EAAiBiB,EAAc,IAAIzD,KAAKyD,GAAe,KACvDR,EAAa,eAAOrH,EAAP,CAAe4G,mBAClC3B,EAAS7H,EAAW6E,gBAAiB,CAACjC,OAAQqH,QCGvCS,EAnByD,SAAC,GAGlE,IAFL9H,EAEI,EAFJA,OACAiF,EACI,EADJA,SAEM5B,EAAQrD,EAAO4G,eACrB,OACE,2BACEf,UAAWhH,EAAeK,IAAIP,YAC9B6E,KAAK,SACLH,MAAiB,OAAVA,QAA4BnD,IAAVmD,EAAsB,GAAKA,EACpD6D,SAAU,SAACC,GACT,IAAMP,EAA+C,KAA9BO,EAAMC,cAAc/D,MAAec,OAAOgD,EAAMC,cAAc/D,OAAS,KACxFgE,EAAa,eAAOrH,EAAP,CAAe4G,mBAClC3B,EAAS7H,EAAW6E,gBAAiB,CAACjC,OAAQqH,QCIvCU,EAjByD,SAAC,GAGlE,IAFL/H,EAEI,EAFJA,OACAiF,EACI,EADJA,SAEA,OACE,2BACEzB,KAAK,OACLqC,UAAWhH,EAAeK,IAAIN,UAC9ByE,MAAOrD,EAAO4G,gBAAkB,GAChCM,SAAU,SAACC,GACT,IAAME,EAAa,eAAOrH,EAAP,CAAe4G,eAAgBO,EAAMC,cAAc/D,QACtE4B,EAAS7H,EAAW6E,gBAAiB,CAAEjC,OAAQqH,QCCxCW,EAT2D,SAACC,GACzE,OAAQA,EAAMjI,OAAOkG,UACnB,KAAKhJ,EAASgH,QAAS,OAAO,kBAAC,EAAqB+D,GACpD,KAAK/K,EAASkH,KAAM,OAAO,kBAAC,EAAkB6D,GAC9C,KAAK/K,EAASiH,OAAQ,OAAO,kBAAC,EAAoB8D,GAClD,QAAS,OAAO,kBAAC,EAAoBA,KCS1BC,EAlBoD,SAACD,GAAW,IAAD,EAGxEA,EADFjI,OAAUmI,EAFgE,EAEhEA,MAAOC,EAFyD,EAEzDA,cAEnB,OACE,sBAAID,MAAOA,EAAOtC,UAAU,oCAExBuC,EAAgBA,EAAcH,GAE5B,gBAAC,EACKA,KCmBDI,EArB6C,SAAC,GAItD,IAHLtH,EAGI,EAHJA,QACAkE,EAEI,EAFJA,SACAqD,EACI,EADJA,kBAEA,OACE,wBAAIzC,UAAU,uBACZ,kBAAC,EAAD,CAAYW,MAAO8B,IAClBvH,EAAQgF,KAAI,SAAC/F,GACZ,OACE,kBAAC,EAAD,CACEQ,IAAKR,EAAOQ,IACZR,OAAQA,EACRiF,SAAUA,SCqBPsD,EAxCkD,SAACN,GAAW,IAE/DO,EACRP,EADFjI,OAAUwI,SAEZ,GAAIA,EACF,OAAOA,EAASP,GALwD,IASxEjI,EAIEiI,EAJFjI,OATwE,EAatEiI,EAHFjI,OAAUyI,EAV8D,EAU9DA,MAAO1F,EAVuD,EAUvDA,cACjBkC,EAEEgD,EAFFhD,SAGIyD,EADFT,EADFU,cAEuCpL,EAAYqL,OAC/CC,EAAYH,EAAmB,WACnC,IAAMrB,EfAuC,SAACrH,GAChD,IAAM8I,EAAS,eAAO9I,GAEtB,OADA8I,EAAU/F,cAAgBpC,EAAqBmI,EAAU/F,eAClD+F,EeHiBC,CAAkC/I,GACxDiF,EAAS7H,EAAWqF,cAAe,CAAEzC,OAAQqH,UAC3CnH,EACJ,OACE,uBACE2F,UAAS,gCAA2B6C,EAAmB,aAAe,IACtEM,QAASH,GAET,4BAAOJ,GAEL1F,GAAiB2F,GACf,wBACE7C,UACE9C,IAAkBzF,EAAc2B,OAC5BJ,EAAeK,IAAIV,gBACnBK,EAAeK,IAAIX,sBCbtB0K,EAX2C,SAAChB,GAAW,IAExDE,EACRF,EADFjI,OAAUmI,MAEZ,OACE,sBAAIe,MAAM,MAAMf,MAAOA,EAAOtC,UAAWhH,EAAeK,IAAInB,WAC1D,gBAAC,EAAoBkK,KCmBZkB,EAvByC,SAAC,GAKlD,IAJLpI,EAII,EAJJA,QACAuH,EAGI,EAHJA,kBACArD,EAEI,EAFJA,SACA0D,EACI,EADJA,YAEA,OACE,wBAAI9C,UAAWhH,EAAeK,IAAIpB,UAChC,kBAAC,EAAD,CAAY0I,MAAO8B,IAClBvH,EAAQgF,KAAI,SAAC/F,GACZ,OACE,kBAAC,EAAD,CACEQ,IAAKR,EAAOQ,IACZR,OAAQA,EACRiF,SAAUA,EACV0D,YAAaA,SCzBnBS,EAAY,GA+BLC,EAAgB,SAAhBA,EAAiBC,GAAmC,IAArB9I,EAAoB,uDAAP,GACnD+I,EAAgB,GAapB,OAZAD,EAAQzG,SAAQ,SAACQ,EAAYmG,GAC3B,IAAMC,EAAQ,YAAOjJ,GACrBiJ,EAAS5J,KAAK2J,GACdD,EAAO1J,KAAK,CAAEuJ,YAAW5I,IAAKiJ,EAAUpG,MAAOmG,IAC3C9C,MAAMgD,QAAQrG,GAChBA,EAAMR,SAAQ,SAACzD,GACbmK,EAAO1J,KAAKT,MAGdmK,EAASA,EAAO5H,OAAO0H,EAAchG,EAAOoG,OAGzCF,GAGII,GAAsB,SAAtBA,EACX3I,EACA4I,EACAC,GAGS,IAFTC,EAEQ,uDAFe,EACvBC,EACQ,uCAEFC,GADNJ,EAAM,YAAOA,IACQK,QACrB,GAAID,EAAO,CACT,IAAMV,EAAUY,GAAQlJ,GAAM,SAAC5B,GAAD,OAAeA,EAAKyK,EAAUG,EAAMzJ,eAoBlE,OAnBA+I,EAAQzG,SAAQ,SAACQ,EAAO7C,GACtB,IAAM2J,EAAqBJ,GAAkBA,EAAehI,QAAO,SAACqI,GAAD,OAAQA,EAAGN,KAAkBtJ,KAGhG,IAF6B2J,GACxBA,EAAmBE,MAAK,SAACD,GAAD,OAAQA,EAAG9G,SAAWwG,EAAe,KACzC,CACvB,IAAMQ,EAAeX,EACnBtG,EACAuG,EACAC,EACAC,EAAe,EACfK,GAAsBA,EAAmBpI,QAAO,SAACqI,GAAD,OAAQA,EAAG9G,OAASwG,EAAe,MAEjFQ,GACFhB,EAAQiB,IAAI/J,EAAK8J,QAGnBhB,EAAQiB,IAAI/J,EAAK,OAGd8I,IAIEY,GAAU,SAAClJ,EAAawJ,GAAmD,IAAnCC,EAAkC,wDAC/E1E,EAAM,IAAI2E,IAchB,OAbA1J,EAAK6B,SAAQ,SAACzD,GACZ,IAAMoB,EAAMgK,EAAUpL,GACtB,GAAIqL,EACF1E,EAAIwE,IAAI/J,EAAK,QACR,CACL,IAAMmK,EAAa5E,EAAI6E,IAAIpK,GACtBmK,EAGDA,EAAW9K,KAAKT,GAFhB2G,EAAIwE,IAAI/J,EAAK,CAACpB,QAMf2G,GC/EM8E,GAdwC,SAAC,GAIjD,IAHL9J,EAGI,EAHJA,QACAuH,EAEI,EAFJA,kBACAwC,EACI,EADJA,UAEE,OACE,wBAAIjF,UAAU,wBACZ,wBAAIA,UAAU,kBAAkBkF,QAAShK,EAAQuC,OAASgF,GACvDwC,OCsBIE,GA/B8C,SAAC/C,GAAW,IAErEgD,EAOEhD,EAPFgD,gBACAjL,EAMEiI,EANFjI,OACUkL,EAKRjD,EALFjI,OAAUkL,OACVjG,EAIEgD,EAJFhD,SACAlF,EAGEkI,EAHFlI,YACAoL,EAEElD,EAFFkD,QACA9J,EACE4G,EADF5G,YAGIX,EAAQD,EAAST,GACjBqD,EAAQ8H,EAAQzK,GAChB0K,EAAgBF,EAASA,EAAO7H,IAAUD,EAAQC,IAAUA,EAAMqB,WAYlE2G,EAAWxG,EAV4C,CAC3DgB,UAAW,eACXmD,QAAS,WACP,GAAIjJ,IAAgB5C,EAAYiD,KAAM,CACpC,IAAMjC,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAWsE,WAAY,CAAEvD,YAKK8J,EAAOgD,EAAgB9M,KAAM8J,EAAMhD,UAChF,OACE,sBAASoG,EAAWD,GAAiB,0CCd1BE,GALiD,SAACrD,GAAW,IACxD9J,EAAW8J,EAArBjI,OAAU7B,KAClB,OAAOA,EAAOA,EAAK8J,GAAU,gBAAC,GAAaA,I,QCAhCsD,GAAyB,SAACC,EAAmBC,GAGxD,OAFAC,OAAOC,iBAAiBH,EAAWC,GAE5B,WACLC,OAAOE,oBAAoBJ,EAAWC,KCQ3BI,GAvBsD,SAAC,GAM/D,IALL7L,EAKI,EALJA,OACAiF,EAII,EAJJA,SACAvE,EAGI,EAHJA,MACAyK,EAEI,EAFJA,QACA9J,EACI,EADJA,YAEMgC,EAAQ8H,EAAQzK,GACtB,OACE,2BAAOmG,WAAW,EAChBhB,UAAWhH,EAAeK,IAAIT,SAC9B+E,KAAK,WACLsD,IAAK,SAACC,GAAD,OAAUA,IAASA,EAAKC,cAAgB5D,EAAQC,KACrD4D,QAAS5D,IAAS,EAClB6D,SAAU,SAACC,GAAD,OAAWlC,EAAS7H,EAAW+E,cAAe,CAACE,SAAS,eAAK8I,EAAN,gBAAgBzK,EAAQyG,EAAMC,cAAcH,aAC7G6E,OAAQ,WACN,IAAM3N,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAW0E,YAAa,CAAE3D,aCU5B4N,GA3BmD,SAAC,GAM5D,IALL/L,EAKI,EALJA,OACAiF,EAII,EAJJA,SACAvE,EAGI,EAHJA,MACAyK,EAEI,EAFJA,QACA9J,EACI,EADJA,YAEM2C,EAAamH,EAAQzK,GACrB2C,EAAQW,GAAcsD,EAAkBtD,GAC9C,OACE,2BACE6C,WAAW,EACXhB,UAAWhH,EAAeK,IAAIR,UAC9B8E,KAAK,OACLH,MAAOA,GAAS,GAChB6D,SAAU,SAACC,GACT,IAAMU,EAAsBV,EAAMC,cAAc/D,MAChD4B,EAAS7H,EAAW+E,cAAe,CAACE,SAAS,eAAK8I,EAAN,gBAAgBzK,EAAQmH,EAAc,IAAIzD,KAAKyD,GAAe,UAE5GiE,OAAQ,WACN,IAAM3N,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAW0E,YAAa,CAAE3D,aCG5B6N,GAzBqD,SAAC,GAM9D,IALLhM,EAKI,EALJA,OACAiF,EAII,EAJJA,SACAvE,EAGI,EAHJA,MACAyK,EAEI,EAFJA,QACA9J,EACI,EADJA,YAEMgC,EAAQ8H,EAAQzK,GACtB,OACE,2BAAOmG,WAAW,EAChBhB,UAAWhH,EAAeK,IAAIP,YAC9B6E,KAAK,SACLH,MAAiB,OAAVA,QAA4BnD,IAAVmD,EAAsB,GAAKA,EACpD6D,SAAU,SAACC,GACT,IAAM9E,EAAyC,KAA9B8E,EAAMC,cAAc/D,MAAec,OAAOgD,EAAMC,cAAc/D,OAAS,KACxF4B,EAAS7H,EAAW+E,cAAe,CAACE,SAAS,eAAK8I,EAAN,gBAAgBzK,EAAQ2B,OAEtEyJ,OAAQ,WACN,IAAM3N,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAW0E,YAAa,CAAE3D,aCE5B8N,GArBqD,SAAC,GAM9D,IALLjM,EAKI,EALJA,OACAiF,EAII,EAJJA,SACAvE,EAGI,EAHJA,MACAyK,EAEI,EAFJA,QACA9J,EACI,EADJA,YAEA,OACE,2BAAOwF,WAAW,EAChBrD,KAAK,OACLqC,UAAWhH,EAAeK,IAAIN,UAC9ByE,MAAO8H,EAAQzK,IAAU,GACzBwG,SAAU,SAACC,GAAD,OAAWlC,EAAS7H,EAAW+E,cAAe,CAACE,SAAS,eAAK8I,EAAN,gBAAgBzK,EAAQyG,EAAMC,cAAc/D,WAC7GyI,OAAQ,WACN,IAAM3N,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAW0E,YAAa,CAAE3D,aCJ5B+N,GATuD,SAACjE,GACrE,OAAQA,EAAMjI,OAAOkG,UACnB,KAAKhJ,EAASgH,QAAS,OAAO,kBAAC,GAAsB+D,GACrD,KAAK/K,EAASkH,KAAM,OAAO,kBAAC,GAAmB6D,GAC/C,KAAK/K,EAASiH,OAAQ,OAAO,kBAAC,GAAqB8D,GACnD,QAAS,OAAO,kBAAC,GAAqBA,KCE3BkE,GAViF,SAAClE,GAAW,IAClGmE,EAAYnE,EAAZmE,QAER,OACE,yBAAKvG,UAAU,mCACb,yBAAKA,UAAU,yBAAyBuG,KC4D/BC,GA7DoD,SAACpE,GAAW,IAE3EjI,EAQEiI,EARFjI,OACAU,EAOEuH,EAPFvH,MAEEF,EAKAyH,EANFjI,OACEQ,IAEF2K,EAGElD,EAHFkD,QACA9J,EAEE4G,EAFF5G,YACA4D,EACEgD,EADFhD,SAT0E,EAW/CqH,mBAASnB,GAXsC,mBAWrE9H,EAXqE,KAW9DkJ,EAX8D,KAatEC,ECrB0B,SAACrB,EAAczK,EAAe+L,GAC9D,GAAIA,EACF,OAAOA,EAAWtB,EAAQzK,GAAQyK,GDmBZuB,CAAmBrJ,EAAO3C,EAAOV,EAAOyM,YAK1DE,EAAQC,uBAAY,WACxB,IAAMzO,EAAa,CAAEoC,UAAWP,EAAOQ,IAAKnB,OAAQ8L,EAAQ9J,IAC5D4D,EAAS7H,EAAW0E,YAAa,CAAE3D,WAClC,CAAC8G,EAAUjF,EAAQmL,EAAS9J,IAEzBwL,EAAeD,uBAAY,WAC1BJ,IACCrB,EAAQ3K,KAAS6C,EAAM7C,IACzByE,EAAS7H,EAAW+E,cAAe,CAAEE,SAAS,eAAM8I,EAAP,mBAAsB3K,EAAM6C,EAAM7C,OAEjFmM,OAED,CAACH,EAAiBvH,EAAU0H,EAAOtJ,EAAO7C,EAAK2K,IAElD2B,qBAAU,WACR,OPrCiCC,EOqCLJ,EPrCgCK,EOqCzBH,EP3B9BtB,GAAuB,SATP,SAACpE,GAClBA,EAAM8F,UAAY5P,EAAa6P,KACjCH,IAGE5F,EAAM8F,UAAY5P,EAAa8P,OACjCH,OAP8B,IAACD,EAA2BC,IOsC3D,CAACL,EAAOE,IAEX,IAUMO,EAAU,eAAQnF,EAAR,GAAkB,CAChChD,SAXsB,SAACzD,EAAgBC,GAtBd,IAAC4L,EAuBtB7L,IAAWpE,EAAW0E,YACxB+K,IACSrL,IAAWpE,EAAW+E,eAzBPkL,EA0BL5L,EAAWY,SAzBhCkK,EAAYc,IA2BVpI,EAASzD,EAAQC,IAMnB0J,QAAU9H,IAGZ,OACE,oCACE,yBAAKwC,UAAS,yBAAoB2G,EAAkB,kCAAoC,KACtF,kBAAC,GAAuBY,GACvBZ,GAAmB,kBAAC,GAAD,CAA6BJ,QAASI,OE1CnDc,GAL+C,SAACrF,GAAW,IAChEsF,EAAWtF,EAAMjI,OAAjBuN,OACR,OAAOA,EAASA,EAAOtF,GAAU,gBAAC,GAAoBA,IC2BzCuF,GAzBqD,SAACvF,GAAW,IAE5EjI,EAGEiI,EAHFjI,OACUmI,EAERF,EAFFjI,OAAUmI,MACVrI,EACEmI,EADFnI,eAEF,OACE,sBAAIqI,MAAOA,EAAOtC,UAAWhH,EAAeK,IAAIf,MAC5C2B,EACE,gBAAC,GAAD,iBACMmI,EADN,CAEEvH,MAAOD,EAAST,MAIlB,gBAAC,GAAD,iBACMiI,EADN,CAEEvH,MAAOD,EAAST,QCGbyN,GA/BgD,SAAC,GASzD,IARLxC,EAQI,EARJA,gBACAlK,EAOI,EAPJA,QACAkE,EAMI,EANJA,SACAhE,EAKI,EALJA,cACAlB,EAII,EAJJA,YACA2N,EAGI,EAHJA,cACAvC,EAEI,EAFJA,QACA9J,EACI,EADJA,YAGMpB,E9Bd2B,SAACT,EAAkByB,GACpD,OAAOA,EAAcc,QAAO,SAACzB,GAAD,OAAOA,EAAEjB,SAAWG,K8BavBmO,CADLxC,EAAQ9J,GAC8BJ,GAC1D,OACE,oCACGF,EAAQgF,KAAI,SAAC/F,GAAD,OACX,kBAAC,GAAD,CACEA,OAAQA,EACRiL,gBAAiBA,EACjBlL,YAAaA,EACbD,eAAgBA,EAAeC,EAAaC,EAAQC,GACpDyN,cAAeA,EACflN,IAAKR,EAAOQ,IACZyE,SAAUA,EACVkG,QAASA,EACT9J,YAAaA,SCgBRuM,GAvBqC,SAAC3F,GAAW,IAE5DK,EAMEL,EANFK,kBACA6C,EAKElD,EALFkD,QACA9J,EAIE4G,EAJF5G,YACAwM,EAGE5F,EAHF4F,QACAvM,EAEE2G,EAFF3G,aACAwM,EACE7F,EADF6F,MAEItO,EAAc2L,EAAQ9J,GACtBqM,EAAgBpM,EAAa+I,MAAK,SAAC7H,GAAD,OAAOA,IAAMhD,KAC/CuO,EAAY,eAAO9F,EAAP,CAAcyF,gBAAelO,gBACzCwO,EAAiBH,GAAWA,EAAQE,GAC1C,OACE,wBAAIjH,IAAKgH,EAAOjI,UAAS,UAAKhH,EAAeK,IAAIjB,IAAxB,YAA+ByP,EAAgB7O,EAAeK,IAAIhB,YAAc,KACvG,kBAAC,EAAD,CAAYsI,MAAO8B,IAClB0F,EACG,wBAAInI,UAAWhH,EAAeK,IAAIf,MAAO6P,GACzC,kBAAC,GAAmBD,KCCfE,GA7B2C,SAAC,GAOpD,IANLlN,EAMI,EANJA,QACAmN,EAKI,EALJA,kBACAC,EAII,EAJJA,aACAvE,EAGI,EAHJA,OACAG,EAEI,EAFJA,eACA3I,EACI,EADJA,eAEA,OACE,wBAAIyE,UAAWhH,EAAeK,IAAIlB,UAChC,kBAAC,EAAD,CAAYwI,MAAO0H,IACnB,wBACErI,UAAU,kBACVkF,QAAShK,EAAQuC,OAAS4K,EAAoBtE,EAAOtG,QACnD,yBAAKuC,UAAU,2BACb,yBACEmD,QAAS,YjB3BG,SAACe,EAAyBoE,EAA4B/M,GAC9E,IAAMgN,EACJrE,EAAehI,QAAO,SAACqI,GAAD,OAAQiE,KAAKC,UAAUlE,KAAQiE,KAAKC,UAAUH,EAAa3N,QAC/E4N,EAAkB9K,SAAWyG,EAAezG,QAC9C8K,EAAkBvO,KAAKsO,EAAa3N,KAEtCY,EAAe,CAAE2I,eAAgBqE,IiBsBnBG,CAAWxE,EAAgBoE,EAAc/M,IAE3CyE,UAAWkE,EAAeM,MAAK,SAACD,GAAD,OAAQiE,KAAKC,UAAUlE,KAAQiE,KAAKC,UAAUH,EAAa3N,QACtF3B,EAAeK,IAAIb,uBAAyBQ,EAAeK,IAAId,0BAErE,yBAAKyH,UAAU,iBAAiBsI,EAAa9K,MAAMqB,gBCwChD8J,GAxEmD,SAACvG,GAAW,IAE1ElH,EAOEkH,EAPFlH,QACAC,EAMEiH,EANFjH,KAHyE,EASvEiH,EALF2B,cAJyE,MAIhE,GAJgE,IASvE3B,EAJF8B,sBALyE,MAKxD,GALwD,EAMzE3I,EAGE6G,EAHF7G,eACAC,EAEE4G,EAFF5G,YACAE,EACE0G,EADF1G,iBAGI6H,ElBuF0BA,EkBtF1BqF,EAAcC,iBAAyB,MAC7C5B,qBAAU,WACR,GAAI2B,GACCA,EAAYE,SACXpN,KACCA,EAAiBqN,aAClBrN,EAAiBsN,aAAe,CAClC,IAAMD,EAAaH,EAAYE,QAAQG,cAAgB,GACjDD,EACHJ,EAAYE,QAAQI,eAAiBN,EAAYE,QAAQI,cAAcD,cACrE,IACCE,EAAmB,aACvBJ,aACAC,eACGtN,GAELH,EAAe,CAAEG,iBAAkByN,OAEtC,CAACP,EAAarN,EAAgBG,IAEjC,IACI0N,EADAC,EAAkBlO,EAElBO,IACF0N,ECzC0B,SAAC1N,EAAoCP,GACjE,IAAMkO,EAAyB,GADkD,EAElD3N,EAAvB2B,sBAFyE,MAExD,EAFwD,IAGrD3B,EAAtBsN,mBAH2E,MAG7D,IAH6D,EAI7EM,EAAc,EACdC,EAAY,EAsBhB,OArBApO,EAAKqO,QAAO,SAACC,EAAKjM,GAChB,IAAMuL,EAAarN,EAAiBqN,WAEO,kBAAhCrN,EAAiBqN,WACtBrN,EAAiBqN,WACjBrN,EAAiBqN,WAAWvL,GAE9B,GAWJ,OAVIiM,GAAOpM,EAAiB0L,EACtBC,IAA8B,EAAbD,GACnBC,GAA4BD,EAC5BM,EAAgBrP,KAAKwD,IAErB+L,GAAaR,EAGfO,EAAcG,EAAMV,EAEfU,EAAMV,IACZ,GAEI,CACLO,cACAC,YACAF,mBDWcK,CAAehO,EAAkB2N,GAC/CA,EAAkBD,EAAYC,iBAEhC,IAAIM,EAAkBf,EACtB,OACE,oCACGQ,GAAe,wBAAI9G,MAAO,CAACsH,OAAQR,EAAYE,eAC/CD,EAAgBnJ,KAAI,SAACC,GACpB,GAAIA,EAAEoD,YAAcA,EAClB,OACE,kBAAC,GAAD,CACE5I,IAAKwF,EAAExF,IACP2N,aAAcnI,EACdjF,QAASA,EACTmN,kBAAmBlI,EAAExF,IAAI8C,OAAS,EAClCsG,OAAQA,EACRG,eAAgBA,EAChB3I,eAAgBA,IAGpB,IAAMyM,EACJ,kBAAC,GAAD,iBACM5F,EADN,CAEE6F,MAAO0B,EACPhP,IAAKwF,EAAE3E,GACP8J,QAASnF,KAIb,OADAwJ,OAAatP,EACN2N,KAGVoB,GAAe,wBAAI9G,MAAO,CAACsH,OAAQR,EAAYG,eE3CvCM,GAzBwC,SAACzH,GAAW,IAE/DjH,EAGEiH,EAHFjH,KACA2O,EAEE1H,EAFF0H,eACA/F,EACE3B,EADF2B,OAGF,IAAK5I,EAAKsC,QAAU2E,EAAM6C,UACxB,OAAO,kBAAC,GAAD,iBAAe7C,EAAf,CAAsB6C,UAAW7C,EAAM6C,aARgB,IAW1Df,EAAmB9B,EAAnB8B,eACA6F,EAAchG,EpBOQ,SAC5B5I,EACA4I,EACA+F,EACA5F,GACA,IAAMF,EAAiB,GACvB8F,EAAe9M,SAAQ,SAACvC,GAAD,OAAOuJ,EAAUvJ,EAAEE,KAAOC,EAASH,MAC1D,IAAMgJ,EAAUK,GAAoB3I,EAAM4I,EAAQC,EAAW,EAAGE,GAChE,OAAOV,EAAcC,GoBfQuG,CAAe7O,EAAM4I,EAAQ+F,EAAgB5F,GAAkB/I,EAI5F,OAHI4I,IAAWG,IACbA,EpBL6B,SAAC6F,GAChC,IAAM7F,EAA0B,GADgC,uBAEhE,YAAoB6F,EAApB,+CAAiC,CAAC,IAAvBvM,EAAsB,QAC3BA,EAAM+F,YAAcA,GACtBW,EAAelK,KAAKwD,EAAM7C,MAJkC,kFAOhE,OAAOuJ,EoBFY+F,CAAkBF,IAGjC,kBAAC,GAAD,iBACM3H,EADN,CAEEjH,KAAM4O,EACN7F,eAAgBA,MCoBTgG,GAb6C,SAAC9H,GAAW,IAC9DhD,EAAagD,EAAbhD,SACR,OACE,yBAAOY,UAAWhH,EAAeK,IAAItB,MAAOoS,SAAU,SAAC7I,GACrDlC,EAAS7H,EAAW6F,YAAa,CAAEE,UAAWgE,EAAMC,cAAcjE,UAAW8M,UAAW9I,EAAM8I,cAE9F,gBAAC,GACKhI,KCcCiI,GAAiD,SAACjI,GAAW,IAAD,EAUnEA,EARFgD,uBAFqE,MAEnD,GAFmD,IAUnEhD,EAPFhH,qBAHqE,MAGrD,GAHqD,IAUnEgH,EANFlI,mBAJqE,MAIvD5C,EAAYgT,KAJ2C,EAKrEC,EAKEnI,EALFmI,cACAxG,EAIE3B,EAJF2B,OACAyG,EAGEpI,EAHFoI,OAPqE,EAUnEpI,EAFF3G,oBARqE,MAQtD,GARsD,IAUnE2G,EADFU,mBATqE,MASvDpL,EAAY4S,KAT2C,EAWjEpP,EAAkBkH,EAAlBlH,QAASC,EAASiH,EAATjH,KACfA,EAAOqP,ErCvDiB,SAACtP,EAAmBC,EAAasP,GACzD,OAAOvP,EAAQsO,QAAO,SAACkB,EAAoBjQ,GAKzC,OAAOiQ,EAAY5O,OAAOX,EAAKe,QAJR,SAAC3C,GACtB,OAAOkB,EAAE+P,OAAS/P,EAAE+P,OAAOC,EAAYlR,EAAMkB,GAAKiQ,EAAYC,QAAQpR,GAAQ,GACzEA,EAAKqB,EAASH,IAAIoE,WAAWC,cAAcd,SAASyM,EAAW3L,qBAGrE,IqCgDa8L,CAAW1P,EAASC,EAAMqP,GAAUrP,EAEpDA,ErC/CwB,SAACA,EAAaD,GACtC,OAAOA,EAAQsO,QAAO,SAACkB,EAAavQ,GAClC,GAAIoD,EAAQpD,EAAO4G,gBAAmB,OAAO2J,EAC7C,IAAMG,EAAoB1Q,EAAO0Q,mBAC5BnN,EAA0BvD,EAAOkG,UAAarH,EAAeC,gBAC5D2E,EAAiBC,EAA0BrD,MAAK,SAACsQ,GAAD,OAAQD,IAAsBC,EAAG7M,QACvF,IAAKL,EACH,MAAM,IAAImN,MAAJ,WAAc5Q,EAAO0Q,kBAArB,oFAAkHhN,EAA0BqC,KAAI,SAACpC,GAAD,OAAOA,EAAEG,QAAM+M,KAAK,QAE5K,IAAM9M,EAAUN,EAAeM,QAC/B,OAAOwM,EAAYxO,QAAO,SAACiE,GACzB,IAAIhC,EAAagC,EAAEvF,EAAST,IACxBiE,EAAiBjE,EAAO4G,eAK5B,OAJI5G,EAAOkG,WAAahJ,EAASkH,OAC/BJ,EAAa,IAAII,KAAKJ,GAAY8M,SAAS,EAAG,EAAG,EAAG,GACpD7M,EAAiB,IAAIG,KAAKH,GAAgB6M,SAAS,EAAG,EAAG,EAAG,IAEvD/M,EAAQC,EAAYC,QAE5BjD,GqC4BI+P,CADP/P,EAAO8E,EAAqB9E,EAAMD,GACVA,GACxBC,ECnEsB,SAACD,EAAmBC,GAC1C,IAAMgQ,EAAejQ,EAAQV,MAAK,SAACL,GAAD,OAAYA,EAAO+C,iBACrD,IAAKiO,EAAgB,OAAOhQ,EAC5B,IAAMT,EAAYyQ,EAAaxQ,IACzByQ,EAAWD,EAAajO,gBAAkBzF,EAAc2B,OAC3D,SAACiS,EAAQC,GAAT,OAAoBD,EAAE3Q,GAAa4Q,EAAE5Q,IAAc,EAAI,GACrD,SAAC2Q,EAAQC,GAAT,OAAoBD,EAAE3Q,GAAa4Q,EAAE5Q,IAAc,EAAI,GAE5D,OADgB,YAAIS,GAAMoQ,KAAKH,GD4DxBI,CAAStQ,EAASC,GAEzB,IAAIsH,EAAoB,EACpBqH,EAA2B,GAC3B/F,IACFtB,EAAoBsB,EAAOtG,OAC3BqM,EAAiB5O,EAAQgB,QAAO,SAACzB,GAAD,OAAOsJ,EAAOS,MAAK,SAACiH,GAAD,OAAOA,EAAE/Q,YAAcD,EAAEE,UAC5EO,EAAUA,EAAQgB,QAAO,SAACzB,GAAD,OAAQsJ,EAAOS,MAAK,SAACiH,GAAD,OAAOA,EAAE/Q,YAAcD,EAAEE,WAGxE,IAAMyE,EAAWnE,EAAamH,GAExBsJ,EAAyD,CAC7D1L,UAAWhH,EAAeK,IAAIvB,OAG1B6T,EAAa3M,EAAY0M,EAAgBtJ,EAAOgD,EAAgBtN,MAAOsH,GAC7E,OACE,uBAAKY,UAAU,MACb,wBAAW2L,EACT,yBAAO3L,UAAWhH,EAAeK,IAAIrB,OACnC,gBAAC,EAAD,CACEyK,kBAAmBA,EACnBvH,QAASA,EACTkE,SAAUA,EACV0D,YAAaA,IAEdyH,IAAkB5S,EAAc6K,WAE7B,gBAAC,EAAD,CACEtH,QAASA,EACTkE,SAAUA,EACVqD,kBAAmBA,KAI3B,gBAAC,GAAD,iBACQL,EADR,CAEIlH,QAASA,EACTkK,gBAAiBA,EACjBjK,KAAMA,EACNC,cAAeA,EACflB,YAAaA,EACbuI,kBAAmBA,EACnBqH,eAAgBA,EAChB1K,SAAUA,EACV3D,aAAcA,QExGpBmQ,GAAY/K,MAAM,IAAIgL,UAAKxR,GAAW6F,KAC1C,SAAC4L,EAAGlS,GAAJ,MAAe,CACbmD,QAAQ,gBAAD,OAAkBnD,GACzBkD,QAAQ,gBAAD,OAAkBlD,GACzBmS,QAAQ,gBAAD,OAAkBnS,GACzBoS,QAAQ,gBAAD,OAAkBpS,OAIvBqS,GAAiD,SAAC,GAEjD,IADJ3G,EACG,EADHA,QAED,OACE,yBACE4G,IAAI,yBACJlM,UAAU,wBACVmM,IAAI,GACJhJ,QAAS,kBAAMiJ,MAAM,iBAAD,OAAkB5D,KAAKC,UAAUnD,SAKrD+G,GAAiD,SAAC,GAEjD,IADL/G,EACI,EADJA,QAASlG,EACL,EADKA,SAEV,OACG,yBACE8M,IAAI,0BACJlM,UAAU,wBACVmD,QAAS,kBAAM/D,EA/BC,SA+BuB,CAAEkG,aACzC6G,IAAI,MAKJG,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,WAAYrC,KAAM,SAAC8J,GAAD,OAAW,kBAAC,GAAcA,IAAUE,MAAO,CAAEiK,MAAO,GAAIC,UAAW,WAC5F,CAAE7R,IAAK,YAAaE,MAAO,UAAW+H,MAAO,WAAYvC,SAAUhJ,EAAS6B,QAC5E,CAAEyB,IAAK,YAAaE,MAAO,UAAW+H,MAAO,WAAYvC,SAAUhJ,EAAS6B,QAC5E,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,YAAarC,KAAM,SAAC8J,GAAD,OAAW,kBAAC,GAAcA,IAAWE,MAAO,CAAEiK,MAAO,GAAIC,UAAW,YAEhGhR,YAAa,WAiCAiR,GA9BqB,WAAO,IAAD,EACRhG,mBAAS6F,IADD,mBACjCI,EADiC,KACzBC,EADyB,OAMblG,mBAASmF,IANI,mBAMjCzQ,EANiC,KAM3ByR,EAN2B,KAmBxC,OACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eArBqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAqB3BlC,aAjBiC,SAACkB,GACpCoQ,EAAWpQ,IAiBTnB,QAduB,SAACiG,EAAOuL,GACjC,GA9DkB,WA8DdvL,EAAyB,CAC3B,IAAM9E,EAAWrB,EAAKe,QACpB,SAACiE,GAAD,OAAYA,EAAEmM,GAAY9Q,eAAiBqR,EAAUvH,QAAQgH,GAAY9Q,gBAC3EoR,EAAWpQ,SClEXoP,I,MAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,EAAMC,IAAK,0BAC9D,CAAEH,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,IAAK0O,IAAK,0BAC/F,CAAEH,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,IAAK0O,IAAK,0BAClG,CAAEH,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,EAAMC,IAAK,0BAC5D,CAAEH,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,EAAMC,IAAK,0BAC/D,CAAEH,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,IAAK0O,IAAK,4BA0B3FX,GAA4B,CAChCpR,QAAS,CACP,CACE5C,KAbuD,SAAC,GAEvD,IADLuC,EACI,EADJA,MAAOyK,EACH,EADGA,QAEP,OACE,6BACE,yBAAKtF,UAAU,oBAAoBkM,IAAK5G,EAAQzK,GAAQsR,IAAI,OAS5D9L,SAAUhJ,EAAS6B,OACnByB,IAAK,MACL2H,MAAO,CAAEiK,MAAO,OAChB3J,MAAO,SAET,CAAEvC,SAAUhJ,EAAS6B,OAAQyB,IAAK,OAAQiI,MAAO,OAAQN,MAAO,CAAEiK,MAAO,QACzE,CAAE5R,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,MAAOC,UAAW,UAC7F,CACElU,KAnCkD,SAAC,GAElD,IADKqC,EACN,EADJR,OAAUQ,IAAOE,EACb,EADaA,MAAOyK,EACpB,EADoBA,QAAS9J,EAC7B,EAD6BA,YAAa4D,EAC1C,EAD0CA,SAE9C,OACE,yBAAK+D,QAAS,WACZ,IAAM7K,EAAa,CAAEoC,UAAWC,EAAKnB,OAAQ8L,EAAQ9J,IACrD4D,EAAS7H,EAAWsE,WAAY,CAAEvD,WAEjCgN,EAAQzK,GAAS,SAAW,WA4B7BwF,SAAUhJ,EAASgH,QACnB1D,IAAK,SACL2H,MAAO,CAAEiK,MAAO,MAAOC,UAAW,UAClC5J,MAAO,WAET,CACEvC,SAAUhJ,EAASkH,KACnB8G,OAAQ,SAAC7H,GAAD,OAAiBA,GAASA,EAAM2P,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAC3G3S,IAAK,UACLiI,MAAO,aAGX1I,YAAa5C,EAAYiD,KACzBiB,YAAa,MAuBA+R,GApBkB,WAAO,IAAD,EACL9G,mBAAS6F,IADJ,mBAC9BI,EAD8B,KACtBC,EADsB,OAMVlG,mBAASmF,IANC,mBAM9BzQ,EAN8B,KAMxByR,EANwB,KAUrC,OACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAZqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAY3BlC,aARiC,SAACkB,GACpCoQ,EAAWpQ,QCxEToP,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAG3CjF,GAAkD,SAAC,GAAe,IAAdzC,EAAa,EAAbA,QACxD,OACE,6BACGA,EAAQrH,KADX,KACmBqH,EAAQyH,MAD3B,KACoCzH,EAAQ0H,OAAS,SAAW,SADhE,MAMEV,GAA4B,CAChCpR,QAAS,CACP,CACEmF,SAAUhJ,EAAS6B,OACnByB,IAAK,OACLuC,cAAezF,EAAcuD,QAC7BsH,MAAO,CAAEiK,MAAO,IAChB3J,MAAO,WAET,CAAEjI,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,SAErD0J,QAAS,SAAC5F,GAAD,OAAW,kBAAC,GAAYA,IACjC5G,YAAa,KACbsH,YAAapL,EAAYqL,QAiBZyK,GAdqB,WAAO,IAAD,EACR/G,mBAAS6F,IADD,mBACjCI,EADiC,KACzBC,EADyB,KAKxC,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eAPqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,SChC3BoO,I,MAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,KACrF,CAAEuO,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,KACxF,CAAEuO,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,OAyDjF+N,GAA4B,CAChCpR,QAAS,CACP,CAAEmF,SAAUhJ,EAAS6B,OAAQyB,IAAK,OAAQiI,MAAO,OAAQ8E,OAxDD,SAAC,GAEtD,IADK/M,EACN,EADJR,OAAUQ,IAAOa,EACb,EADaA,YAAa8J,EAC1B,EAD0BA,QAASlG,EACnC,EADmCA,SAEjC0H,EAAQ,WACZ,IAAMxO,EAAa,CAAEoC,UAAWC,EAAKnB,OAAQ8L,EAAQ9J,IACrD4D,EAAS7H,EAAW0E,YAAa,CAAE3D,UAHjC,EAKsBmO,mBAASnB,EAAQ3K,IALvC,mBAKG6C,EALH,KAKUiQ,EALV,KAMJ,OACE,yBAAKzN,UAAU,iBACb,2BACEA,UAAU,eACVrC,KAAK,OACLH,MAAOA,EACP6D,SAAU,SAACC,GAAD,OAAWmM,EAASnM,EAAMC,cAAc/D,UACpD,4BAAQwC,UAAU,iDAAiDmD,QAAS,WAC1E,IAAM3G,EAAQ,eAAQ8I,EAAR,mBAAuB3K,EAAM6C,IAC3C4B,EAAS7H,EAAW+E,cAAe,CAAEE,aACrCsK,MAHF,QAKA,4BAAQ9G,UAAU,mDAAmDmD,QAAS2D,GAA9E,YAoC6ExE,MAAO,CAAEiK,MAAO,UAC/F,CAAE5R,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,SAC3E,CACElM,SAAUhJ,EAASgH,QACnBqJ,OAnC4D,SAAC,GAE5D,IADK/M,EACN,EADJR,OAAUQ,IAAO2K,EACb,EADaA,QAAS9J,EACtB,EADsBA,YAAa4D,EACnC,EADmCA,SACnC,EAKsBqH,mBAASnB,EAAQ3K,IALvC,mBAKG6C,EALH,KAKUiQ,EALV,KAMJ,OACE,6BACE,4BACEzN,UAAU,eACVgB,WAAW,EACX0M,aAAclQ,EACdyI,OAAQ,WACN,IAAMzJ,EAAQ,eAAQ8I,EAAR,mBAAuB3K,EAAM6C,IAC3C4B,EAAS7H,EAAW+E,cAAe,CAAEE,aAb/B,WACZ,IAAMlE,EAAa,CAAEoC,UAAWC,EAAKnB,OAAQ8L,EAAQ9J,IACrD4D,EAAS7H,EAAW0E,YAAa,CAAE3D,SAY7BwO,IAEFzF,SAAU,SAACC,GACTmM,EAASE,EAAUrN,UAAUgB,EAAMC,cAAc/D,UAEnD,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,YAaF7C,IAAK,SACL2H,MAAO,CAAEiK,MAAO,QAChB3J,MAAO,UAET,CACEvC,SAAUhJ,EAASkH,KACnB8G,OAAQ,SAAC7H,GAAD,OAAiBA,GAASA,EAAM2P,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAC3G3S,IAAK,UACLiI,MAAO,aAGXxH,cAAe,CAAC,CAAEV,UAAW,OAAQlB,OAAQ,IAC7CU,YAAa5C,EAAYiD,KACzBiB,YAAa,MAwBAoS,GArBoB,WAAO,IAAD,EACPnH,mBAAS6F,IADF,mBAChCI,EADgC,KACxBC,EADwB,OAMZlG,mBAASmF,IANG,mBAMhCzQ,EANgC,KAM1ByR,EAN0B,KAUvC,OACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAZqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAY3BlC,aARiC,SAACkB,GACpCoQ,EAAWpQ,IAQT4I,gBAAiB,CAACtN,MAAO,CAACkI,UAAW,iCC3GrC4L,GAAY/K,MAAM,GAAGgL,UAAKxR,GAAW6F,KACzC,SAAC4L,EAAGlS,GAAJ,MAAe,CACbmD,QAAQ,gBAAD,OAAkBnD,GACzBkD,QAAQ,gBAAD,OAAkBlD,GACzBkT,GAAIlT,MAIFwJ,GAAsD,SAAC,GAEtD,IADKR,EACN,EADJzI,OAAUyI,MAEV,OACE,yBAAKN,MAAO,CAACuL,MAAO,QACjBjL,EADH,gBAME0J,GAA4B,CAChCpR,QAAS,CACP,CACEyH,SAAU,SAACP,GAAD,OAAW,kBAAC,GAAaA,IACnCzH,IAAK,UACL2H,MAAO,CAAEkK,UAAW,QACpB5J,MAAO,YAET,CACEjI,IAAK,UACLiI,MAAO,aAGXpH,YAAa,MAkBAsS,GAfwB,WAAO,IAAD,EACXrH,mBAAS6F,IADE,mBACpCI,EADoC,KAC5BC,EAD4B,KAM3C,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eARqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,SCzCZuQ,GACnB,WACSC,EACAC,EACArL,EACAsL,GAGuC,IAFvCC,EAEsC,uDAFrB,GACjBC,EACsC,uDADrB,GACjBC,EAAsC,iFANtCL,YAMsC,KALtCC,OAKsC,KAJtCrL,QAIsC,KAHtCsL,WAGsC,KAFtCC,SAEsC,KADtCC,SACsC,KAAtCC,sBACLC,KAAKH,OAASA,EAAS,gBACvBG,KAAKF,OAASA,EAAS,kB,4BCYdG,GAd2C,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACpC/H,mBAAS,IAD2B,mBACvEgI,EADuE,KACjEC,EADiE,KAO9E,OALAzH,qBAAU,WACR0H,MAAM,SAAD,OAAUH,EAAV,YAA0BA,EAA1B,SACFI,MAAK,SAACC,GAAD,OAASA,EAAIJ,UAClBG,MAAK,SAACE,GAAD,OAAcJ,EAAWI,QAChC,CAACN,IAEF,kBAAC,KAAD,CAAWxO,UAAU,uBAClByO,I,SChBDM,GAAOlJ,OAAOmJ,SAASC,SACzBC,GAAe,aACfC,GAAY,SAACC,EAAcC,KAC3BC,GAAa,SAACC,EAAkB5T,GAAuC,yDAC9D,cAAToT,KACFG,GAAe,kBAAMM,KAAQC,WAAW,kBAExCN,GAAY,SAACC,EAAcC,GACzBG,KAAQ9K,IAAR,aAAc0K,QAASC,IACvBG,KAAQE,SAASN,IAEnBE,GAAa,SAACC,EAAkB5T,GAAwC,IAAxBgU,EAAuB,uDAAP,GAC9DH,KAAQlO,MAAM,CACZ3F,SACA4T,WACAI,YCTN,IAsCeC,GAtCK,SAACC,GACnB,OAAO,WACL,OACE,6BACE,yBAAK7P,UAAU,qBACb,4BAAK6P,EAAKjN,OACV,kBAACiN,EAAK7B,UAAN,OAEF,yBAAKhO,UAAU,QACb,yBAAKA,UAAU,gBACb,yDACC6P,EAAKxB,qBACJ,oCACE,uBAAGrO,UAAU,6BACX8P,KAAMD,EAAKzB,OACXjL,QAAS,WAAQmM,GAAW,QAAS,aAAcO,EAAK5B,OACxD8B,IAAI,sBACJC,OAAO,UAJT,cAOA,oCAGJ,uBAAGhQ,UAAU,6BACX8P,KAAMD,EAAK1B,OACXhL,QAAS,WAAQmM,GAAW,QAAS,aAAcO,EAAK5B,OACxD8B,IAAI,sBACJC,OAAO,UAJT,eAQF,kBAAC,GAAD,CAAUxB,aAAcqB,EAAK3B,eCjCjCtC,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,KACrF,CAAEuO,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,KACxF,CAAEuO,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,EAAG,MAGjF+N,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,OAAQoJ,MAAO,CAAEiK,MAAO,QACzE,CAAE5R,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,SAC3E,CAAE5R,IAAK,SAAUiI,MAAO,SAAUvC,SAAUhJ,EAASgH,QAASiE,MAAO,CAAEiK,MAAO,QAC9E,CACElM,SAAUhJ,EAASkH,KACnB8G,OAAQ,SAAC7H,GAAD,OAAiBA,GAASA,EAAM2P,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAC3G3S,IAAK,UACLiI,MAAO,aAGXxH,cAAe,CAAC,CACdV,UAAW,OACXlB,OAAQ,IAEVU,YAAa5C,EAAYiD,KACzBiB,YAAa,MAuBAyU,GApBe,WAAO,IAAD,EACFxJ,mBAAS6F,IADP,mBAC3BI,EAD2B,KACnBC,EADmB,OAMPlG,mBAASmF,IANF,mBAM3BzQ,EAN2B,KAMrByR,EANqB,KAUlC,OACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAZqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAY3BlC,aARiC,SAACkB,GACpCoQ,EAAWpQ,QCzCF0T,I,OAA2B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cAC3CC,EAAmBF,EAAOjQ,KAAI,SAACH,GACnC,IAAMuQ,EAAOvQ,EAAE2B,KAAK6O,qBACdC,EAAezQ,EAAE2B,KAAK+O,kBAC5B,MAAO,CACLtV,KAAK,GAAD,OAAKqN,KAAKC,UAAU1I,EAAE5E,MAAM,SAACR,EAAK+V,GACpC,MAAmB,oBAARA,EACH,IAAN,OAAWA,EAAX,KAEKA,IACN,IACHhP,KAAM3B,EAAE2B,KACR8O,eACAG,SAAU5Q,EAAE4Q,SACZL,OACA3S,KAAMoC,EAAEpC,SAGZ,OACE,yBAAKqC,UAAU,UAAUqQ,EAAUnQ,KAAI,SAACH,EAAQjG,GAAT,OAEnC,yBAAKa,IAAKb,GACN,0BAAMkG,UAAS,eAAUD,EAAEpC,KAAKiT,WAAW,OAAS,SAAW,KAAO7Q,EAAEpC,MAD5E,IAEMoC,EAAE4Q,SAAW,yBAAK3Q,UAAU,QAAQD,EAAE5E,MACpC,0BAAMmH,MAAO,CAACuO,eAAgB,YAAaC,oBAAqB,UAAW3N,QAAS,WAAOiN,EAAcrQ,KAAzG,aAHR,IAIM,0BAAMC,UAAU,QAAhB,IAAyBD,EAAEuQ,KAAK,0BAAMtQ,UAAU,gBAAhB,IAAiCD,EAAEyQ,cAAnE,YCjBR5E,GAAY/K,MAAM,IAAIgL,UAAKxR,GAAW6F,KAC1C,SAAC4L,EAAGlS,GAAJ,MAAe,CACbmD,QAAQ,gBAAD,OAAkBnD,GACzBkD,QAAQ,gBAAD,OAAkBlD,GACzBmS,QAAQ,gBAAD,OAAkBnS,GACzBoS,QAAQ,gBAAD,OAAkBpS,GACzBkT,GAAIlT,MAIF0S,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,SAE1DgB,YAAa5C,EAAYiD,KACzBgQ,cAAe5S,EAAc6K,UAC7BhH,YAAa,KACbsH,YAAapL,EAAYqL,QAGrBqC,GAAmC,CACvC9M,KAAM,CACJ0H,UAAW,gBACXmD,QAAS,SAACpD,EAAGgR,IAEX3R,EADqC2R,EAA7B7R,WAAcE,UACb,kBAAmB,CAAE2R,mBAEhCC,cAAe,SAACjR,EAAGgR,GACjBA,EAAc3R,SAAS,wBAAyB,CAAE2R,mBAEpDE,cAAe,SAAClR,EAAGgR,GAAmB,IAC5B3R,EAAqC2R,EAArC3R,SAAUH,EAA2B8R,EAA3B9R,uBAClBG,EAAS,wBAAyB,CAAE2R,kBACpC9R,EAAuBkE,QAASpD,KAGpCjI,MAAO,CACLoZ,aAAc,SAACnR,EAAGgR,IAEhB3R,EADqB2R,EAAb3R,UACC,wBAAyB,CAAE2R,qBAuC3BI,GAlCc,WAAO,IAAD,EACD1K,mBAAS6F,IADR,mBAC1BI,EAD0B,KAClBC,EADkB,OAMNlG,mBAASmF,IANH,mBAM1BzQ,EAN0B,KAMpByR,EANoB,OAWFnG,mBAAS,IAXP,mBAW1B0J,EAX0B,KAWlBiB,EAXkB,KAejC,OACE,yBAAKpR,UAAU,eACb,kBAAC,GAAD,iBACM0M,EADN,CAEEvR,KAAMA,EACNI,eAlBmC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAkBzBlC,aAd+B,SAACkB,GACpCoQ,EAAWpQ,IAcPnB,QAVqB,SAACsC,EAAMkP,GAChCuE,GAAa,SAACC,GAAD,OAAiB,CAAE1T,OAAMxC,KAAM0R,EAAWnL,KAAM,IAAInD,KAAQoS,UAAU,IAAtE,mBAAkFU,QAU3FjM,gBAAiBA,MAEnB,kBAAC,GAAD,CAAW+K,OAAQA,EAAQC,cAAe,SAACvD,GACzC,IAAMyE,EAAS,YAAOnB,GACtBmB,EAAU9W,MAAK,SAACuF,GAAD,OAAOA,EAAE2B,OAASmL,EAAUnL,QAAMiP,UAAW,EAC5DS,EAAaE,Q,oBCjERC,GAAa,SAACpW,EAAae,GACtC,OAAQA,EAAOsV,UACb,IAAK,WAAY,OApBJ,SAACrW,EAAa5B,GAC7B,OAAKA,EAAKiE,OACHrC,EAAK5B,EAAKsB,OAAOiE,cAAcd,SAASzE,EAAKiE,MAAMsB,eAkBhC2S,CAAStW,EAAMe,GACvC,IAAK,iBAAkB,OAjBJ,SAACf,EAAa5B,GACnC,OAAKA,EAAKiE,QACFrC,EAAK5B,EAAKsB,OAAOiE,cAAcd,SAASzE,EAAKiE,MAAMsB,eAe3B4S,CAAevW,EAAMe,GACnD,IAAK,IAAK,OAdC,SAACf,EAAa5B,GAC3B,OAAKA,EAAKiE,OACHrC,EAAK5B,EAAKsB,OAAOgE,WAAWC,gBAAkBvF,EAAKiE,MAAMqB,WAAWC,cAYxD6S,CAAOxW,EAAMe,GAC9B,IAAK,KAAM,OAXI,SAACf,EAAa5B,GAC/B,OAAKA,EAAKiE,OACHrC,EAAK5B,EAAKsB,OAAOgE,WAAWC,gBAAkBvF,EAAKiE,MAAMqB,WAAWC,cASvD8S,CAAWzW,EAAMe,GACnC,IAAK,IAAK,OARD,SAACf,EAAa5B,GAAd,OAA4B4B,EAAK5B,EAAKsB,OAAStB,EAAKiE,MAQ5CqU,CAAK1W,EAAMe,GAC5B,IAAK,IAAK,OARD,SAACf,EAAa5B,GAAd,OAA4B4B,EAAK5B,EAAKsB,OAAStB,EAAKiE,MAQ5CsU,CAAK3W,EAAMe,GAC5B,QAAS,MAAM6O,MAAM,sBAIZgH,GAAc,SAAC5W,EAAa6W,EAAmBC,GAAjC,MACI,OAA5BD,EAAUlT,cAAyBoT,GAAc/W,EAAM8W,GAASE,GAAehX,EAAM8W,IAE3EC,GAAgB,SAAC/W,EAAa8W,GACzC,IAAMG,EAAeH,EAAMzI,QAAO,SAACkB,EAAkBnR,GACnD,GAAIA,EAAK0Y,MAAO,CACd,IAAMxO,EAAUsO,GAAY5W,EAAM5B,EAAKyY,UAAWzY,EAAK0Y,OACvD,OAAOvH,EAAY5O,OAAO2H,EAAQvH,QAAO,SAACiE,GAAD,OAAYuK,EAAYC,QAAQxK,GAAK,MAEhF,OAAOuK,EAAY5O,OAAOX,EAAKe,QAAO,SAACiE,GAAD,OAAYuK,EAAYC,QAAQxK,GAAK,GAAKoR,GAAWpR,EAAG5G,SAC7F,IACH,OAAO4B,EAAKe,QAAO,SAACiE,GAAD,OAAOiS,EAAapU,SAASmC,OAGrCgS,GAAiB,SAAChX,EAAa8W,GAC1C,OAAOA,EAAMzI,QAAO,SAACkB,EAAoBnR,GACvC,OAAIA,EAAK0Y,MAAgBF,GAAYrH,EAAanR,EAAKyY,UAAWzY,EAAK0Y,OAChEvH,EAAYxO,QAAO,SAACiE,GAAD,OAAcoR,GAAWpR,EAAG5G,QACrD4B,ICzCCyQ,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,aAAc8O,MAAO,GAAIC,QAAQ,GAChD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAG3CV,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,QACjD,CAAEyB,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,QACnD,CAAE3D,IAAK,SAAUiI,MAAO,SAAUvC,SAAUhJ,EAASgH,UAEvD7C,YAAa,MAGF6W,GAAS,CAAC,CACrBC,QAAS,OACTrU,KAAM,OACNsU,UAAW,CAAC,CACVD,QAAS,WACTrU,KAAM,YACL,CACDqU,QAAS,mBACTrU,KAAM,oBAEP,CACDqU,QAAS,QACTrU,KAAM,QACNsU,UAAW,CAAC,CACVD,QAAS,SACTrU,KAAM,KACL,CACDqU,QAAS,iBACTrU,KAAM,MACL,CACDqU,QAAS,YACTrU,KAAM,KACL,CACDqU,QAAS,YACTrU,KAAM,QAIG8F,GAAS,CAAC,CACrBuO,QAAS,MACTrU,KAAM,OACL,CACDqU,QAAS,KACTrU,KAAM,OAEK/B,GAAoC,CAC/C8V,UAAW,MACXC,MAAO,CACL,CACEpX,MAAO,OACPF,IAAK,IACL6W,SAAU,WACVhU,MAAO,OAET,CACE3C,MAAO,QACPF,IAAK,IACL6W,SAAU,IACVhU,MAAO,QA6BEgV,GAxBsB,WAAO,IAAD,EACT/L,mBAAS6F,IADA,mBAClCI,EADkC,KAC1BC,EAD0B,OAKLlG,mBAASvK,IALJ,mBAKlCuW,EALkC,KAKrBC,EALqB,KASnCN,EDrCkB,SAACjX,EAAcsX,GACvC,OAAOV,GAAY5W,EAAMsX,EAAYT,UAAWS,EAAYR,OCoCvC/G,CAAWU,GAAW6G,GAC3C,OACE,oCACE,yBAAKzS,UAAU,eACb,kBAAC,KAAkB,CAACqS,UAAQtO,UAAQ0O,cAAcE,qBAPzB,SAACC,GAC9BF,EAAaE,OAQX,kBAAC,GAAD,iBACMlG,EADN,CAEEvR,KAAMiX,EACN7W,eAhBmC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,UC7E3BoO,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,IACrF,CAAEuO,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,IAClF,CAAEuO,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,EAAG,IACpF,CAAEuO,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,KACnF,CAAEuO,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,KACtF,CAAEuO,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,IAClF,CAAEuO,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,MAGlFsU,GAA+D,SAAC,GAE/D,IADL1Y,EACI,EADJA,OAAQiF,EACJ,EADIA,SAEF0T,EAAoB,SAACtV,GACzB,OAAQA,GACN,IAAK,OAAQ,OAAO,EACpB,IAAK,QAAS,OAAO,EAEvB,OAAOA,GAET,OACE,6BACE,4BACEwC,UAAU,eACVgB,WAAW,EACX0M,aAAcvT,EAAO4G,eACrBM,SAAU,SAACC,GACTlC,EAAS7H,EAAW6E,gBAAiB,CAAEjC,OAAO,eAAKA,EAAN,CAAc4G,eAAgB+R,EAAkBxR,EAAMC,cAAc/D,aAEnH,4BAAQA,MAAM,KACd,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,SAAf,YAMFuV,GAA4D,SAAC,GAE5D,IADL5Y,EACI,EADJA,OAAQiF,EACJ,EADIA,SAER,OACE,4BACEY,UAAU,eACV0N,aAAcvT,EAAO0Q,kBACrBxJ,SAAU,SAACC,GACTlC,EAAS7H,EAAW6E,gBAAiB,CAAEjC,OAAO,eAAKA,EAAN,CAAc0Q,kBAAmBvJ,EAAMC,cAAc/D,YAEpG,4BAAQA,MAAO,KAAf,KACA,4BAAQA,MAAO,KAAM,KACrB,4BAAQA,MAAO,KAAM,KACrB,4BAAQA,MAAO,MAAO,MACtB,4BAAQA,MAAO,MAAO,QA8CtB8O,GAA4B,CAChCpR,QAAS,CACP,CACEmF,SAAUhJ,EAASgH,QACnBqJ,OAAQmL,GACRtQ,cAAesQ,GACf9R,gBAAgB,EAChBpG,IAAK,SACL2H,MAAO,CAACiK,MAAO,IACf3J,MAAO,UAET,CACEvC,SAAUhJ,EAAS6B,OACnBqJ,cAAe,kBAAM,sCACrB5H,IAAK,OACL2H,MAAO,CAACiK,MAAO,KACf3J,MAAO,QAET,CACEvC,SAAUhJ,EAASiH,OACnBiE,cA7DyD,SAAC,GAEzD,IADLpI,EACI,EADJA,OAAQiF,EACJ,EADIA,SAER,OACE,6BACE,kBAAC,GAAD,CAAiBjF,OAAQA,EAAQiF,SAAUA,IAC3C,2BACEsO,aAAcvT,EAAO4G,eACrBuB,MAAO,CAACiK,MAAO,IACflL,SAAU,SAACC,GACT,IAAMP,EAA+C,KAA9BO,EAAMC,cAAc/D,MAAec,OAAOgD,EAAMC,cAAc/D,OAAS,KAC9F4B,EAAS7H,EAAW6E,gBAAiB,CAAEjC,OAAO,eAAKA,EAAN,CAAc4G,sBAE7DpD,KAAK,aAiDPkN,kBAAmB,KACnB9J,eAAgB,GAChBpG,IAAK,QACL2H,MAAO,CAACiK,MAAO,KACf3J,MAAO,SAET,CACEvC,SAAUhJ,EAASkH,KACnBgE,cAnDuD,SAAC,GAEvD,IADLpI,EACI,EADJA,OAAQiF,EACJ,EADIA,SAEFjB,EAAahE,EAAO4G,eACpBvD,EAAQW,GAAc6U,EAAUvR,kBAAkBtD,GACxD,OACE,6BACE,kBAAC,GAAD,CAAiBhE,OAAQA,EAAQiF,SAAUA,IAC3C,2BACEzB,KAAK,OACLH,MAAOA,GAAS,GAChB6D,SAAU,SAACC,GACT,IAAMU,EAAcV,EAAMC,cAAc/D,MAClCuD,EAAiBiB,EAAc,IAAIzD,KAAKyD,GAAe,KACvDR,EAAa,eAAOrH,EAAP,CAAe4G,mBAClC3B,EAAS7H,EAAW6E,gBAAiB,CAACjC,OAAQqH,SAqClDqJ,kBAAmB,KACnB9J,eAAgB,IAAIxC,KAAK,KAAM,GAAI,IACnC8G,OAAQ,SAAC7H,GAAD,OAAiBA,GAASA,EAAM2P,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAC3G3S,IAAK,UACL2H,MAAO,CAACiK,MAAO,KACf3J,MAAO,aAGX1I,YAAa5C,EAAYiD,KACzBgQ,cAAe5S,EAAc6K,UAC7BhH,YAAa,MAiBAyX,GAd6B,WAAO,IAAD,EAChBxM,mBAAS6F,IADO,mBACzCI,EADyC,KACjCC,EADiC,KAKhD,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eAPqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,SChJ3BoO,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,IACrF,CAAEuO,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,IAClF,CAAEuO,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,IACrF,CAAEuO,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,IACnF,CAAEuO,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,EAAME,QAAS,IAAI3O,KAAK,KAAM,GAAI,KACtF,CAAEuO,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,EAAOE,QAAS,IAAI3O,KAAK,KAAM,GAAI,KAG9E+N,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,OAAQgE,cAAezF,EAAcuD,QAAS+F,eAAgB,aAC/G,CAAEpG,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,QACnD,CAAE3D,IAAK,SAAUiI,MAAO,SAAUvC,SAAUhJ,EAASgH,SACrD,CACEgC,SAAUhJ,EAASkH,KACnB8G,OAAQ,SAAC7H,GAAD,OAAiBA,GAASA,EAAM2P,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAC3G3S,IAAK,UACLiI,MAAO,aAGX2H,cAAe5S,EAAc6K,UAC7BhH,YAAa,MAiBA0X,GAdiB,WAAO,IAAD,EACJzM,mBAAS6F,IADL,mBAC7BI,EAD6B,KACrBC,EADqB,KAKpC,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eAPqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,SC5BpB2V,GAAc,SACzBC,GAEI,IADJ/D,EACG,uDADqB,GAGxB,OAAO,SAACjN,GAKN,OAJA6E,qBAAU,WACRkI,GAAU/M,EAAM4M,SAASqE,SAAUhE,KAClC,CAACjN,EAAM4M,SAASqE,WAEZ,kBAACD,EAAqBhR,KCV3BwJ,GAAY,CAChB,CAAEkB,GAAI,EAAGnP,KAAM,MAAOM,KAAM,MAAOqV,QAAS,iBAAkBC,IAAK,GACnE,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,MAAOqV,QAAS,aAAcC,IAAK,GAC/D,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,QAASqV,QAAS,SAAUC,IAAK,IAC7D,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,YAAaqV,QAAS,iBAAkBC,IAAK,GACzE,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,OAAQqV,QAAS,iBAAkBC,IAAK,IAGhEjH,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,QACjD,CAAEyB,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,QACjD,CAAEyB,IAAK,UAAWiI,MAAO,UAAWvC,SAAUhJ,EAAS6B,QACvD,CAAEyB,IAAK,MAAOiI,MAAO,MAAOvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,SAEzErS,YAAa5C,EAAYiD,KACzBwJ,OAAQ,CAAC,CAAErJ,UAAW,WAAa,CAAEA,UAAW,SAChDc,YAAa,MAsBAgY,GAnBgB,WAAO,IAAD,EACH/M,mBAAS6F,IADN,mBAC5BI,EAD4B,KACpBC,EADoB,OAKRlG,mBAASmF,IALD,mBAK5BzQ,EAL4B,KAKtByR,EALsB,KASnC,OACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAXqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAW3BlC,aARiC,SAACkB,GACpCoQ,EAAWpQ,QC3BToP,GAAY/K,MAAM,MAAOgL,UAAKxR,GAAW6F,KAC7C,SAAC4L,EAAGlS,GAAJ,MAAe,CACbmD,QAAQ,gBAAD,OAAkBnD,GACzBkD,QAAQ,gBAAD,OAAkBlD,GACzBmS,QAAQ,gBAAD,OAAkBnS,GACzBoS,QAAQ,gBAAD,OAAkBpS,GACzBkT,GAAIlT,MAIF0S,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,SAE1DgB,YAAa5C,EAAYiD,KACzBiB,YAAa,KACbsH,YAAapL,EAAYqL,OACzBrH,iBAAkB,IA2BL+X,GAvBgB,WAAO,IAAD,EACHhN,mBAAS6F,IADN,mBAC5BI,EAD4B,KACpBC,EADoB,OAMRlG,mBAASmF,IAND,mBAM5BzQ,EAN4B,KAMtByR,EANsB,KAWnC,OACE,oCACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAdmC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAczBlC,aAV+B,SAACkB,GACpCoQ,EAAWpQ,SChCToP,GAAY/K,MAAM,KAAOgL,UAAKxR,GAAW6F,KAC7C,SAAC4L,EAAGlS,GAAJ,MAAe,CACbmD,QAAQ,gBAAD,OAAkBnD,EAAQ,IAA1B,MACPkD,QAAQ,gBAAD,OAAkBlD,EAAQ,GAA1B,KACPmS,QAAQ,gBAAD,OAAkBnS,GACzBoS,QAAQ,gBAAD,OAAkBpS,GACzBkT,GAAIlT,MAIF0S,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,QACxD,CAAEyB,IAAK,UAAWiI,MAAO,WAAYvC,SAAUhJ,EAAS6B,SAE1D6K,OAAQ,CAAC,CAAErJ,UAAW,WAAY,CAAEA,UAAW,YAC/Cc,YAAa,KACbsH,YAAapL,EAAYqL,OACzBrH,iBAAkB,IAqBLgY,GAjBwB,WAAO,IAAD,EACXjN,mBAAS6F,IADE,mBACpCI,EADoC,KAC5BC,EAD4B,KAM3C,OACE,oCACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eATmC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,UC3B3BoO,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAG3CV,GAA4B,CAChCpR,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,OAAQoJ,MAAO,CAAEiK,MAAO,QACzE,CAAE5R,IAAK,QAASiI,MAAO,QAASvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,QAC3E,CACElM,SAAUhJ,EAASgH,QACnB1D,IAAK,SACL6P,OAAQ,SAACC,EAAYnF,GACnB,MAAuB,UAAfmF,IAA2BnF,EAAQ0H,QAA2B,SAAfvC,GAAyBnF,EAAQ0H,QAE1FpK,MAAO,WAGXqC,UAAW,iBAAM,iBACjBzJ,YAAa,KACbgP,OAAQ,aAsBKmJ,GAnBc,WAAO,IAAD,EACDlN,mBAAS6F,IADR,mBAC1BI,EAD0B,KAClBC,EADkB,KAE3BpR,EAAmC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,KAE/B,OACE,oCACE,2BAAOG,KAAK,SAAS+P,aAAchB,EAAOlC,OAAQnJ,SAAU,SAACC,GAC3D/F,EAAe,CAAEiP,OAAQlJ,EAAMC,cAAc/D,SAC5CwC,UAAU,gBACb,kBAAC,GAAD,iBACM0M,EADN,CAEEvR,KAAMyQ,GACNrQ,eAAgBA,OCxClBqQ,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAsB3CV,GAA4B,CAChCpR,QAAS,CACP,CACEwM,OAtBuD,SAAC,GAEvD,IADLpC,EACI,EADJA,QAAS9J,EACL,EADKA,YAAa4D,EAClB,EADkBA,SAAUyI,EAC5B,EAD4BA,cAEhC,OACE,2BACElK,KAAK,WACLyD,QAASyG,EACTxG,SAAU,SAACC,GACT,IAAM3H,EAAc2L,EAAQ9J,GACxB8F,EAAMC,cAAcH,QACtBhC,EAAS7H,EAAWkF,UAAW,CAAE9C,gBAEjCyF,EAAS7H,EAAWmF,gBAAiB,CAAE/C,oBAW3CW,YAAY,EACZK,IAAK,aAEP,CACE0F,SAAUhJ,EAAS6B,OACnByB,IAAK,OACLuC,cAAezF,EAAcuD,QAC7BsH,MAAO,CAAEiK,MAAO,OAChB3J,MAAO,QAET,CAAEjI,IAAK,QAASiI,MAAO,QAASN,MAAO,CAAEiK,MAAO,OAASlM,SAAUhJ,EAASiH,QAC5E,CAAE3D,IAAK,SAAUiI,MAAO,SAAUvC,SAAUhJ,EAASgH,UAEvD7C,YAAa,KACbC,aAAc,CAAC,EAAG,GAClBqH,YAAapL,EAAYqL,QAiBZ6Q,GAdiB,WAAO,IAAD,EACJnN,mBAAS6F,IADL,mBAC7BI,EAD6B,KACrBC,EADqB,KAKpC,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eAPqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,SCrD3BoO,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,GAC/C,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAG3CV,GAA4B,CAChCpR,QAAS,CACP,CACEmF,SAAUhJ,EAAS6B,OACnByB,IAAK,OACLuC,cAAezF,EAAcuD,QAC7BsH,MAAO,CAAEiK,MAAO,OAChB3J,MAAO,QAET,CAAEjI,IAAK,QAASiI,MAAO,QAASN,MAAO,CAAEiK,MAAO,OAASlM,SAAUhJ,EAASiH,QAC5E,CAAE3D,IAAK,SAAUiI,MAAO,SAAUvC,SAAUhJ,EAASgH,UAEvD7C,YAAa,KACbsH,YAAapL,EAAYqL,QAiBZ8Q,GAde,WAAO,IAAD,EACFpN,mBAAS6F,IADP,mBAC3BI,EAD2B,KACnBC,EADmB,KAKlC,OACE,kBAAC,GAAD,iBACMD,EADN,CAEEvR,KAAMyQ,GACNrQ,eAPqC,SAACiC,GACxCmP,EAAc,eAAID,EAAL,GAAgBlP,S,oBC1B3BrC,GAAOqN,KAAKsL,MAAMC,aAAaC,QAAQ,4BAA8B,MARrD,CACpB,CAAElH,GAAI,EAAGnP,KAAM,MAAOM,KAAM,MAAOqV,QAAS,iBAAkBC,IAAK,GACnE,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,MAAOqV,QAAS,aAAcC,IAAK,GAC/D,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,QAASqV,QAAS,SAAUC,IAAK,IAC7D,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,YAAaqV,QAAS,iBAAkBC,IAAK,GACzE,CAAEzG,GAAI,EAAGnP,KAAM,MAAOM,KAAM,OAAQqV,QAAS,iBAAkBC,IAAK,IAavDU,GARK,CAClBlP,IAAK,WACH,OAAO5J,IAET+Y,KAAM,SAAC3X,GACLwX,aAAaI,QAAQ,0BAA2B3L,KAAKC,UAAUlM,MCR7D6X,GAAgB,CACpBlZ,QAAS,CACP,CAAEP,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,QACjD,CAAEyB,IAAK,OAAQiI,MAAO,OAAQvC,SAAUhJ,EAAS6B,QACjD,CAAEyB,IAAK,UAAWiI,MAAO,UAAWvC,SAAUhJ,EAAS6B,QACvD,CAAEyB,IAAK,MAAOiI,MAAO,MAAOvC,SAAUhJ,EAASiH,OAAQgE,MAAO,CAAEiK,MAAO,SAEzErS,YAAa5C,EAAYiD,KACzBgQ,cAAe5S,EAAc6K,UAC7BuB,OAAQ,CAAC,CAAErJ,UAAW,WAAa,CAAEA,UAAW,SAChDc,YAAa,KACbsH,YAAapL,EAAYqL,QAGrBsR,GAAa,kCACb/H,GAAyB,eAAO8H,GAAP,GAAyB5L,KAAKsL,MAAMC,aAAaC,QAAQK,KAAe,MA+BxFC,GA7BoB,WAAO,IAAD,EACP7N,mBAAS6F,IADF,mBAChCI,EADgC,KACxBC,EADwB,OASZlG,mBAASwN,GAAYlP,OATT,mBAShC5J,EATgC,KAS1ByR,EAT0B,KAgBvC,OACE,oCACE,4BAAQzJ,QAAS,kBAAM0C,OAAOmJ,SAASuF,UAAUvU,UAAU,eAA3D,eACA,kBAAC,GAAD,iBACM0M,EADN,CAEEvR,KAAMA,EACNI,eApBmC,SAACiC,GACxC,IAAMgX,EAAS,eAAO9H,EAAP,GAAkBlP,GACjCmP,EAAc,eAAID,EAAL,GAAgBlP,IAE7BuW,aAAaI,QAAQE,GAAY7L,KAAKC,UAAU+L,KAiB5ClZ,aAb+B,SAAOkB,GAAP,UAAA6O,EAAAoJ,OAAA,gDACnC7H,EAAWpQ,GAEXyX,GAAYC,KAAK1X,GAHkB,2CC5BjCoP,GAAmB,CACvB,CAAEkB,GAAI,EAAG7O,KAAM,gBAAiB8O,MAAO,GAAIC,QAAQ,GACnD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,IAAKC,QAAQ,GAChD,CAAEF,GAAI,EAAG7O,KAAM,eAAgB8O,MAAO,GAAIC,QAAQ,GAClD,CAAEF,GAAI,EAAG7O,KAAM,cAAe8O,MAAO,GAAIC,QAAQ,GACjD,CAAEF,GAAI,EAAG7O,KAAM,iBAAkB8O,MAAO,GAAIC,QAAQ,GACpD,CAAEF,GAAI,EAAG7O,KAAM,YAAa8O,MAAO,GAAIC,QAAQ,IAG3CV,GAA4B,CAChCpR,QAAS,CACP,CACEmF,SAAUhJ,EAAS6B,OACnByB,IAAK,OACL2H,MAAO,CAAEiK,MAAO,OAChB3J,MAAO,OACPgE,WAAY,SAACpJ,EAAY8H,GACvB,IAAK9H,EACH,MAAM,yBAIZ,CACE6C,SAAUhJ,EAASiH,OACnB3D,IAAK,QACL2H,MAAO,CAAEiK,MAAO,QAChB3J,MAAO,QACPgE,WAAY,SAACpJ,EAAY8H,GACvB,OAAI9H,EAAQ,IACJ,+BAEHA,OAAL,EACQ,yBAIZ,CACE6C,SAAUhJ,EAASgH,QACnB1D,IAAK,SACLiI,MAAO,WAGXxH,cAAe,CAAC,CACdV,UAAW,QACXlB,OAAQ,IAEVU,YAAa5C,EAAYiD,KACzBiB,YAAa,MAyBAkZ,GAtBkB,WAAO,IAAD,EACLjO,mBAAS6F,IADJ,mBAC9BI,EAD8B,KACtBC,EADsB,OAMVlG,mBAASmF,IANC,mBAM9BzQ,EAN8B,KAMxByR,EANwB,KAUrC,OACE,oCACE,kBAAC,GAAD,iBACMF,EADN,CAEEvR,KAAMA,EACNI,eAbmC,SAACiC,GACxCmP,EAAc,eAAKD,EAAN,GAAiBlP,KAa1BlC,aAT+B,SAACkB,GACpCoQ,EAAWpQ,SCpCf0S,KAEA,IAqBMyF,GArBgB,CACpB,IAAI5G,GAAKtB,GAAmB,kBAAmB,iBAAkB,oBAAqB,sDAAuD,uDAC7I,IAAIsB,GAAKR,GAAgB,eAAgB,cAAe,iBAAkB,mDAAoD,oDAC9H,IAAIQ,GAAKP,GAAmB,mBAAoB,aAAc,oBAAqB,uDAAwD,wDAC3I,IAAIO,GAAKH,GAAkB,iBAAkB,gBAAiB,mBAAoB,qDAAsD,sDACxI,IAAIG,GAAKD,GAAsB,sBAAuB,qBAAsB,uBAAwB,0DAA2D,2DAC/J,IAAIC,GAAKkC,GAAa,WAAY,UAAW,cAAe,+CAAgD,gDAC5G,IAAIlC,GAAKoD,GAAY,UAAW,SAAU,aAAc,8CAA+C,+CACvG,IAAIpD,GAAKyE,GAAoB,mBAAoB,kBAAmB,qBAAsB,uDAAwD,wDAClJ,IAAIzE,GAAKkF,GAA2B,4BAA6B,6BAA8B,4BAA6B,gEAAiE,iEAC7L,IAAIlF,GAAKmF,GAAe,cAAe,aAAc,gBAAiB,kDAAmD,mDACzH,IAAInF,GAAKyF,GAAc,YAAa,WAAY,eAAgB,gDAAiD,iDAAiD,GAClK,IAAIzF,GAAK0F,GAAc,aAAc,aAAc,eAAgB,iDAAkD,kDACrH,IAAI1F,GAAK2F,GAAsB,sBAAuB,qBAAsB,uBAAwB,0DAA2D,2DAA2D,GAC1N,IAAI3F,GAAK4F,GAAY,UAAW,SAAU,aAAc,8CAA+C,+CACvG,IAAI5F,GAAK6F,GAAe,aAAc,YAAa,gBAAiB,iDAAkD,kDACtH,IAAI7F,GAAK8F,GAAa,WAAY,UAAW,cAAe,+CAAgD,gDAC5G,IAAI9F,GAAKuG,GAAkB,iBAAkB,gBAAiB,mBAAoB,qDAAsD,IAAI,GAC5I,IAAIvG,GAAK2G,GAAgB,cAAe,aAAc,iBAAkB,kDAAmD,oDAGzGxU,KAAI,SAACC,GACvB,MAAQ,CACNyU,cAAehF,GAAYzP,GAC3BlC,KAAMkC,EAAE+N,SACRD,KAAM9N,EAAE8N,KACRrL,MAAOzC,EAAEyC,UAqEEiS,GAjES,WACtB,OACE,kBAAC,IAAD,KACE,yBAAK7U,UAAU,SACb,6BACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACb,uCACA,uBAAG8P,KAAK,+CACN3M,QAAS,WAAQmM,GAAW,QAAS,iBACrC,yBAAKpD,IAAI,+BAA+BC,IAAI,MAE9C,uBAAG2D,KAAK,yCACN3M,QAAS,WAAQmM,GAAW,QAAS,cACrC,yBAAKpD,IAAI,4BAA4BC,IAAI,OAG7C,wBAAInM,UAAU,QAEZ2U,GAAMzU,KAAI,SAACzF,GAAD,OACR,wBAAIE,IAAKF,EAAEwD,MACP,kBAAC,IAAD,CAAS6W,GAAIra,EAAEwT,KAAM8G,gBAAgB,UACnC,0BAAM/U,UAAU,eACd,0BAAMA,UAAU,aAAY,yBAAKkM,IAAG,uBAAkBzR,EAAEwD,KAApB,QAAgCkO,IAAI,MACxE,0BAAMnM,UAAU,qBAAqBvF,EAAEmI,eAQrD,yBAAK5C,UAAU,oBACb,6BACE,uBAAG8P,KAAK,sCACNC,IAAI,sBACJC,OAAO,SACP7M,QAAS,WAAQmM,GAAW,QAAS,eAAgB,UACnD,yBAAKpD,IAAI,wBAAwBC,IAAI,KAJzC,mCAQF,6BACE,uBAAG2D,KAAK,wCACNC,IAAI,sBACJC,OAAO,SACP7M,QAAS,WAAQmM,GAAW,QAAS,eAAgB,WACnD,yBAAKpD,IAAI,wBAAwBC,IAAI,KAJzC,kCAUN,8BAEIwI,GAAMzU,KAAI,SAACzF,GAAD,OACR,kBAAC,IAAD,CAAOE,IAAKF,EAAEwD,KAAMgQ,KAAMxT,EAAEwT,KAAMD,UAAWmF,GAAY1Y,EAAEma,wBCxG1DI,GANO,WACpB,OACE,kBAAC,GAAD,OCIgB3W,QACW,cAA7BwH,OAAOmJ,SAASC,UAEe,UAA7BpJ,OAAOmJ,SAASC,UAEhBpJ,OAAOmJ,SAASC,SAASgG,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5G,MAAK,SAAC6G,GAClCA,EAAaC,iB","file":"static/js/main.491b610a.chunk.js","sourcesContent":["export enum DataType {\r\n  Boolean = 'boolean',\r\n  Date = 'date',\r\n  Number = 'number',\r\n  Object = 'object',\r\n  String = 'string',\r\n}\r\n\r\nexport enum EditingMode {\r\n  None = 'none',\r\n  Cell = 'cell',\r\n}\r\n\r\nexport enum ActionType {\r\n  CloseEditor = 'CloseEditor',\r\n  ChangeFilterRow = 'ChangeFilterRow',\r\n  OpenEditor = 'OpenEditor',\r\n  ChangeRowData = 'ChangeRowData',\r\n  DeselectRowData = 'DeselectRowData',\r\n  SelectRow = 'SelectRow',\r\n  ScrollTable = 'ScrollTable',\r\n  ChangeSorting = 'ChangeSorting',\r\n}\r\n\r\nexport enum KeyboardEnum {\r\n  Esc = 27,\r\n  Enter = 13,\r\n}\r\n\r\nexport enum SortDirection {\r\n  Ascend = 'ascend',\r\n  Descend = 'descend',\r\n}\r\n\r\nexport enum SortingMode {\r\n  None = 'none',\r\n  Single = 'single',\r\n}\r\n\r\nexport enum FilteringMode {\r\n  None = 'none',\r\n  FilterRow = 'filterRow',\r\n}\r\n\r\nexport enum FilterOperatorName {\r\n  Equal = '=',\r\n  MoreThan = '>',\r\n  LessThan = '<',\r\n  MoreThanOrEqual = '>=',\r\n  LessThanOrEqual = '<=',\r\n  Contains = 'contains',\r\n}\r\n","export class CssClasses {\r\n  public table?: string = 'ka-table';\r\n  public tbody?: string = 'ka-tbody';\r\n  public thead?: string = 'ka-thead';\r\n  public theadRow?: string = 'ka-tr ka-thead-row';\r\n  public theadCell?: string = 'ka-thead-cell';\r\n  public groupRow?: string = 'ka-tr ka-group-row';\r\n  public row?: string = 'ka-tr ka-row';\r\n  public rowSelected?: string = 'ka-row-selected';\r\n  public cell?: string = 'ka-cell';\r\n\r\n  public iconGroupArrowCollapsed?: string = 'ka-icon ka-icon-group-arrow ka-icon-group-arrow-collapsed';\r\n  public iconGroupArrowExpanded?: string = 'ka-icon ka-icon-group-arrow ka-icon-group-arrow-expanded';\r\n  public iconClose?: string = 'ka-icon ka-icon-close';\r\n  public iconSortArrowDown?: string = 'ka-icon ka-icon-sort ka-icon-sort-arrow-down';\r\n  public iconSortArrowUp?: string = 'ka-icon ka-icon-sort ka-icon-sort-arrow-up';\r\n\r\n  public checkbox ?: string = 'ka-input';\r\n  public dateInput ?: string = 'ka-input';\r\n  public numberInput ?: string = 'ka-input';\r\n  public textInput ?: string = 'ka-input';\r\n}\r\n","\r\nimport { DataType, SortDirection } from './enums';\r\nimport { CssClasses } from './Models/CssClasses';\r\n\r\nclass DefaultOptions {\r\n  public columnDataType = DataType.String;\r\n  public columnSortDirection: SortDirection = SortDirection.Ascend;\r\n  public css: CssClasses = new CssClasses();\r\n}\r\n\r\nconst defaultOptions = new DefaultOptions();\r\n\r\nexport default defaultOptions;\r\n","export const getCopyOfArrayAndAddItem = (item: any, array: any[] = []): any[] => {\r\n  return array.concat([item]);\r\n};\r\n\r\nexport const getCopyOfArrayAndDeleteItem = (item: any, rowKey: any, array: any[]): any[] => {\r\n  const rowKeyValue = item[rowKey];\r\n  return array.filter((i) => i[rowKey] !== rowKeyValue);\r\n};\r\n\r\nexport const getCopyOfArrayAndInsertOrReplaceItem = (item: any, rowKey: any, array: any[]): any[] => {\r\n  const newArray = [...array];\r\n  const rowKeyValue = item[rowKey];\r\n  const index = newArray.findIndex((i) => i[rowKey] === rowKeyValue);\r\n  index >= 0 ? newArray.splice(index, 1, item) : newArray.push(item);\r\n  return newArray;\r\n};\r\n","import { EditingMode } from '../enums';\r\nimport { Column } from '../models';\r\nimport { Cell } from '../Models/Cell';\r\nimport { OptionChangeFunc } from '../types';\r\nimport { getCopyOfArrayAndAddItem } from './ArrayUtils';\r\n\r\nexport const isEditableCell = (editingMode: EditingMode, column: Column, rowEditableCells: Cell[]): boolean => {\r\n  if (column.isEditable !== undefined) {\r\n    return column.isEditable;\r\n  }\r\n  if (editingMode === EditingMode.Cell) {\r\n    return !!rowEditableCells.find((c) => c.columnKey === column.key);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const changeCellTextToCellEditorHandler = (\r\n  item: Cell, editableCells: Cell[], onOptionChange: OptionChangeFunc) => {\r\n    const newEditableCells = getCopyOfArrayAndAddItem(item, editableCells);\r\n    onOptionChange({ editableCells: newEditableCells });\r\n};\r\n\r\nexport const changeCellEditorToCellTextHandler = (\r\n  item: Cell, editableCells: Cell[], onOptionChange: OptionChangeFunc) => {\r\n    const newEditableCells = editableCells.filter((c) => c.columnKey !== item.columnKey || c.rowKey !== item.rowKey);\r\n    onOptionChange({ editableCells: newEditableCells });\r\n};\r\n","import { Column } from '../models';\r\n\r\nexport const compareColumns = (column1: Column, column2: Column) => {\r\n  return column1.key === column2.key && column1.field === column2.field;\r\n};\r\n\r\nexport const getField = (column: Column) => {\r\n  return column.field || column.key;\r\n};\r\n","import defaultOptions from '../defaultOptions';\r\nimport { SortDirection } from '../enums';\r\nimport { Column } from '../Models/Column';\r\nimport { compareColumns } from './ColumnUtils';\r\n\r\nexport const getSortedColumns = (\r\n  columns: Column[],\r\n  column: Column,\r\n) => {\r\n  const index = columns.findIndex((c) => compareColumns(c, column));\r\n  const newColumns = [...columns];\r\n\r\n  newColumns.forEach((c, newColumnIndex) => {\r\n    if (c.sortDirection) {\r\n      newColumns[newColumnIndex] = {...c};\r\n      newColumns[newColumnIndex].sortDirection = undefined;\r\n    }\r\n  });\r\n\r\n  newColumns[index] = {...column};\r\n  return newColumns;\r\n};\r\n\r\nexport const getColumnWithUpdatedSortDirection = (column: Column): Column => {\r\n  const newColumn = {...column};\r\n  newColumn.sortDirection = getNextSortDirection(newColumn.sortDirection);\r\n  return newColumn;\r\n};\r\n\r\nconst getNextSortDirection = (previousSortdirection?: SortDirection) => {\r\n  let nextSortDirection;\r\n  if (previousSortdirection) {\r\n    nextSortDirection = previousSortdirection === SortDirection.Ascend\r\n      ? SortDirection.Descend : SortDirection.Ascend;\r\n  } else {\r\n    nextSortDirection = defaultOptions.columnSortDirection;\r\n  }\r\n  return nextSortDirection;\r\n};\r\n","\r\nimport { ITableAllProps } from '../';\r\nimport { ActionType } from '../enums';\r\nimport { getCopyOfArrayAndInsertOrReplaceItem } from './ArrayUtils';\r\nimport { changeCellEditorToCellTextHandler, changeCellTextToCellEditorHandler } from './CellUtils';\r\nimport { getSortedColumns } from './HeadRowUtils';\r\n\r\nexport const wrapDispatch = ({\r\n  columns,\r\n  data,\r\n  editableCells = [],\r\n  onEvent = () => {},\r\n  onDataChange = () => {},\r\n  onOptionChange,\r\n  rowKeyField,\r\n  selectedRows = [],\r\n  virtualScrolling,\r\n}: ITableAllProps) => {\r\n  return (action: string, actionData: any) => {\r\n    switch (action) {\r\n      case ActionType.OpenEditor:\r\n        changeCellTextToCellEditorHandler(\r\n          actionData.cell,\r\n          editableCells,\r\n          onOptionChange);\r\n        break;\r\n      case ActionType.CloseEditor:\r\n        changeCellEditorToCellTextHandler(\r\n          actionData.cell,\r\n          editableCells,\r\n          onOptionChange);\r\n        break;\r\n      case ActionType.ChangeFilterRow:\r\n          const newColumns = getCopyOfArrayAndInsertOrReplaceItem(actionData.column, 'key', columns);\r\n          onOptionChange({ columns: newColumns });\r\n          break;\r\n      case ActionType.ChangeRowData:\r\n          const newData = getCopyOfArrayAndInsertOrReplaceItem(actionData.newValue, rowKeyField, data);\r\n          onDataChange(newData);\r\n          break;\r\n      case ActionType.SelectRow:\r\n          onOptionChange({ selectedRows: [...selectedRows, ...[actionData.rowKeyValue]] });\r\n          break;\r\n      case ActionType.DeselectRowData:\r\n          onOptionChange({ selectedRows: [...selectedRows].filter((s) => s !== actionData.rowKeyValue) });\r\n          break;\r\n      case ActionType.ChangeSorting:\r\n          const sortedColumns = getSortedColumns(columns, actionData.column);\r\n          onOptionChange({ columns: sortedColumns });\r\n          break;\r\n      case ActionType.ScrollTable:\r\n          if (virtualScrolling) {\r\n            const scrollPosition = actionData.scrollTop;\r\n            if (virtualScrolling) {\r\n              onOptionChange({ virtualScrolling: { ...virtualScrolling, scrollPosition }});\r\n            }\r\n          }\r\n          break;\r\n    }\r\n    onEvent(action, actionData);\r\n  };\r\n};\r\n","export const isEmpty = (value: any): boolean => (value == null || value.length === 0);\r\n","import defaultOptions from '../defaultOptions';\r\nimport { DataType, FilterOperatorName } from '../enums';\r\nimport { Cell } from '../Models/Cell';\r\nimport { Column } from '../Models/Column';\r\nimport { FilterOperator } from '../Models/FilterOperator';\r\nimport { getField } from './ColumnUtils';\r\nimport { isEmpty } from './CommonUtils';\r\n\r\nexport const getRowEditableCells = (rowKeyValue: any, editableCells: Cell[]): Cell[] => {\r\n  return editableCells.filter((c) => c.rowKey === rowKeyValue);\r\n};\r\n\r\nexport const searchData = (columns: Column[], data: any[], searchText: string): any[] => {\r\n  return columns.reduce((initialData: any[], c) => {\r\n    const filterFunction = (item: any) => {\r\n      return c.search ? c.search(searchText, item, c) : initialData.indexOf(item) < 0\r\n        && item[getField(c)].toString().toLowerCase().includes(searchText.toLowerCase());\r\n    };\r\n    return initialData.concat(data.filter(filterFunction));\r\n  }, []);\r\n};\r\n\r\nexport const filterData = (data: any[], columns: Column[]): any[] => {\r\n  return columns.reduce((initialData, column) => {\r\n    if (isEmpty(column.filterRowValue)) { return initialData; }\r\n    const filterRowOperator = column.filterRowOperator\r\n      || getDefaultOperatorForType(column.dataType  || defaultOptions.columnDataType);\r\n    const filterOperator = predefinedFilterOperators.find((fo) => filterRowOperator === fo.name);\r\n    if (!filterOperator) {\r\n      throw new Error(`'${column.filterRowOperator}' has not found in predefinedFilterOperators array, available operators: ${predefinedFilterOperators.map((o) => o.name).join(', ')}`);\r\n    }\r\n    const compare = filterOperator.compare;\r\n    return initialData.filter((d: any) => {\r\n      let fieldValue = d[getField(column)];\r\n      let conditionValue = column.filterRowValue;\r\n      if (column.dataType === DataType.Date) {\r\n        fieldValue = new Date(fieldValue).setHours(0, 0, 0, 0);\r\n        conditionValue = new Date(conditionValue).setHours(0, 0, 0, 0);\r\n      }\r\n      return compare(fieldValue, conditionValue);\r\n    });\r\n  }, data);\r\n};\r\n\r\nexport const getDefaultOperatorForType = (type: DataType): string => {\r\n  const filterOperator = predefinedFilterOperators.find((o) => o.defaultForTypes && o.defaultForTypes.includes(type));\r\n  return (filterOperator && filterOperator.name) || '=';\r\n};\r\n\r\nexport const predefinedFilterOperators: FilterOperator[] = [{\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n    fieldValue === conditionValue,\r\n  defaultForTypes: [DataType.Boolean, DataType.Number, DataType.Date],\r\n  name: FilterOperatorName.Equal,\r\n}, {\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n    fieldValue > conditionValue,\r\n  name: FilterOperatorName.MoreThan,\r\n}, {\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n    fieldValue < conditionValue,\r\n  name: FilterOperatorName.LessThan,\r\n}, {\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n    fieldValue >= conditionValue,\r\n  name: FilterOperatorName.MoreThanOrEqual,\r\n}, {\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n    fieldValue <= conditionValue,\r\n  name: FilterOperatorName.LessThanOrEqual,\r\n}, {\r\n  compare: (fieldValue: any, conditionValue: any) =>\r\n      fieldValue.toString().toLowerCase().includes(conditionValue.toString().toLowerCase()),\r\n  defaultForTypes: [DataType.String],\r\n  name: FilterOperatorName.Contains,\r\n}];\r\n","import { HTMLAttributes } from 'react';\r\nimport { isFunction } from 'util';\r\n\r\nimport { ChildAttributesItem } from '../types';\r\n\r\nexport const extendProps = (\r\n  childElementAttributes: HTMLAttributes<HTMLElement>,\r\n  childProps: any,\r\n  childCustomAttributes: ChildAttributesItem<any> | undefined,\r\n  dispatch: any): React.HTMLAttributes<HTMLElement> => {\r\n    let resultProps = childElementAttributes;\r\n    if (childCustomAttributes) {\r\n      resultProps = mergeProps(childElementAttributes, childProps, childCustomAttributes, dispatch);\r\n    }\r\n    return resultProps;\r\n};\r\n\r\nconst emptyFunc = () => {};\r\nexport const mergeProps = (\r\n  childElementAttributes: HTMLAttributes<HTMLElement>,\r\n  childProps: any,\r\n  childCustomAttributes: ChildAttributesItem<any>,\r\n  dispatch: any): React.HTMLAttributes<HTMLElement> => {\r\n  const customPropsWithEvents: any = {};\r\n  for (const prop in childCustomAttributes) {\r\n    if (childCustomAttributes.hasOwnProperty(prop)) {\r\n      const propName = prop as string;\r\n      const propValue: any = (childCustomAttributes as any)[propName];\r\n      const baseFunc = (childElementAttributes as any)[propName] || emptyFunc;\r\n      if (isFunction(propValue)) {\r\n        customPropsWithEvents[prop] = (e: any) => {\r\n          propValue(e, {\r\n            baseFunc,\r\n            childElementAttributes,\r\n            childProps,\r\n            dispatch,\r\n          });\r\n        };\r\n      }\r\n    }\r\n  }\r\n  const mergedResult: React.HTMLAttributes<HTMLDivElement> = {\r\n    ...childElementAttributes,\r\n    ...childCustomAttributes,\r\n    ...customPropsWithEvents,\r\n    ...{\r\n      className: `${childElementAttributes.className || ''} ${childCustomAttributes.className || ''}`,\r\n  }};\r\n\r\n  return mergedResult;\r\n};\r\n","import { DataType } from '../enums';\r\nimport { Column } from '../Models/Column';\r\nimport { getField } from './ColumnUtils';\r\n\r\nexport const convertToColumnTypes = (data: any[], columns: Column[]) => {\r\n  const newData: any[] = data.map((d) => {\r\n    const nd = {...d};\r\n    columns.forEach((c) => {\r\n      const field = getField(c);\r\n      if (nd[field] != null) {\r\n        switch (c.dataType) {\r\n          case DataType.String: nd[field] = nd[field].toString(); break;\r\n          case DataType.Number: nd[field] = Number(nd[field]); break;\r\n          case DataType.Date: nd[field] = new Date(nd[field]); break;\r\n          case DataType.Boolean: nd[field] = toBoolean(nd[field]); break;\r\n        }\r\n      }\r\n    });\r\n    return nd;\r\n  });\r\n  return newData;\r\n};\r\n\r\nexport const toBoolean = (value: any) => {\r\n  if (typeof value === 'string') {\r\n    switch (value.toLowerCase().trim()) {\r\n      case 'true': case 'yes': case '1': return true;\r\n      case 'false': case 'no': case '0': case null: return false;\r\n    }\r\n  }\r\n  return Boolean(value);\r\n};\r\n\r\nexport function isFunction(variableToCheck: any) {\r\n  if (variableToCheck instanceof Function) {\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n","import * as React from 'react';\r\n\r\nexport interface IEmptyCellsProps {\r\n  count: number;\r\n  shouldUseTh?: boolean;\r\n}\r\n\r\nconst EmptyCells: React.FunctionComponent<IEmptyCellsProps> = ({ count, shouldUseTh }) => {\r\n  return (\r\n    <>\r\n      {[...Array(count)].map((item, index) =>\r\n        shouldUseTh ?\r\n          <th key={index} className='ka-empty-cell'/> :\r\n          <td key={index} className='ka-empty-cell'/>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmptyCells;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { isEmpty } from '../../Utils/CommonUtils';\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst FilterRowBoolean: React.FunctionComponent<IFilterRowEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n}) => {\r\n  const value = column.filterRowValue;\r\n  return (\r\n    <input autoFocus={true}\r\n      className={defaultOptions.css.checkbox}\r\n      type='checkbox'\r\n      ref={(elem) => elem && (elem.indeterminate = isEmpty(value))}\r\n      checked={value || false}\r\n      onChange={(event) => {\r\n        let filterRowValue: any = event.currentTarget.checked;\r\n        if (value === false) {\r\n          if (filterRowValue === true) {\r\n            filterRowValue = undefined;\r\n          }\r\n        }\r\n        const updatedColumn = {...column, filterRowValue};\r\n        dispatch(ActionType.ChangeFilterRow, {column: updatedColumn});\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowBoolean;\r\n","export const getDateInputValue = (date: Date) => {\r\n  return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split('T')[0];\r\n};\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { getDateInputValue } from '../../Utils/DateUtils';\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst FilterRowDate: React.FunctionComponent<IFilterRowEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n}) => {\r\n  const fieldValue = column.filterRowValue;\r\n  const value = fieldValue && getDateInputValue(fieldValue);\r\n  return (\r\n    <input\r\n      className={defaultOptions.css.dateInput}\r\n      type='date'\r\n      value={value || ''}\r\n      onChange={(event) => {\r\n        const targetValue = event.currentTarget.value;\r\n        const filterRowValue = targetValue ? new Date(targetValue) : null;\r\n        const updatedColumn = {...column, filterRowValue};\r\n        dispatch(ActionType.ChangeFilterRow, {column: updatedColumn});\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowDate;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst FilterRowNumber: React.FunctionComponent<IFilterRowEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n}) => {\r\n  const value = column.filterRowValue;\r\n  return (\r\n    <input\r\n      className={defaultOptions.css.numberInput}\r\n      type='number'\r\n      value={value === null || value === undefined ? '' : value}\r\n      onChange={(event) => {\r\n        const filterRowValue = event.currentTarget.value !== '' ? Number(event.currentTarget.value) : null;\r\n        const updatedColumn = {...column, filterRowValue};\r\n        dispatch(ActionType.ChangeFilterRow, {column: updatedColumn});\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowNumber;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst FilterRowString: React.FunctionComponent<IFilterRowEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n}) => {\r\n  return (\r\n    <input\r\n      type='text'\r\n      className={defaultOptions.css.textInput}\r\n      value={column.filterRowValue || ''}\r\n      onChange={(event) => {\r\n        const updatedColumn = {...column, filterRowValue: event.currentTarget.value};\r\n        dispatch(ActionType.ChangeFilterRow, { column: updatedColumn });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowString;\r\n","import React from 'react';\r\n\r\nimport { DataType } from '../../enums';\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\nimport FilterRowBoolean from '../FilterRowBoolean/FilterRowBoolean';\r\nimport FilterRowDate from '../FilterRowDate/FilterRowDate';\r\nimport FilterRowNumber from '../FilterRowNumber/FilterRowNumber';\r\nimport FilterRowString from '../FilterRowString/FilterRowString';\r\n\r\nconst FilterRowDataType: React.FunctionComponent<IFilterRowEditorProps> = (props) => {\r\n  switch (props.column.dataType) {\r\n    case DataType.Boolean: return <FilterRowBoolean {...props} />;\r\n    case DataType.Date: return <FilterRowDate {...props} />;\r\n    case DataType.Number: return <FilterRowNumber {...props} />;\r\n    default: return <FilterRowString {...props} />;\r\n  }\r\n};\r\n\r\nexport default FilterRowDataType;\r\n","import * as React from 'react';\r\n\r\nimport { IFilterRowEditorProps } from '../CellEditor/CellEditor';\r\nimport FilterRowDataType from '../FilterRowDataType/FilterRowDataType';\r\n\r\nconst FilterCell: React.FunctionComponent<IFilterRowEditorProps> = (props) => {\r\n  const {\r\n    column: { style, filterRowCell },\r\n  } = props;\r\n  return (\r\n    <td style={style} className='ka-thead-cell ka-filter-row-cell'>\r\n      {\r\n        filterRowCell ? filterRowCell(props) :\r\n        (\r\n          <FilterRowDataType\r\n            {...props}\r\n          />\r\n        )\r\n      }\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default FilterCell;\r\n","import React from 'react';\r\n\r\nimport { Column } from '../../Models/Column';\r\nimport { DispatchFunc } from '../../types';\r\nimport EmptyCells from '../EmptyCells/EmptyCells';\r\nimport FilterCell from '../FilterCell/FilterCell';\r\n\r\nexport interface IFilterRowProps {\r\n  columns: Column[];\r\n  dispatch: DispatchFunc;\r\n  groupColumnsCount: number;\r\n}\r\n\r\nconst FilterRow: React.FunctionComponent<IFilterRowProps> = ({\r\n  columns,\r\n  dispatch,\r\n  groupColumnsCount,\r\n}) => {\r\n  return (\r\n    <tr className='ka-filter-row ka-tr'>\r\n      <EmptyCells count={groupColumnsCount}/>\r\n      {columns.map((column) => {\r\n        return (\r\n          <FilterCell\r\n            key={column.key}\r\n            column={column}\r\n            dispatch={dispatch}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default FilterRow;\r\n","import * as React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType, SortDirection, SortingMode } from '../../enums';\r\nimport { getColumnWithUpdatedSortDirection } from '../../Utils/HeadRowUtils';\r\nimport { IHeadCellProps } from '../HeadCell/HeadCell';\r\n\r\nconst HeadCellContent: React.FunctionComponent<IHeadCellProps> = (props) => {\r\n  const {\r\n    column: { headCell },\r\n  } = props;\r\n  if (headCell) {\r\n    return headCell(props);\r\n  }\r\n\r\n  const {\r\n    column,\r\n    column: { title, sortDirection },\r\n    dispatch,\r\n    sortingMode,\r\n  } = props;\r\n  const isSortingEnabled = sortingMode === SortingMode.Single;\r\n  const sortClick = isSortingEnabled ? () => {\r\n    const updatedColumn = getColumnWithUpdatedSortDirection(column);\r\n    dispatch(ActionType.ChangeSorting, { column: updatedColumn });\r\n  } : undefined;\r\n  return (\r\n    <div\r\n      className={`ka-thead-cell-content ${isSortingEnabled ? 'ka-pointer' : ''}`}\r\n      onClick={sortClick}\r\n    >\r\n      <span>{title}</span>\r\n      {\r\n        sortDirection && isSortingEnabled && (\r\n          <span\r\n            className={\r\n              sortDirection === SortDirection.Ascend\r\n                ? defaultOptions.css.iconSortArrowUp\r\n                : defaultOptions.css.iconSortArrowDown\r\n            }\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeadCellContent;\r\n","import * as React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { SortingMode } from '../../enums';\r\nimport { Column } from '../../Models/Column';\r\nimport { DispatchFunc } from '../../types';\r\nimport HeadCellContent from '../HeadCellContent/HeadCellContent';\r\n\r\nexport interface IHeadCellProps {\r\n  column: Column;\r\n  sortingMode: SortingMode;\r\n  dispatch: DispatchFunc;\r\n}\r\n\r\nconst HeadCell: React.FunctionComponent<IHeadCellProps> = (props) => {\r\n  const {\r\n    column: { style },\r\n  } = props;\r\n  return (\r\n    <th scope='col' style={style} className={defaultOptions.css.theadCell}>\r\n      <HeadCellContent {...props}/>\r\n    </th>\r\n  );\r\n};\r\n\r\nexport default HeadCell;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { SortingMode } from '../../enums';\r\nimport { Column } from '../../Models/Column';\r\nimport { DispatchFunc } from '../../types';\r\nimport EmptyCells from '../EmptyCells/EmptyCells';\r\nimport HeadCell from '../HeadCell/HeadCell';\r\n\r\nexport interface IHeadRowProps {\r\n  columns: Column[];\r\n  sortingMode: SortingMode;\r\n  groupColumnsCount: number;\r\n  dispatch: DispatchFunc;\r\n}\r\n\r\nconst HeadRow: React.FunctionComponent<IHeadRowProps> = ({\r\n  columns,\r\n  groupColumnsCount,\r\n  dispatch,\r\n  sortingMode,\r\n}) => {\r\n  return (\r\n    <tr className={defaultOptions.css.theadRow}>\r\n      <EmptyCells count={groupColumnsCount}/>\r\n      {columns.map((column) => {\r\n        return (\r\n          <HeadCell\r\n            key={column.key}\r\n            column={column}\r\n            dispatch={dispatch}\r\n            sortingMode={sortingMode}\r\n          />\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default HeadRow;\r\n","import { Column } from '../models';\r\nimport { Group } from '../Models/Group';\r\nimport { GroupRowData } from '../Models/GroupRowData';\r\nimport { OptionChangeFunc } from '../types';\r\nimport { getField } from './ColumnUtils';\r\n\r\nconst groupMark = {};\r\nexport const groupClick = (groupsExpanded: any[][], groupRowData: GroupRowData, onOptionChange: OptionChangeFunc) => {\r\n  const newGroupsExpanded =\r\n    groupsExpanded.filter((ge) => JSON.stringify(ge) !== JSON.stringify(groupRowData.key));\r\n  if (newGroupsExpanded.length === groupsExpanded.length) {\r\n    newGroupsExpanded.push(groupRowData.key);\r\n  }\r\n  onOptionChange({ groupsExpanded: newGroupsExpanded });\r\n};\r\n\r\nexport const getExpandedGroups = (groupedData: any[]): any[][] => {\r\n  const groupsExpanded: any[][] = [];\r\n  for (const value of groupedData) {\r\n    if (value.groupMark === groupMark) {\r\n      groupsExpanded.push(value.key);\r\n    }\r\n  }\r\n  return groupsExpanded;\r\n};\r\n\r\nexport const getGroupedData = (\r\n  data: any[],\r\n  groups: Group[],\r\n  groupedColumns: Column[],\r\n  groupsExpanded?: any[]): any[] => {\r\n  const columnMap: any = {};\r\n  groupedColumns.forEach((c) => columnMap[c.key] = getField(c));\r\n  const grouped = getGroupedStructure(data, groups, columnMap, 0, groupsExpanded);\r\n  return convertToFlat(grouped);\r\n};\r\n\r\nexport const convertToFlat = (grouped: any, key: any[] = []) => {\r\n  let result: any[] = [];\r\n  grouped.forEach((value: any, groupValue: any) => {\r\n    const groupKey = [...key];\r\n    groupKey.push(groupValue);\r\n    result.push({ groupMark, key: groupKey, value: groupValue });\r\n    if (Array.isArray(value)) {\r\n      value.forEach((item) => {\r\n        result.push(item);\r\n      });\r\n    } else {\r\n      result = result.concat(convertToFlat(value, groupKey));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const getGroupedStructure = (\r\n  data: any[],\r\n  groups: Group[],\r\n  columnMap: any,\r\n  expandedDeep: number = 0,\r\n  groupsExpanded?: any[],\r\n): any => {\r\n  groups = [...groups];\r\n  const group = groups.shift();\r\n  if (group) {\r\n    const grouped = groupBy(data, (item: any) => item[columnMap[group.columnKey]]);\r\n    grouped.forEach((value, key) => {\r\n      const groupExpandedItems = groupsExpanded && groupsExpanded.filter((ge) => ge[expandedDeep] === key);\r\n      const isThisGroupExpanded = !groupExpandedItems\r\n        || groupExpandedItems.some((ge) => ge.length === expandedDeep + 1);\r\n      if (isThisGroupExpanded) {\r\n        const newStructure = getGroupedStructure(\r\n          value,\r\n          groups,\r\n          columnMap,\r\n          expandedDeep + 1,\r\n          groupExpandedItems && groupExpandedItems.filter((ge) => ge.length > expandedDeep + 1),\r\n        );\r\n        if (newStructure) {\r\n          grouped.set(key, newStructure);\r\n        }\r\n      } else {\r\n        grouped.set(key, []);\r\n      }\r\n    });\r\n    return grouped;\r\n  }\r\n};\r\n\r\nexport const groupBy = (data: any[], keyGetter: any, isEmptyValue: boolean = false) => {\r\n  const map = new Map();\r\n  data.forEach((item) => {\r\n    const key = keyGetter(item);\r\n    if (isEmptyValue) {\r\n      map.set(key, []);\r\n    } else {\r\n      const collection = map.get(key);\r\n      if (!collection) {\r\n          map.set(key, [item]);\r\n      } else {\r\n          collection.push(item);\r\n      }\r\n    }\r\n  });\r\n  return map;\r\n};\r\n\r\nexport const getGroupMark = () => groupMark;\r\n","import React from 'react';\r\n\r\nimport { Column } from '../../Models/Column';\r\nimport { NoDataRowFunc } from '../../types';\r\n\r\nexport interface INoDataRow {\r\n  columns: Column[];\r\n  groupColumnsCount: number;\r\n  noDataRow: NoDataRowFunc;\r\n}\r\nconst NoDataRow: React.FunctionComponent<INoDataRow> = ({\r\n  columns,\r\n  groupColumnsCount,\r\n  noDataRow,\r\n}) => {\r\n    return (\r\n      <tr className='ka-tr ka-no-data-row'>\r\n        <td className='ka-no-data-cell' colSpan={columns.length + groupColumnsCount}>\r\n          {noDataRow()}\r\n        </td>\r\n      </tr>\r\n    );\r\n};\r\n\r\nexport default NoDataRow;\r\n","import * as React from 'react';\r\n\r\nimport { ActionType, EditingMode } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { getField } from '../../Utils/ColumnUtils';\r\nimport { isEmpty } from '../../Utils/CommonUtils';\r\nimport { extendProps } from '../../Utils/PropsUtils';\r\nimport { ICellContentProps } from '../CellContent/CellContent';\r\n\r\nconst CellText: React.FunctionComponent<ICellContentProps> = (props) => {\r\n  const {\r\n    childAttributes,\r\n    column,\r\n    column: { format },\r\n    dispatch,\r\n    editingMode,\r\n    rowData,\r\n    rowKeyField,\r\n  } = props;\r\n\r\n  const field = getField(column);\r\n  const value = rowData[field];\r\n  const formatedValue = format ? format(value) : !isEmpty(value) && value.toString();\r\n\r\n  const componentProps: React.HTMLAttributes<HTMLDivElement> = {\r\n    className: 'ka-cell-text',\r\n    onClick: () => {\r\n      if (editingMode === EditingMode.Cell) {\r\n        const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n        dispatch(ActionType.OpenEditor, { cell });\r\n      }\r\n    },\r\n  };\r\n\r\n  const divProps = extendProps(componentProps, props, childAttributes.cell, props.dispatch);\r\n  return (\r\n    <div {...divProps}>{formatedValue || <>&nbsp;</>}</div>\r\n  );\r\n};\r\n\r\nexport default CellText;\r\n","import * as React from 'react';\r\n\r\nimport { EditingMode } from '../../enums';\r\nimport { ChildAttributes, Column } from '../../models';\r\nimport { DispatchFunc } from '../../types';\r\nimport CellText from '../CellText/CellText';\r\n\r\nexport interface ICellContentProps {\r\n  childAttributes: ChildAttributes;\r\n  column: Column;\r\n  dispatch: DispatchFunc;\r\n  editingMode: EditingMode;\r\n  field: string;\r\n  rowData: any;\r\n  rowKeyField: string;\r\n}\r\n\r\nconst CellContent: React.FunctionComponent<ICellContentProps> = (props) => {\r\n  const { column: { cell } } = props;\r\n  return cell ? cell(props) :  <CellText {...props}/>;\r\n};\r\n\r\nexport default CellContent;\r\n","import { KeyboardEnum } from '../enums';\r\n\r\n/*\r\n  Used inside effects and returned as result from them,\r\n  it adds listener to esc & enter keys on life cycle of component\r\n*/\r\nexport const addEscEnterKeyEffect = (escKeyHandler: () => void, enterKeyHandler: () => void) => {\r\n  const handleKeyboard = (event: KeyboardEvent) => {\r\n    if (event.keyCode === KeyboardEnum.Esc) {\r\n      escKeyHandler();\r\n    }\r\n\r\n    if (event.keyCode === KeyboardEnum.Enter) {\r\n      enterKeyHandler();\r\n    }\r\n  };\r\n  return getEventListenerEffect('keyup', handleKeyboard);\r\n};\r\n\r\nexport const getEventListenerEffect = (eventName: string, handler: any) => {\r\n  window.addEventListener(eventName, handler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventName, handler);\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { isEmpty } from '../../Utils/CommonUtils';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst CellEditorBoolean: React.FunctionComponent<ICellEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n  field,\r\n  rowData,\r\n  rowKeyField,\r\n}) => {\r\n  const value = rowData[field];\r\n  return (\r\n    <input autoFocus={true}\r\n      className={defaultOptions.css.checkbox}\r\n      type='checkbox'\r\n      ref={(elem) => elem && (elem.indeterminate = isEmpty(value))}\r\n      checked={value || false}\r\n      onChange={(event) => dispatch(ActionType.ChangeRowData, {newValue: {...rowData, [field]: event.currentTarget.checked}})}\r\n      onBlur={() => {\r\n        const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n        dispatch(ActionType.CloseEditor, { cell });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CellEditorBoolean;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { getDateInputValue } from '../../Utils/DateUtils';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst CellEditorDate: React.FunctionComponent<ICellEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n  field,\r\n  rowData,\r\n  rowKeyField,\r\n}) => {\r\n  const fieldValue = rowData[field];\r\n  const value = fieldValue && getDateInputValue(fieldValue);\r\n  return (\r\n    <input\r\n      autoFocus={true}\r\n      className={defaultOptions.css.dateInput}\r\n      type='date'\r\n      value={value || ''}\r\n      onChange={(event) => {\r\n        const targetValue: string = event.currentTarget.value;\r\n        dispatch(ActionType.ChangeRowData, {newValue: {...rowData, [field]: targetValue ? new Date(targetValue) : null}});\r\n      }}\r\n      onBlur={() => {\r\n        const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n        dispatch(ActionType.CloseEditor, { cell });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CellEditorDate;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst CellEditorNumber: React.FunctionComponent<ICellEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n  field,\r\n  rowData,\r\n  rowKeyField,\r\n}) => {\r\n  const value = rowData[field];\r\n  return (\r\n    <input autoFocus={true}\r\n      className={defaultOptions.css.numberInput}\r\n      type='number'\r\n      value={value === null || value === undefined ? '' : value}\r\n      onChange={(event) => {\r\n        const newValue = event.currentTarget.value !== '' ? Number(event.currentTarget.value) : null;\r\n        dispatch(ActionType.ChangeRowData, {newValue: {...rowData, [field]: newValue}});\r\n      }}\r\n      onBlur={() => {\r\n        const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n        dispatch(ActionType.CloseEditor, { cell });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CellEditorNumber;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\n\r\nconst CellEditorString: React.FunctionComponent<ICellEditorProps> = ({\r\n  column,\r\n  dispatch,\r\n  field,\r\n  rowData,\r\n  rowKeyField,\r\n}) => {\r\n  return (\r\n    <input autoFocus={true}\r\n      type='text'\r\n      className={defaultOptions.css.textInput}\r\n      value={rowData[field] || ''}\r\n      onChange={(event) => dispatch(ActionType.ChangeRowData, {newValue: {...rowData, [field]: event.currentTarget.value}})}\r\n      onBlur={() => {\r\n        const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n        dispatch(ActionType.CloseEditor, { cell });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CellEditorString;\r\n","import React from 'react';\r\n\r\nimport { DataType } from '../../enums';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\nimport CellEditorBoolean from '../CellEditorBoolean/CellEditorBoolean';\r\nimport CellEditorDate from '../CellEditorDate/CellEditorDate';\r\nimport CellEditorNumber from '../CellEditorNumber/CellEditorNumber';\r\nimport CellEditorString from '../CellEditorString/CellEditorString';\r\n\r\nconst CellEditorDataType: React.FunctionComponent<ICellEditorProps> = (props) => {\r\n  switch (props.column.dataType) {\r\n    case DataType.Boolean: return <CellEditorBoolean {...props} />;\r\n    case DataType.Date: return <CellEditorDate {...props} />;\r\n    case DataType.Number: return <CellEditorNumber {...props} />;\r\n    default: return <CellEditorString {...props} />;\r\n  }\r\n};\r\n\r\nexport default CellEditorDataType;\r\n","import React from 'react';\r\n\r\nexport interface ICellEditorValidationMessageProps {\r\n  message: string;\r\n}\r\n\r\nconst CellEditorValidationMessage: React.FunctionComponent<ICellEditorValidationMessageProps> = (props) => {\r\n  const { message } = props;\r\n\r\n  return (\r\n    <div className='ka-validation-message-container'>\r\n      <div className='ka-validation-message'>{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellEditorValidationMessage;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { ActionType } from '../../enums';\r\nimport { Cell } from '../../models';\r\nimport { addEscEnterKeyEffect } from '../../Utils/EffectUtils';\r\nimport { getValidationValue } from '../../Utils/Validation';\r\nimport { ICellEditorProps } from '../CellEditor/CellEditor';\r\nimport CellEditorDataType from '../CellEditorDataType/CellEditorDataType';\r\nimport CellEditorValidationMessage from '../CellEditorValidationMessage/CellEditorValidationMessage';\r\n\r\nconst CellEditorState: React.FunctionComponent<ICellEditorProps> = (props) => {\r\n  const {\r\n    column,\r\n    field,\r\n    column: {\r\n      key,\r\n    },\r\n    rowData,\r\n    rowKeyField,\r\n    dispatch,\r\n  } = props;\r\n  const [value, changeValue] = useState(rowData);\r\n\r\n  const validationValue = getValidationValue(value, field, column.validation);\r\n  const onValueStateChange = (rowValue: any): void => {\r\n    changeValue(rowValue);\r\n  };\r\n\r\n  const close = useCallback(() => {\r\n    const cell: Cell = { columnKey: column.key, rowKey: rowData[rowKeyField] };\r\n    dispatch(ActionType.CloseEditor, { cell });\r\n  }, [dispatch, column, rowData, rowKeyField]);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    if (!validationValue) {\r\n      if (rowData[key] !== value[key]) {\r\n        dispatch(ActionType.ChangeRowData, { newValue: { ...rowData, ...{ [key]: value[key] } } });\r\n      }\r\n      close();\r\n    }\r\n  }, [validationValue, dispatch, close, value, key, rowData]);\r\n\r\n  useEffect(() => {\r\n    return addEscEnterKeyEffect(close, closeHandler);\r\n  }, [close, closeHandler]);\r\n\r\n  const dispatchHandler = (action: string, actionData: any) => {\r\n    if (action === ActionType.CloseEditor) {\r\n      closeHandler();\r\n    } else if (action === ActionType.ChangeRowData) {\r\n      onValueStateChange(actionData.newValue);\r\n    } else {\r\n      dispatch(action, actionData);\r\n    }\r\n  };\r\n\r\n  const stateProps = { ...props, ...{\r\n    dispatch: dispatchHandler,\r\n    rowData : value,\r\n  }};\r\n\r\n  return (\r\n    <>\r\n      <div className={`ka-cell-editor ${validationValue ? 'ka-cell-editor-validation-error' : ''}`}>\r\n        <CellEditorDataType {...stateProps} />\r\n        {validationValue && <CellEditorValidationMessage message={validationValue} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CellEditorState;\r\n","import { ValidationFunc } from '../types';\r\n\r\nexport const getValidationValue = (rowData: any, field: string, validation?: ValidationFunc) => {\r\n  if (validation) {\r\n    return validation(rowData[field], rowData);\r\n  }\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { Column } from '../../Models/Column';\r\nimport { DispatchFunc } from '../../types';\r\nimport CellEditorState from '../CellEditorState/CellEditorState';\r\n\r\nexport interface IFilterRowEditorProps {\r\n  column: Column;\r\n  dispatch: DispatchFunc;\r\n}\r\n\r\nexport interface ICellEditorProps extends IFilterRowEditorProps {\r\n  field: string;\r\n  isSelectedRow: boolean;\r\n  rowData: any;\r\n  rowKeyField: string;\r\n}\r\n\r\nconst CellEditor: React.FunctionComponent<ICellEditorProps> = (props) => {\r\n  const { editor } = props.column;\r\n  return editor ? editor(props) :  <CellEditorState {...props}/>;\r\n};\r\n\r\nexport default CellEditor;\r\n","import * as React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { EditingMode } from '../../enums';\r\nimport { ChildAttributes } from '../../models';\r\nimport { Column } from '../../Models/Column';\r\nimport { DispatchFunc } from '../../types';\r\nimport { getField } from '../../Utils/ColumnUtils';\r\nimport CellContent from '../CellContent/CellContent';\r\nimport CellEditor from '../CellEditor/CellEditor';\r\n\r\nexport interface ICellComponentProps {\r\n  childAttributes: ChildAttributes;\r\n  column: Column;\r\n  dispatch: DispatchFunc;\r\n  editingMode: EditingMode;\r\n  isEditableCell: boolean;\r\n  isSelectedRow: boolean;\r\n  rowData: any;\r\n  rowKeyField: string;\r\n}\r\n\r\nconst CellComponent: React.FunctionComponent<ICellComponentProps> = (props) => {\r\n  const {\r\n    column,\r\n    column: { style },\r\n    isEditableCell,\r\n  } = props;\r\n  return (\r\n    <td style={style} className={defaultOptions.css.cell}>\r\n      { isEditableCell ? (\r\n          <CellEditor\r\n            {...props}\r\n            field={getField(column)}\r\n          />\r\n        )\r\n        : (\r\n          <CellContent\r\n            {...props}\r\n            field={getField(column)}\r\n          />\r\n        )\r\n      }\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default CellComponent;\r\n","import React from 'react';\r\n\r\nimport { isEditableCell } from '../../Utils/CellUtils';\r\nimport { getRowEditableCells } from '../../Utils/FilterUtils';\r\nimport CellComponent from '../CellComponent/CellComponent';\r\nimport { IRowCommonProps } from '../DataRow/DataRow';\r\n\r\nexport interface IDataRowProps extends IRowCommonProps {\r\n  isSelectedRow: boolean;\r\n}\r\n\r\nconst DataRowContent: React.FunctionComponent<IDataRowProps> = ({\r\n  childAttributes,\r\n  columns,\r\n  dispatch,\r\n  editableCells,\r\n  editingMode,\r\n  isSelectedRow,\r\n  rowData,\r\n  rowKeyField,\r\n}) => {\r\n  const rowKeyValue = rowData[rowKeyField];\r\n  const rowEditableCells = getRowEditableCells(rowKeyValue, editableCells);\r\n  return (\r\n    <>\r\n      {columns.map((column) => (\r\n        <CellComponent\r\n          column={column}\r\n          childAttributes={childAttributes}\r\n          editingMode={editingMode}\r\n          isEditableCell={isEditableCell(editingMode, column, rowEditableCells)}\r\n          isSelectedRow={isSelectedRow}\r\n          key={column.key}\r\n          dispatch={dispatch}\r\n          rowData={rowData}\r\n          rowKeyField={rowKeyField}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataRowContent;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { EditingMode } from '../../enums';\r\nimport { ChildAttributes } from '../../models';\r\nimport { Cell } from '../../Models/Cell';\r\nimport { Column } from '../../Models/Column';\r\nimport { DataRowFunc, DispatchFunc } from '../../types';\r\nimport DataRowContent from '../DataRowContent/DataRowContent';\r\nimport EmptyCells from '../EmptyCells/EmptyCells';\r\n\r\nexport interface IRowCommonProps {\r\n  childAttributes: ChildAttributes;\r\n  columns: Column[];\r\n  dispatch: DispatchFunc;\r\n  editableCells: Cell[];\r\n  editingMode: EditingMode;\r\n  rowData: any;\r\n  rowKeyField: string;\r\n  selectedRows: any[];\r\n}\r\n\r\nexport interface IRowProps extends IRowCommonProps {\r\n  groupColumnsCount: number;\r\n  dataRow?: DataRowFunc;\r\n  trRef?: any;\r\n}\r\n\r\nconst DataRow: React.FunctionComponent<IRowProps> = (props) => {\r\n  const {\r\n    groupColumnsCount,\r\n    rowData,\r\n    rowKeyField,\r\n    dataRow,\r\n    selectedRows,\r\n    trRef,\r\n  } = props;\r\n  const rowKeyValue = rowData[rowKeyField];\r\n  const isSelectedRow = selectedRows.some((s) => s === rowKeyValue);\r\n  const dataRowProps = {...props, isSelectedRow, rowKeyValue };\r\n  const dataRowContent = dataRow && dataRow(dataRowProps);\r\n  return (\r\n    <tr ref={trRef} className={`${defaultOptions.css.row} ${isSelectedRow ? defaultOptions.css.rowSelected : ''}`}>\r\n      <EmptyCells count={groupColumnsCount}/>\r\n      {dataRowContent\r\n        ? <td className={defaultOptions.css.cell}>{dataRowContent}</td>\r\n        : <DataRowContent {...dataRowProps}/>}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default DataRow;\r\n","import React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { Column, Group } from '../../models';\r\nimport { GroupRowData } from '../../Models/GroupRowData';\r\nimport { OptionChangeFunc } from '../../types';\r\nimport { groupClick } from '../../Utils/GroupUtils';\r\nimport EmptyCells from '../EmptyCells/EmptyCells';\r\n\r\nexport interface IGroupRowProps {\r\n  columns: Column[];\r\n  emptyColumnsCount: number;\r\n  groupRowData: GroupRowData;\r\n  groups: Group[];\r\n  groupsExpanded: any[][];\r\n  onOptionChange: OptionChangeFunc;\r\n}\r\n\r\nconst GroupRow: React.FunctionComponent<IGroupRowProps> = ({\r\n  columns,\r\n  emptyColumnsCount,\r\n  groupRowData,\r\n  groups,\r\n  groupsExpanded,\r\n  onOptionChange,\r\n}) => {\r\n  return (\r\n    <tr className={defaultOptions.css.groupRow}>\r\n      <EmptyCells count={emptyColumnsCount}/>\r\n      <td\r\n        className='ka-group-column'\r\n        colSpan={columns.length - emptyColumnsCount + groups.length}>\r\n          <div className='ka-group-column-content'>\r\n            <div\r\n              onClick={() => {\r\n                groupClick(groupsExpanded, groupRowData, onOptionChange);\r\n              }}\r\n              className={groupsExpanded.some((ge) => JSON.stringify(ge) === JSON.stringify(groupRowData.key))\r\n                ? defaultOptions.css.iconGroupArrowExpanded : defaultOptions.css.iconGroupArrowCollapsed}\r\n            />\r\n            <div className='ka-group-text'>{groupRowData.value.toString()}</div>\r\n          </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default GroupRow;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { getGroupMark } from '../../Utils/GroupUtils';\r\nimport { getVirtualized } from '../../Utils/Virtualize';\r\nimport DataRow from '../DataRow/DataRow';\r\nimport GroupRow from '../GroupRow/GroupRow';\r\nimport { ITableBodyProps } from '../TableBody/TableBody';\r\n\r\nconst VirtualizedRows: React.FunctionComponent<ITableBodyProps> = (props) => {\r\n  const {\r\n    columns,\r\n    data,\r\n    groups = [],\r\n    groupsExpanded = [],\r\n    onOptionChange,\r\n    rowKeyField,\r\n    virtualScrolling,\r\n  } = props;\r\n\r\n  const groupMark = getGroupMark();\r\n  const firstRowRef = useRef<HTMLInputElement>(null);\r\n  useEffect(() => {\r\n    if (firstRowRef\r\n      && firstRowRef.current\r\n      && (virtualScrolling\r\n      && (!virtualScrolling.itemHeight\r\n      || !virtualScrolling.tbodyHeight))) {\r\n        const itemHeight = firstRowRef.current.offsetHeight || 40;\r\n        const tbodyHeight =\r\n          (firstRowRef.current.parentElement && firstRowRef.current.parentElement.offsetHeight)\r\n          || 600;\r\n        const newVirtualScrolling = {\r\n          itemHeight,\r\n          tbodyHeight,\r\n          ...virtualScrolling,\r\n        };\r\n        onOptionChange({ virtualScrolling: newVirtualScrolling });\r\n    }\r\n  }, [firstRowRef, onOptionChange, virtualScrolling]);\r\n\r\n  let virtualizedData = data;\r\n  let virtualized;\r\n  if (virtualScrolling) {\r\n    virtualized = getVirtualized(virtualScrolling, virtualizedData);\r\n    virtualizedData = virtualized.virtualizedData;\r\n  }\r\n  let rowRefLink: any = firstRowRef;\r\n  return (\r\n    <>\r\n      {virtualized && <tr style={{height: virtualized.beginHeight}} />}\r\n      {virtualizedData.map((d) => {\r\n        if (d.groupMark === groupMark) {\r\n          return (\r\n            <GroupRow\r\n              key={d.key}\r\n              groupRowData={d}\r\n              columns={columns}\r\n              emptyColumnsCount={d.key.length - 1}\r\n              groups={groups}\r\n              groupsExpanded={groupsExpanded}\r\n              onOptionChange={onOptionChange} />\r\n          );\r\n        } else {\r\n          const dataRow = (\r\n            <DataRow\r\n              {...props}\r\n              trRef={rowRefLink}\r\n              key={d[rowKeyField]}\r\n              rowData={d}\r\n            />\r\n          );\r\n          rowRefLink = undefined;\r\n          return dataRow;\r\n        }\r\n      })}\r\n      {virtualized && <tr style={{height: virtualized.endHeight}} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VirtualizedRows;\r\n","import { VirtualScrolling } from '../Models/VirtualScrolling';\r\n\r\nexport const getVirtualized = (virtualScrolling: VirtualScrolling, data: any[]) => {\r\n  const virtualizedData: any[] = [];\r\n  const { scrollPosition = 0 } = virtualScrolling;\r\n  let { tbodyHeight = 600 } = virtualScrolling;\r\n  let beginHeight = 0;\r\n  let endHeight = 0;\r\n  data.reduce((acc, value) => {\r\n    const itemHeight = virtualScrolling.itemHeight ?\r\n      (\r\n        typeof virtualScrolling.itemHeight === 'number'\r\n        ? virtualScrolling.itemHeight\r\n        : virtualScrolling.itemHeight(value)\r\n      )\r\n      : 40;\r\n    if (acc >= scrollPosition - itemHeight) {\r\n      if (tbodyHeight >= -(itemHeight * 5)) {\r\n        tbodyHeight = tbodyHeight - itemHeight;\r\n        virtualizedData.push(value);\r\n      } else {\r\n        endHeight += itemHeight;\r\n      }\r\n    } else {\r\n      beginHeight = acc - itemHeight;\r\n    }\r\n    return acc + itemHeight;\r\n  }, 0);\r\n\r\n  return {\r\n    beginHeight,\r\n    endHeight,\r\n    virtualizedData,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport { getExpandedGroups, getGroupedData } from '../../Utils/GroupUtils';\r\nimport NoDataRow from '../NoDataRow/NoDataRow';\r\nimport { ITableBodyProps } from '../TableBody/TableBody';\r\nimport VirtualizedRows from '../VirtualizedRows/VirtualizedRows';\r\n\r\nconst Rows: React.FunctionComponent<ITableBodyProps> = (props) => {\r\n  const {\r\n    data,\r\n    groupedColumns,\r\n    groups,\r\n  } = props;\r\n\r\n  if (!data.length && props.noDataRow) {\r\n    return <NoDataRow {...props} noDataRow={props.noDataRow}/>;\r\n  }\r\n\r\n  let { groupsExpanded } = props;\r\n  const groupedData = groups ? getGroupedData(data, groups, groupedColumns, groupsExpanded) : data;\r\n  if (groups && !groupsExpanded) {\r\n    groupsExpanded = getExpandedGroups(groupedData);\r\n  }\r\n  return (\r\n      <VirtualizedRows\r\n        {...props}\r\n        data={groupedData}\r\n        groupsExpanded={groupsExpanded}\r\n      />\r\n  );\r\n};\r\n\r\nexport default Rows;\r\n","import * as React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { ActionType, EditingMode } from '../../enums';\r\nimport { ChildAttributes } from '../../models';\r\nimport { Cell } from '../../Models/Cell';\r\nimport { Column } from '../../Models/Column';\r\nimport { Group } from '../../Models/Group';\r\nimport { VirtualScrolling } from '../../Models/VirtualScrolling';\r\nimport {\r\n  DataChangeFunc, DataRowFunc, DispatchFunc, NoDataRowFunc, OptionChangeFunc,\r\n} from '../../types';\r\nimport Rows from '../Rows/Rows';\r\n\r\nexport interface ITableBodyProps {\r\n  childAttributes: ChildAttributes;\r\n  columns: Column[];\r\n  data: any[];\r\n  dataRow?: DataRowFunc;\r\n  dispatch: DispatchFunc;\r\n  editableCells: Cell[];\r\n  editingMode: EditingMode;\r\n  groupColumnsCount: number;\r\n  groupedColumns: Column[];\r\n  groups?: Group[];\r\n  groupsExpanded?: any[][];\r\n  noDataRow?: NoDataRowFunc;\r\n  onDataChange?: DataChangeFunc;\r\n  onOptionChange: OptionChangeFunc;\r\n  rowKeyField: string;\r\n  selectedRows: any[];\r\n  virtualScrolling?: VirtualScrolling;\r\n}\r\n\r\nconst TableBody: React.FunctionComponent<ITableBodyProps> = (props) => {\r\n  const { dispatch } = props;\r\n  return (\r\n    <tbody className={defaultOptions.css.tbody} onScroll={(event) => {\r\n      dispatch(ActionType.ScrollTable, { scrollTop: event.currentTarget.scrollTop, timeStamp: event.timeStamp  });\r\n    }}>\r\n      <Rows\r\n        {...props}\r\n      />\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import * as React from 'react';\r\n\r\nimport defaultOptions from '../../defaultOptions';\r\nimport { EditingMode, FilteringMode, SortingMode } from '../../enums';\r\nimport { Cell } from '../../Models/Cell';\r\nimport { ChildAttributes } from '../../Models/ChildAttributes';\r\nimport { Column } from '../../Models/Column';\r\nimport { Group } from '../../Models/Group';\r\nimport { VirtualScrolling } from '../../Models/VirtualScrolling';\r\nimport {\r\n  DataChangeFunc, DataRowFunc, EventFunc, NoDataRowFunc, OptionChangeFunc,\r\n} from '../../types';\r\nimport { wrapDispatch } from '../../Utils/ActionUtils';\r\nimport { filterData, searchData } from '../../Utils/FilterUtils';\r\nimport { extendProps } from '../../Utils/PropsUtils';\r\nimport { sortData } from '../../Utils/SortUtils';\r\nimport { convertToColumnTypes } from '../../Utils/TypeUtils';\r\nimport FilterRow from '../FilterRow/FilterRow';\r\nimport HeadRow from '../HeadRow/HeadRow';\r\nimport TableBody from '../TableBody/TableBody';\r\n\r\n/**\r\n * Sets the options of the table which are related to its looks\r\n */\r\nexport interface ITableOption {\r\n  columns: Column[];\r\n  dataRow?: DataRowFunc;\r\n  editableCells?: Cell[];\r\n  editingMode?: EditingMode;\r\n  filteringMode?: FilteringMode;\r\n  groups?: Group[];\r\n  groupsExpanded?: any[][];\r\n  noDataRow?: NoDataRowFunc;\r\n  rowKeyField: string;\r\n  search?: string;\r\n  selectedRows?: any[];\r\n  sortingMode?: SortingMode;\r\n  virtualScrolling?: VirtualScrolling;\r\n}\r\n\r\nexport interface ITableEvents {\r\n  /** Called each time Data is changed */\r\n  onDataChange?: DataChangeFunc;\r\n  /** Called each time ITableOption changed */\r\n  onOptionChange: OptionChangeFunc;\r\n  /** Called each time when action was completed */\r\n  onEvent?: EventFunc;\r\n}\r\n\r\nexport interface ITableAllProps extends ITableEvents, ITableOption {\r\n  /** The data which is shown in Table's rows */\r\n  data: any[];\r\n  childAttributes?: ChildAttributes;\r\n}\r\n\r\nexport const Table: React.FunctionComponent<ITableAllProps> = (props) => {\r\n  const {\r\n    childAttributes = {},\r\n    editableCells = [],\r\n    editingMode = EditingMode.None,\r\n    filteringMode,\r\n    groups,\r\n    search,\r\n    selectedRows = [],\r\n    sortingMode = SortingMode.None,\r\n  } = props;\r\n  let { columns, data } = props;\r\n  data = search ? searchData(columns, data, search) : data;\r\n  data = convertToColumnTypes(data, columns);\r\n  data = filterData(data, columns);\r\n  data = sortData(columns, data);\r\n\r\n  let groupColumnsCount = 0;\r\n  let groupedColumns: Column[] = [];\r\n  if (groups) {\r\n    groupColumnsCount = groups.length;\r\n    groupedColumns = columns.filter((c) => groups.some((g) => g.columnKey === c.key));\r\n    columns = columns.filter((c) => !groups.some((g) => g.columnKey === c.key));\r\n  }\r\n\r\n  const dispatch = wrapDispatch(props);\r\n\r\n  const componentProps: React.HTMLAttributes<HTMLTableElement> = {\r\n    className: defaultOptions.css.table,\r\n  };\r\n\r\n  const tableProps = extendProps(componentProps, props, childAttributes.table, dispatch);\r\n  return (\r\n    <div className='ka' >\r\n      <table {...tableProps}>\r\n        <thead className={defaultOptions.css.thead}>\r\n          <HeadRow\r\n            groupColumnsCount={groupColumnsCount}\r\n            columns={columns}\r\n            dispatch={dispatch}\r\n            sortingMode={sortingMode}\r\n          />\r\n          {filteringMode === FilteringMode.FilterRow &&\r\n            (\r\n              <FilterRow\r\n                columns={columns}\r\n                dispatch={dispatch}\r\n                groupColumnsCount={groupColumnsCount}\r\n              />\r\n            )}\r\n        </thead>\r\n        <TableBody\r\n            {...props}\r\n            columns={columns}\r\n            childAttributes={childAttributes}\r\n            data={data}\r\n            editableCells={editableCells}\r\n            editingMode={editingMode}\r\n            groupColumnsCount={groupColumnsCount}\r\n            groupedColumns={groupedColumns}\r\n            dispatch={dispatch}\r\n            selectedRows={selectedRows}\r\n        />\r\n      </table>\r\n    </div >\r\n  );\r\n};\r\n","import { SortDirection } from '../enums';\r\nimport { Column } from '../Models/Column';\r\n\r\nexport const sortData = (columns: Column[], data: any): any[] => {\r\n  const sortedColumn = columns.find((column) => column.sortDirection);\r\n  if (!sortedColumn) { return data; }\r\n  const columnKey = sortedColumn.key;\r\n  const sortFunc = sortedColumn.sortDirection === SortDirection.Ascend ?\r\n    ((a: any, b: any) => a[columnKey] < b[columnKey] ? -1 : 1)\r\n    : ((a: any, b: any) => a[columnKey] > b[columnKey] ? -1 : 1);\r\n  const newData = [...data].sort(sortFunc);\r\n  return newData;\r\n};\r\n","import './CommandColumnDemo.scss';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType } from '../../lib/enums';\r\nimport {\r\n  CellFuncPropsWithChildren, DataChangeFunc, EventFunc, OptionChangeFunc,\r\n} from '../../lib/types';\r\n\r\nconst DELETE_ACTION = 'delete';\r\n\r\nconst dataArray = Array(10).fill(undefined).map(\r\n  (_, index) => ({\r\n    column1: `column:1 row:${index}`,\r\n    column2: `column:2 row:${index}`,\r\n    column3: `column:3 row:${index}`,\r\n    column4: `column:4 row:${index}`,\r\n  }),\r\n);\r\n\r\nconst AlertCell: React.FC<CellFuncPropsWithChildren> = ({\r\n   rowData,\r\n}) => {\r\n  return (\r\n    <img\r\n      src='static/icons/alert.svg'\r\n      className='command-column-button'\r\n      alt=''\r\n      onClick={() => alert(`Row data: \\r\\n${JSON.stringify(rowData)}`)}\r\n    />\r\n  );\r\n};\r\n\r\nconst DeleteRow: React.FC<CellFuncPropsWithChildren> = ({\r\n  rowData, dispatch,\r\n}) => {\r\n return (\r\n    <img\r\n      src='static/icons/delete.svg'\r\n      className='command-column-button'\r\n      onClick={() => dispatch(DELETE_ACTION, { rowData })}\r\n      alt=''\r\n    />\r\n );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'command1', cell: (props) => <AlertCell {...props}/>, style: { width: 40, textAlign: 'center' } },\r\n    { key: 'column1-1', field: 'column1', title: 'Column 1', dataType: DataType.String },\r\n    { key: 'column1-2', field: 'column1', title: 'Column 1', dataType: DataType.String },\r\n    { key: 'column2', title: 'Column 2', dataType: DataType.String },\r\n    { key: 'column3', title: 'Column 3', dataType: DataType.String },\r\n    { key: 'column4', title: 'Column 4', dataType: DataType.String },\r\n    { key: 'command22', cell: (props) => <DeleteRow {...props} />, style: { width: 40, textAlign: 'center' } },\r\n  ],\r\n  rowKeyField: 'column1',\r\n};\r\n\r\nconst CommandColumnDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n\r\n  const onEvent: EventFunc = (event, eventData) => {\r\n    if (event === DELETE_ACTION) {\r\n      const newValue = data.filter(\r\n        (d: any) => d[tableOption.rowKeyField] !== eventData.rowData[tableOption.rowKeyField]);\r\n      changeData(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={data}\r\n      onOptionChange={onOptionChange}\r\n      onDataChange={onDataChange}\r\n      onEvent={onEvent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommandColumnDemo;\r\n","import './CustomCellDemo.scss';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { ActionType, DataType, EditingMode } from '../../lib/enums';\r\nimport { Cell } from '../../lib/models';\r\nimport { CellFuncPropsWithChildren, DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true, img: 'static/images/man1.PNG' },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2019, 10, 8, 10), img: 'static/images/man2.PNG' },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2019, 11, 8, 10), img: 'static/images/man3.PNG' },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true, img: 'static/images/man4.PNG' },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true, img: 'static/images/man5.PNG'  },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2019, 10, 9, 10), img: 'static/images/man6.PNG'  },\r\n];\r\n\r\nconst CustomCell: React.FC<CellFuncPropsWithChildren> = ({\r\n  column: { key }, field, rowData, rowKeyField, dispatch,\r\n}) => {\r\n  return (\r\n    <div onClick={() => {\r\n      const cell: Cell = { columnKey: key, rowKey: rowData[rowKeyField] };\r\n      dispatch(ActionType.OpenEditor, { cell });\r\n    }}>\r\n      {rowData[field] ? 'Passed' : 'Failed'}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomImageCell: React.FC<CellFuncPropsWithChildren> = ({\r\n  field, rowData,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <img className='custom-cell-image' src={rowData[field]} alt=''/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      cell: CustomImageCell,\r\n      dataType: DataType.String,\r\n      key: 'img',\r\n      style: { width: '11%' },\r\n      title: 'Image',\r\n    },\r\n    { dataType: DataType.String, key: 'name', title: 'Name', style: { width: '30%' } },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number, style: { width: '10%', textAlign: 'right' } },\r\n    {\r\n      cell: CustomCell,\r\n      dataType: DataType.Boolean,\r\n      key: 'passed',\r\n      style: { width: '30%', textAlign: 'center' },\r\n      title: 'Results',\r\n    },\r\n    {\r\n      dataType: DataType.Date,\r\n      format: (value: Date) => value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' }),\r\n      key: 'nextTry',\r\n      title: 'Next Try',\r\n    },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst CustomCellDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={data}\r\n      onOptionChange={onOptionChange}\r\n      onDataChange={onDataChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCellDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, SortDirection, SortingMode } from '../../lib/enums';\r\nimport { DataRowFuncPropsWithChildren, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst DataRow: React.FC<DataRowFuncPropsWithChildren> = ({rowData}) => {\r\n  return (\r\n    <div>\r\n      {rowData.name}: {rowData.score} ({rowData.passed ? 'Passed' : 'Failed'})\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      dataType: DataType.String,\r\n      key: 'name',\r\n      sortDirection: SortDirection.Descend,\r\n      style: { width: 60 },\r\n      title: 'Student',\r\n    },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number },\r\n  ],\r\n  dataRow: (props) => <DataRow {...props}/>,\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n};\r\n\r\nconst CustomDataRowDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomDataRowDemo;\r\n","import './CustomEditorDemo.scss';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { ActionType, DataType, EditingMode } from '../../lib/enums';\r\nimport { Cell } from '../../lib/models';\r\nimport { DataChangeFunc, EditorFuncPropsWithChildren, OptionChangeFunc } from '../../lib/types';\r\nimport { typeUtils } from '../../lib/utils';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2019, 10, 8, 10) },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2019, 11, 8, 10) },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2019, 10, 9, 10) },\r\n];\r\n\r\nconst CustomEditor: React.FC<EditorFuncPropsWithChildren> = ({\r\n  column: { key }, rowKeyField, rowData, dispatch,\r\n}) => {\r\n  const close = () => {\r\n    const cell: Cell = { columnKey: key, rowKey: rowData[rowKeyField] };\r\n    dispatch(ActionType.CloseEditor, { cell });\r\n  };\r\n  const [value, setValue] = useState(rowData[key]);\r\n  return (\r\n    <div className='custom-editor'>\r\n      <input\r\n        className='form-control'\r\n        type='text'\r\n        value={value}\r\n        onChange={(event) => setValue(event.currentTarget.value)}/>\r\n      <button className='custom-editor-button custom-editor-button-save' onClick={() => {\r\n        const newValue = { ...rowData, ...{ [key]: value } };\r\n        dispatch(ActionType.ChangeRowData, { newValue });\r\n        close();\r\n      }}>Save</button>\r\n      <button className='custom-editor-button custom-editor-button-cancel' onClick={close}>Cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomLookupEditor: React.FC<EditorFuncPropsWithChildren> = ({\r\n  column: { key }, rowData, rowKeyField, dispatch,\r\n}) => {\r\n  const close = () => {\r\n    const cell: Cell = { columnKey: key, rowKey: rowData[rowKeyField] };\r\n    dispatch(ActionType.CloseEditor, { cell });\r\n  };\r\n  const [value, setValue] = useState(rowData[key]);\r\n  return (\r\n    <div>\r\n      <select\r\n        className='form-control'\r\n        autoFocus={true}\r\n        defaultValue={value}\r\n        onBlur={() => {\r\n          const newValue = { ...rowData, ...{ [key]: value } };\r\n          dispatch(ActionType.ChangeRowData, { newValue });\r\n          close();\r\n        }}\r\n        onChange={(event) => {\r\n          setValue(typeUtils.toBoolean(event.currentTarget.value));\r\n        }}>\r\n        <option value={'true'}>True</option>\r\n        <option value={'false'}>False</option>\r\n      </select>\r\n    </div >\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { dataType: DataType.String, key: 'name', title: 'Name', editor: CustomEditor, style: { width: '330px' } },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number, style: { width: '50px' } },\r\n    {\r\n      dataType: DataType.Boolean,\r\n      editor: CustomLookupEditor,\r\n      key: 'passed',\r\n      style: { width: '50px' },\r\n      title: 'Passed',\r\n    },\r\n    {\r\n      dataType: DataType.Date,\r\n      format: (value: Date) => value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' }),\r\n      key: 'nextTry',\r\n      title: 'Next Try',\r\n    },\r\n  ],\r\n  editableCells: [{ columnKey: 'name', rowKey: 1 }],\r\n  editingMode: EditingMode.Cell,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst CustomEditorDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={data}\r\n      onOptionChange={onOptionChange}\r\n      onDataChange={onDataChange}\r\n      childAttributes={{table: {className: 'custom-editor-demo-table'} }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomEditorDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { HeaderCellFuncPropsWithChildren, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray = Array(7).fill(undefined).map(\r\n  (_, index) => ({\r\n    column1: `column:1 row:${index}`,\r\n    column2: `column:2 row:${index}`,\r\n    id: index,\r\n  }),\r\n);\r\n\r\nconst HeadCell: React.FC<HeaderCellFuncPropsWithChildren> = ({\r\n  column: { title },\r\n}) => {\r\n  return (\r\n    <div style={{color: 'red'}}>\r\n      {title} - (Custom)\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      headCell: (props) => <HeadCell {...props}/>,\r\n      key: 'column1',\r\n      style: { textAlign: 'left' },\r\n      title: 'Column 1',\r\n    },\r\n    {\r\n      key: 'column2',\r\n      title: 'Column 2',\r\n    },\r\n  ],\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst CustomHeaderCellDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomHeaderCellDemo;\r\n","\r\nexport default class Demo {\r\n  constructor(\r\n    public component: React.FC,\r\n    public path: string,\r\n    public title: string,\r\n    public fileName: string,\r\n    public jsLink: string = '',\r\n    public tsLink: string = '',\r\n    public disableOnlineEditor: boolean = false) {\r\n      this.jsLink = jsLink + '?file=Demo.js';\r\n      this.tsLink = tsLink + '?file=Demo.tsx';\r\n  }\r\n}\r\n","import './DemoPage.scss';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Highlight from 'react-highlight';\r\n\r\ninterface IDemoTextProps {\r\n  demoFileName: string;\r\n}\r\n\r\nconst DemoText: React.FunctionComponent<IDemoTextProps> = ({ demoFileName }) => {\r\n  const [text, changeText]: [string, any] = useState('');\r\n  useEffect(() => {\r\n    fetch(`demos/${demoFileName}/${demoFileName}.tsx`)\r\n      .then((res) => res.text())\r\n      .then((fileText) => changeText(fileText));\r\n  }, [demoFileName]);\r\n  return (\r\n    <Highlight className='language-typescript'>\r\n      {text}\r\n    </Highlight>\r\n  );\r\n};\r\n\r\nexport default DemoText;\r\n","import ReactGA, { FieldsObject } from 'react-ga';\r\n\r\nconst host = window.location.hostname;\r\nlet initializeGA = () => {};\r\nlet trackPage = (page: string, options: FieldsObject) => {};\r\nlet trackEvent = (category: string, action: string, label: string = '') => {};\r\nif (host !== 'localhost') {\r\n  initializeGA = () => ReactGA.initialize('UA-50311880-5');\r\n\r\n  trackPage = (page: string, options: FieldsObject) => {\r\n    ReactGA.set({ page, ...options });\r\n    ReactGA.pageview(page);\r\n  };\r\n  trackEvent = (category: string, action: string, label: string = '') => {\r\n    ReactGA.event({\r\n      action,\r\n      category,\r\n      label,\r\n    });\r\n  };\r\n}\r\n\r\nexport { initializeGA, trackPage, trackEvent };\r\n","import './DemoPage.scss';\r\n\r\nimport React from 'react';\r\n\r\nimport Demo from './Demo';\r\nimport DemoText from './DemoText';\r\nimport { trackEvent } from './ga';\r\n\r\nconst getDemoPage = (demo: Demo) => {\r\n  return () => {\r\n    return (\r\n      <div>\r\n        <div className='simulator-content'>\r\n          <h1>{demo.title}</h1>\r\n          <demo.component />\r\n        </div>\r\n        <div className='code'>\r\n          <div className='editor-links'>\r\n            <span>Open in Online Editor: </span>\r\n            {demo.disableOnlineEditor || (\r\n              <>\r\n                <a className='editor-link editor-link-ts'\r\n                  href={demo.tsLink}\r\n                  onClick={() => { trackEvent('click', 'ts_example', demo.path); }}\r\n                  rel='noopener noreferrer'\r\n                  target='_blank'>\r\n                    TS Example\r\n                </a>\r\n                <span>|</span>\r\n              </>\r\n            )}\r\n            <a className='editor-link editor-link-js'\r\n              href={demo.jsLink}\r\n              onClick={() => { trackEvent('click', 'js_example', demo.path); }}\r\n              rel='noopener noreferrer'\r\n              target='_blank'>\r\n                JS Example\r\n            </a>\r\n          </div>\r\n          <DemoText demoFileName={demo.fileName}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default getDemoPage;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode } from '../../lib/enums';\r\nimport { DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2021, 10, 8, 10) },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2021, 11, 8, 10) },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2021, 10, 9, 10) },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'name', title: 'Name', dataType: DataType.String, style: { width: '30%' } },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number, style: { width: '40px' } },\r\n    { key: 'passed', title: 'Passed', dataType: DataType.Boolean, style: { width: '10%' }},\r\n    {\r\n      dataType: DataType.Date,\r\n      format: (value: Date) => value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' }),\r\n      key: 'nextTry',\r\n      title: 'Next Try',\r\n    },\r\n  ],\r\n  editableCells: [{\r\n    columnKey: 'name',\r\n    rowKey: 2,\r\n  }],\r\n  editingMode: EditingMode.Cell,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst EditingDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={data}\r\n      onOptionChange={onOptionChange}\r\n      onDataChange={onDataChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditingDemo;\r\n","import React from 'react';\r\n\r\nexport const EventsLog: React.FC<any> = ({ events, showDataClick }) => {\r\n  const eventsLog: any[] = events.map((e: any) => {\r\n    const time = e.date.toLocaleTimeString();\r\n    const milliseconds = e.date.getMilliseconds();\r\n    return {\r\n      data: `${JSON.stringify(e.data, (key, val) => {\r\n        if (typeof val === 'function') {\r\n          return `(${val})`;\r\n        }\r\n        return val;\r\n      }, 2)}`,\r\n      date: e.date,\r\n      milliseconds,\r\n      showData: e.showData,\r\n      time,\r\n      type: e.type,\r\n    };\r\n  });\r\n  return (\r\n    <div className='events'>{eventsLog.map((e: any, i: number) =>\r\n      (\r\n        <div key={i}>\r\n            <span className={`type ${e.type.startsWith('MY_') ? 'custom' : ''}`}>{e.type}</span> {\r\n              e.showData ? <pre className='data'>{e.data}</pre>\r\n              : <span style={{textDecoration: 'underline', textDecorationStyle: 'dotted'}} onClick={() => {showDataClick(e); }}>show data</span>\r\n            } <span className='time'>({e.time}<span className='milliseconds'>:{e.milliseconds}</span>)</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import './EventsDemo.scss';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode, FilteringMode, SortingMode } from '../../lib/enums';\r\nimport { ChildAttributes } from '../../lib/models';\r\nimport { DataChangeFunc, EventFunc, OptionChangeFunc } from '../../lib/types';\r\nimport { EventsLog } from './EventsLog';\r\n\r\nconst dataArray = Array(20).fill(undefined).map(\r\n  (_, index) => ({\r\n    column1: `column:1 row:${index}`,\r\n    column2: `column:2 row:${index}`,\r\n    column3: `column:3 row:${index}`,\r\n    column4: `column:4 row:${index}`,\r\n    id: index,\r\n  }),\r\n);\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'column1', title: 'Column 1', dataType: DataType.String },\r\n    { key: 'column2', title: 'Column 2', dataType: DataType.String },\r\n    { key: 'column3', title: 'Column 3', dataType: DataType.String },\r\n    { key: 'column4', title: 'Column 4', dataType: DataType.String },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  filteringMode: FilteringMode.FilterRow,\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n};\r\n\r\nconst childAttributes: ChildAttributes = {\r\n  cell: {\r\n    className: 'my-cell-class',\r\n    onClick: (e, extendedEvent) => {\r\n      const { childProps: { dispatch } } = extendedEvent;\r\n      dispatch('MY_CELL_onClick', { extendedEvent });\r\n    },\r\n    onContextMenu: (e, extendedEvent) => {\r\n      extendedEvent.dispatch('MY_CELL_onContextMenu', { extendedEvent });\r\n    },\r\n    onDoubleClick: (e, extendedEvent) => {\r\n      const { dispatch, childElementAttributes } = extendedEvent;\r\n      dispatch('MY_CELL_onDoubleClick', { extendedEvent });\r\n      childElementAttributes.onClick!(e);\r\n    },\r\n  },\r\n  table: {\r\n    onMouseEnter: (e, extendedEvent) => {\r\n      const { dispatch } = extendedEvent;\r\n      dispatch('MY_TABLE_onMouseEnter', { extendedEvent });\r\n    },\r\n  },\r\n};\r\n\r\nconst EventsDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n\r\n  const [events, changeEvents] = useState([] as any []);\r\n  const onEvent: EventFunc = (type, eventData) => {\r\n    changeEvents((prevValue) => ([{ type, data: eventData, date: new Date(), showData: false }, ...prevValue]));\r\n  };\r\n  return (\r\n    <div className='events-demo'>\r\n      <Table\r\n        {...option}\r\n        data={data}\r\n        onOptionChange={onOptionChange}\r\n        onDataChange={onDataChange}\r\n        onEvent={onEvent}\r\n        childAttributes={childAttributes}\r\n      />\r\n      <EventsLog events={events} showDataClick={(eventData: any) => {\r\n        const newEvents = [...events];\r\n        newEvents.find((e) => e.date === eventData.date).showData = true;\r\n        changeEvents(newEvents);\r\n      }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsDemo;\r\n","export const isEmpty = (value: any) => (value == null || value.length === 0);\r\n\r\nconst contains = (data: any[], item: any) => {\r\n  if (!item.value) { return true; }\r\n  return data[item.field].toLowerCase().includes(item.value.toLowerCase());\r\n};\r\nconst doesNotContain = (data: any[], item: any) => {\r\n  if (!item.value) { return true; }\r\n  return !data[item.field].toLowerCase().includes(item.value.toLowerCase());\r\n};\r\nconst equals = (data: any[], item: any) => {\r\n  if (!item.value) { return true; }\r\n  return data[item.field].toString().toLowerCase() === item.value.toString().toLowerCase();\r\n};\r\nconst isNotEqual = (data: any[], item: any) => {\r\n  if (!item.value) { return true; }\r\n  return data[item.field].toString().toLowerCase() !== item.value.toString().toLowerCase();\r\n};\r\nconst more = (data: any[], item: any) => data[item.field] > item.value;\r\nconst less = (data: any[], item: any) => data[item.field] < item.value;\r\nexport const filterItem = (data: any[], filter: any) => {\r\n  switch (filter.operator) {\r\n    case 'contains': return contains(data, filter);\r\n    case 'doesNotContain': return doesNotContain(data, filter);\r\n    case '=': return equals(data, filter);\r\n    case '<>': return isNotEqual(data, filter);\r\n    case '>': return more(data, filter);\r\n    case '<': return less(data, filter);\r\n    default: throw Error('unknown operator');\r\n  }\r\n};\r\n\r\nexport const filterGroup = (data: any[], groupName: string, items: any[]): any[] =>\r\n  (groupName.toLowerCase() === 'or' ? filterGroupOr(data, items) : filterGroupAnd(data, items));\r\n\r\nexport const filterGroupOr = (data: any[], items: any[]): any[]  => {\r\n  const filteredData = items.reduce((initialData: any, item: any) => {\r\n    if (item.items) {\r\n      const grouped = filterGroup(data, item.groupName, item.items);\r\n      return initialData.concat(grouped.filter((d: any) => initialData.indexOf(d) < 0));\r\n    }\r\n    return initialData.concat(data.filter((d: any) => initialData.indexOf(d) < 0 && filterItem(d, item)));\r\n  }, []);\r\n  return data.filter((d) => filteredData.includes(d));\r\n};\r\n\r\nexport const filterGroupAnd = (data: any[], items: any[]): any[]  => {\r\n  return items.reduce((initialData: any[], item: any) => {\r\n    if (item.items) { return filterGroup(initialData, item.groupName, item.items); }\r\n    return initialData.filter((d: any[]) => filterItem(d, item));\r\n  }, data);\r\n};\r\n\r\nexport const filterData = (data: any[] , filterValue: any): any[]  => {\r\n  return filterGroup(data, filterValue.groupName, filterValue.items);\r\n};\r\n","import React, { useState } from 'react';\r\nimport FilterControl from 'react-filter-control';\r\nimport { IFilterControlFilterValue } from 'react-filter-control/interfaces';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType } from '../../lib/enums';\r\nimport { OptionChangeFunc } from '../../lib/types';\r\nimport { filterData } from './filterData';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 3, name: 'Tom Bruce', score: 67, passed: false },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false },\r\n  { id: 3, name: 'Tom Parker', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Tom Williams', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'name', title: 'Name', dataType: DataType.String },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number },\r\n    { key: 'passed', title: 'Passed', dataType: DataType.Boolean },\r\n  ],\r\n  rowKeyField: 'id',\r\n};\r\n\r\nexport const fields = [{\r\n  caption: 'Name',\r\n  name: 'name',\r\n  operators: [{\r\n    caption: 'Contains',\r\n    name: 'contains',\r\n  }, {\r\n    caption: 'Does not Contain',\r\n    name: 'doesNotContain',\r\n  }],\r\n}, {\r\n  caption: 'Score',\r\n  name: 'score',\r\n  operators: [{\r\n    caption: 'Equals',\r\n    name: '=',\r\n  }, {\r\n    caption: 'Does not Equal',\r\n    name: '<>',\r\n  }, {\r\n    caption: 'More than',\r\n    name: '>',\r\n  }, {\r\n    caption: 'Less than',\r\n    name: '<',\r\n  }],\r\n}];\r\n\r\nexport const groups = [{\r\n  caption: 'And',\r\n  name: 'and',\r\n}, {\r\n  caption: 'Or',\r\n  name: 'or',\r\n}];\r\nexport const filter: IFilterControlFilterValue = {\r\n  groupName: 'and',\r\n  items: [\r\n    {\r\n      field: 'name',\r\n      key: '1',\r\n      operator: 'contains',\r\n      value: 'Tom',\r\n    },\r\n    {\r\n      field: 'score',\r\n      key: '2',\r\n      operator: '>',\r\n      value: '66',\r\n    },\r\n  ],\r\n};\r\n\r\nconst FilterExtendedDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  const [filterValue, changeFilter] = useState(filter);\r\n  const onFilterChangedChanged = (newFilterValue: IFilterControlFilterValue) => {\r\n    changeFilter(newFilterValue);\r\n  };\r\n  const filteredData = filterData(dataArray, filterValue);\r\n  return (\r\n    <>\r\n      <div className='top-element'>\r\n        <FilterControl {...{fields, groups, filterValue,  onFilterValueChanged: onFilterChangedChanged}}/>\r\n      </div>\r\n      <Table\r\n        {...option}\r\n        data={filteredData}\r\n        onOptionChange={onOptionChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterExtendedDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { ActionType, DataType, EditingMode, FilteringMode } from '../../lib/enums';\r\nimport { FilterRowFuncPropsWithChildren, OptionChangeFunc } from '../../lib/types';\r\nimport { dateUtils } from '../../lib/utils';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true, nextTry: new Date(2021, 10, 9) },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2021, 12, 9) },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2021, 7, 9) },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true, nextTry: new Date(2021, 10, 12) },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true, nextTry: new Date(2021, 10, 15) },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2021, 10, 7) },\r\n  { id: 7, name: 'Alex Brzowsky', score: 48, passed: false, nextTry: new Date(2021, 11, 11) },\r\n];\r\n\r\nconst CustomLookupEditor: React.FC<FilterRowFuncPropsWithChildren> = ({\r\n  column, dispatch,\r\n}) => {\r\n  const toNullableBoolean = (value: any) => {\r\n    switch (value) {\r\n      case 'true': return true;\r\n      case 'false': return false;\r\n    }\r\n    return value;\r\n  };\r\n  return (\r\n    <div>\r\n      <select\r\n        className='form-control'\r\n        autoFocus={true}\r\n        defaultValue={column.filterRowValue}\r\n        onChange={(event) => {\r\n          dispatch(ActionType.ChangeFilterRow, { column: {...column, filterRowValue: toNullableBoolean(event.currentTarget.value)}});\r\n        }}>\r\n        <option value=''/>\r\n        <option value={'true'}>True</option>\r\n        <option value={'false'}>False</option>\r\n      </select>\r\n    </div >\r\n  );\r\n};\r\n\r\nconst FilterOperators: React.FC<FilterRowFuncPropsWithChildren> = ({\r\n  column, dispatch,\r\n}) => {\r\n  return (\r\n    <select\r\n      className='form-control'\r\n      defaultValue={column.filterRowOperator}\r\n      onChange={(event) => {\r\n        dispatch(ActionType.ChangeFilterRow, { column: {...column, filterRowOperator: event.currentTarget.value}});\r\n      }}>\r\n      <option value={'='}>=</option>\r\n      <option value={'<'}>{'<'}</option>\r\n      <option value={'>'}>{'>'}</option>\r\n      <option value={'<='}>{'<='}</option>\r\n      <option value={'>='}>{'>='}</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nconst NumberEditor: React.FC<FilterRowFuncPropsWithChildren> = ({\r\n  column, dispatch,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <FilterOperators column={column} dispatch={dispatch}/>\r\n      <input\r\n        defaultValue={column.filterRowValue}\r\n        style={{width: 60}}\r\n        onChange={(event) => {\r\n          const filterRowValue = event.currentTarget.value !== '' ? Number(event.currentTarget.value) : null;\r\n          dispatch(ActionType.ChangeFilterRow, { column: {...column, filterRowValue}});\r\n        }}\r\n        type='number'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DateEditor: React.FC<FilterRowFuncPropsWithChildren> = ({\r\n  column, dispatch,\r\n}) => {\r\n  const fieldValue = column.filterRowValue;\r\n  const value = fieldValue && dateUtils.getDateInputValue(fieldValue);\r\n  return (\r\n    <div>\r\n      <FilterOperators column={column} dispatch={dispatch}/>\r\n      <input\r\n        type='date'\r\n        value={value || ''}\r\n        onChange={(event) => {\r\n          const targetValue = event.currentTarget.value;\r\n          const filterRowValue = targetValue ? new Date(targetValue) : null;\r\n          const updatedColumn = {...column, filterRowValue};\r\n          dispatch(ActionType.ChangeFilterRow, {column: updatedColumn});\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      dataType: DataType.Boolean,\r\n      editor: CustomLookupEditor,\r\n      filterRowCell: CustomLookupEditor,\r\n      filterRowValue: false,\r\n      key: 'passed',\r\n      style: {width: 90},\r\n      title: 'Passed',\r\n    },\r\n    {\r\n      dataType: DataType.String,\r\n      filterRowCell: () => <></>,\r\n      key: 'name',\r\n      style: {width: 100},\r\n      title: 'Name',\r\n    },\r\n    {\r\n      dataType: DataType.Number,\r\n      filterRowCell: NumberEditor,\r\n      filterRowOperator: '>=',\r\n      filterRowValue: 45,\r\n      key: 'score',\r\n      style: {width: 120},\r\n      title: 'Score',\r\n    },\r\n    {\r\n      dataType: DataType.Date,\r\n      filterRowCell: DateEditor,\r\n      filterRowOperator: '<=',\r\n      filterRowValue: new Date(2021, 11, 11),\r\n      format: (value: Date) => value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' }),\r\n      key: 'nextTry',\r\n      style: {width: 220},\r\n      title: 'Next Try',\r\n    },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  filteringMode: FilteringMode.FilterRow,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst FilterRowCustomEditorDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowCustomEditorDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, FilteringMode, SortDirection } from '../../lib/enums';\r\nimport { OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true, nextTry: new Date(2021, 10, 9) },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2021, 10, 8) },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2021, 11, 8) },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true, nextTry: new Date(2021, 12, 9) },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true, nextTry: new Date(2021, 11, 12) },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2021, 10, 9) },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'name', title: 'Name', dataType: DataType.String, sortDirection: SortDirection.Descend, filterRowValue: 'Billi Bob' },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number },\r\n    { key: 'passed', title: 'Passed', dataType: DataType.Boolean },\r\n    {\r\n      dataType: DataType.Date,\r\n      format: (value: Date) => value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' }),\r\n      key: 'nextTry',\r\n      title: 'Next Try',\r\n    },\r\n  ],\r\n  filteringMode: FilteringMode.FilterRow,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst FilterRowDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterRowDemo;\r\n","import React, { useEffect } from 'react';\r\nimport { FieldsObject } from 'react-ga';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { trackPage } from './ga';\r\n\r\nexport const withTracker = <P extends RouteComponentProps>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n  options: FieldsObject = {},\r\n) => {\r\n\r\n  return (props: P) => {\r\n    useEffect(() => {\r\n      trackPage(props.location.pathname, options);\r\n    }, [props.location.pathname]);\r\n\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode } from '../../lib/enums';\r\nimport { DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray = [\r\n  { id: 1, type: 'Cat', name: 'Kas', country: 'Czech Republic', age: 2 },\r\n  { id: 2, type: 'Dog', name: 'Rex', country: 'Montenegro', age: 6 },\r\n  { id: 3, type: 'Cat', name: 'Simba', country: 'France', age: 12 },\r\n  { id: 4, type: 'Dog', name: 'Beethoven', country: 'Czech Republic', age: 3 },\r\n  { id: 5, type: 'Cat', name: 'Hash', country: 'Czech Republic', age: 8 },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'type', title: 'TYPE', dataType: DataType.String },\r\n    { key: 'name', title: 'NAME', dataType: DataType.String },\r\n    { key: 'country', title: 'COUNTRY', dataType: DataType.String },\r\n    { key: 'age', title: 'AGE', dataType: DataType.Number, style: { width: '50%' } },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  groups: [{ columnKey: 'country' }, { columnKey: 'type' }],\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst GroupingDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={data}\r\n      onOptionChange={onOptionChange}\r\n      onDataChange={onDataChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GroupingDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode, SortingMode } from '../../lib/enums';\r\nimport { DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray = Array(25000).fill(undefined).map(\r\n  (_, index) => ({\r\n    column1: `column:1 row:${index}`,\r\n    column2: `column:2 row:${index}`,\r\n    column3: `column:3 row:${index}`,\r\n    column4: `column:4 row:${index}`,\r\n    id: index,\r\n  }),\r\n);\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'column1', title: 'Column 1', dataType: DataType.String },\r\n    { key: 'column2', title: 'Column 2', dataType: DataType.String },\r\n    { key: 'column3', title: 'Column 3', dataType: DataType.String },\r\n    { key: 'column4', title: 'Column 4', dataType: DataType.String },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n  virtualScrolling: {\r\n  },\r\n};\r\n\r\nconst ManyRowsDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        {...option}\r\n        data={data}\r\n        onOptionChange={onOptionChange}\r\n        onDataChange={onDataChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManyRowsDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, SortingMode } from '../../lib/enums';\r\nimport { OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray = Array(10000).fill(undefined).map(\r\n  (_, index) => ({\r\n    column1: `column:1 row:${index % 100}00`,\r\n    column2: `column:2 row:${index % 50}0`,\r\n    column3: `column:3 row:${index}`,\r\n    column4: `column:4 row:${index}`,\r\n    id: index,\r\n  }),\r\n);\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'column1', title: 'Column 1', dataType: DataType.String },\r\n    { key: 'column2', title: 'Column 2', dataType: DataType.String },\r\n    { key: 'column3', title: 'Column 3', dataType: DataType.String },\r\n    { key: 'column4', title: 'Column 4', dataType: DataType.String },\r\n  ],\r\n  groups: [{ columnKey: 'column1'}, { columnKey: 'column2' }],\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n  virtualScrolling: {\r\n  },\r\n};\r\n\r\nconst ManyRowsGroupingDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        {...option}\r\n        data={dataArray}\r\n        onOptionChange={onOptionChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManyRowsGroupingDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType } from '../../lib/enums';\r\nimport { OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    { key: 'name', title: 'Name', dataType: DataType.String, style: { width: '40%' } },\r\n    { key: 'score', title: 'Score', dataType: DataType.Number, style: { width: '10%' } },\r\n    {\r\n      dataType: DataType.Boolean,\r\n      key: 'passed',\r\n      search: (searchText, rowData) => {\r\n        return (searchText === 'false' && !rowData.passed) || (searchText === 'true' && rowData.passed);\r\n      },\r\n      title: 'Passed',\r\n    },\r\n  ],\r\n  noDataRow: () => 'No Data Found',\r\n  rowKeyField: 'id',\r\n  search: 'Billi Bob',\r\n};\r\n\r\nconst SearchDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <>\r\n      <input type='search' defaultValue={option.search} onChange={(event) => {\r\n        onOptionChange({ search: event.currentTarget.value });\r\n      }} className='top-element'/>\r\n      <Table\r\n        {...option}\r\n        data={dataArray}\r\n        onOptionChange={onOptionChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { ActionType, DataType, SortDirection, SortingMode } from '../../lib/enums';\r\nimport { EditorFuncPropsWithChildren, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst SelectionCell: React.FC<EditorFuncPropsWithChildren> = ({\r\n  rowData, rowKeyField, dispatch, isSelectedRow,\r\n}) => {\r\n  return (\r\n    <input\r\n      type='checkbox'\r\n      checked={isSelectedRow}\r\n      onChange={(event) => {\r\n        const rowKeyValue = rowData[rowKeyField];\r\n        if (event.currentTarget.checked) {\r\n          dispatch(ActionType.SelectRow, { rowKeyValue });\r\n        } else {\r\n          dispatch(ActionType.DeselectRowData, { rowKeyValue });\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      editor: SelectionCell,\r\n      isEditable: true,\r\n      key: 'selection',\r\n    },\r\n    {\r\n      dataType: DataType.String,\r\n      key: 'name',\r\n      sortDirection: SortDirection.Descend,\r\n      style: { width: '33%' },\r\n      title: 'Name',\r\n    },\r\n    { key: 'score', title: 'Score', style: { width: '10%' }, dataType: DataType.Number },\r\n    { key: 'passed', title: 'Passed', dataType: DataType.Boolean },\r\n  ],\r\n  rowKeyField: 'id',\r\n  selectedRows: [3, 5],\r\n  sortingMode: SortingMode.Single,\r\n};\r\n\r\nconst SelectionDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectionDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, SortDirection, SortingMode } from '../../lib/enums';\r\nimport { OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 55, passed: false },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      dataType: DataType.String,\r\n      key: 'name',\r\n      sortDirection: SortDirection.Descend,\r\n      style: { width: '33%' },\r\n      title: 'Name',\r\n    },\r\n    { key: 'score', title: 'Score', style: { width: '10%' }, dataType: DataType.Number },\r\n    { key: 'passed', title: 'Passed', dataType: DataType.Boolean },\r\n  ],\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n};\r\n\r\nconst SortingDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({...option, ...value });\r\n  };\r\n  return (\r\n    <Table\r\n      {...option}\r\n      data={dataArray}\r\n      onOptionChange={onOptionChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortingDemo;\r\n","const initDataArray = [\r\n  { id: 1, type: 'Cat', name: 'Kas', country: 'Czech Republic', age: 2 },\r\n  { id: 2, type: 'Dog', name: 'Rex', country: 'Montenegro', age: 6 },\r\n  { id: 3, type: 'Cat', name: 'Simba', country: 'France', age: 12 },\r\n  { id: 4, type: 'Dog', name: 'Beethoven', country: 'Czech Republic', age: 3 },\r\n  { id: 5, type: 'Cat', name: 'Hash', country: 'Czech Republic', age: 8 },\r\n];\r\n\r\nconst data = JSON.parse(localStorage.getItem('state-storing-demo-data') || '0') || initDataArray;\r\n\r\nconst dataStorage = {\r\n  get: () => {\r\n    return data;\r\n  },\r\n  save: (newData: any) => {\r\n    localStorage.setItem('state-storing-demo-data', JSON.stringify(newData));\r\n  },\r\n};\r\nexport default dataStorage;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode, FilteringMode, SortingMode } from '../../lib/enums';\r\nimport { DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\nimport dataStorage from './dataStorage';\r\n\r\nconst defaultOption = {\r\n  columns: [\r\n    { key: 'type', title: 'TYPE', dataType: DataType.String },\r\n    { key: 'name', title: 'NAME', dataType: DataType.String },\r\n    { key: 'country', title: 'COUNTRY', dataType: DataType.String },\r\n    { key: 'age', title: 'AGE', dataType: DataType.Number, style: { width: '50%' } },\r\n  ],\r\n  editingMode: EditingMode.Cell,\r\n  filteringMode: FilteringMode.FilterRow,\r\n  groups: [{ columnKey: 'country' }, { columnKey: 'type' }],\r\n  rowKeyField: 'id',\r\n  sortingMode: SortingMode.Single,\r\n};\r\n\r\nconst OPTION_KEY = 'state-storing-demo-table-option';\r\nconst tableOption: ITableOption = {...defaultOption, ...JSON.parse(localStorage.getItem(OPTION_KEY) || '0')};\r\n\r\nconst StateStoringDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    const newOption = {...option, ...value };\r\n    changeOptions({...option, ...value });\r\n\r\n    localStorage.setItem(OPTION_KEY, JSON.stringify(newOption));\r\n  };\r\n\r\n  const [data, changeData] = useState(dataStorage.get());\r\n  const onDataChange: DataChangeFunc = async (newValue) => {\r\n    changeData(newValue);\r\n\r\n    dataStorage.save(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => window.location.reload()} className='top-element' >Reload Page</button>\r\n      <Table\r\n        {...option}\r\n        data={data}\r\n        onOptionChange={onOptionChange}\r\n        onDataChange={onDataChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StateStoringDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ITableOption, Table } from '../../lib';\r\nimport { DataType, EditingMode } from '../../lib/enums';\r\nimport { DataChangeFunc, OptionChangeFunc } from '../../lib/types';\r\n\r\nconst dataArray: any[] = [\r\n  { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n  { id: 2, name: 'Billi Bob', score: 155, passed: false },\r\n  { id: 3, name: 'Tom Williams', score: 45, passed: false },\r\n  { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n  { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n  { id: 6, name: 'Sunny Fox', score: 33, passed: false },\r\n];\r\n\r\nconst tableOption: ITableOption = {\r\n  columns: [\r\n    {\r\n      dataType: DataType.String,\r\n      key: 'name',\r\n      style: { width: '40%' },\r\n      title: 'Name',\r\n      validation: (value: any, rowData: any) => {\r\n        if (!value) {\r\n          return `Value can't be empty`;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      dataType: DataType.Number,\r\n      key: 'score',\r\n      style: { width: '70px' },\r\n      title: 'Score',\r\n      validation: (value: any, rowData: any) => {\r\n        if (value > 100) {\r\n          return `Value can't be more than 100`;\r\n        }\r\n        if (!value) {\r\n          return `Value can't be empty`;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      dataType: DataType.Boolean,\r\n      key: 'passed',\r\n      title: 'Passed',\r\n    },\r\n  ],\r\n  editableCells: [{\r\n    columnKey: 'score',\r\n    rowKey: 2,\r\n  }],\r\n  editingMode: EditingMode.Cell,\r\n  rowKeyField: 'id',\r\n};\r\n\r\nconst ValidationDemo: React.FC = () => {\r\n  const [option, changeOptions] = useState(tableOption);\r\n  const onOptionChange: OptionChangeFunc = (value) => {\r\n    changeOptions({ ...option, ...value });\r\n  };\r\n\r\n  const [data, changeData] = useState(dataArray);\r\n  const onDataChange: DataChangeFunc = (newValue) => {\r\n    changeData(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Table\r\n        {...option}\r\n        data={data}\r\n        onOptionChange={onOptionChange}\r\n        onDataChange={onDataChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ValidationDemo;\r\n","import './Demos.scss';\r\n\r\nimport React from 'react';\r\nimport { HashRouter, NavLink, Route } from 'react-router-dom';\r\n\r\nimport CommandColumnDemo from './CommandColumnDemo/CommandColumnDemo';\r\nimport CustomCellDemo from './CustomCellDemo/CustomCellDemo';\r\nimport CustomDataRowDemo from './CustomDataRowDemo/CustomDataRowDemo';\r\nimport CustomEditorDemo from './CustomEditorDemo/CustomEditorDemo';\r\nimport CustomHeaderCellDemo from './CustomHeaderCellDemo/CustomHeaderCellDemo';\r\nimport Demo from './Demo';\r\nimport getDemoPage from './DemoPage';\r\nimport EditingDemo from './EditingDemo/EditingDemo';\r\nimport EventsDemo from './EventsDemo/EventsDemo';\r\nimport FilterExtendedDemo from './FilterExtendedDemo/FilterExtendedDemo';\r\nimport FilterRowCustomEditorDemo from './FilterRowCustomEditorDemo/FilterRowCustomEditorDemo';\r\nimport FilterRowDemo from './FilterRowDemo/FilterRowDemo';\r\nimport { initializeGA, trackEvent } from './ga';\r\nimport { withTracker } from './GAWrapper';\r\nimport GroupingDemo from './GroupingDemo/GroupingDemo';\r\nimport ManyRowsDemo from './ManyRowsDemo/ManyRowsDemo';\r\nimport ManyRowsGroupingDemo from './ManyRowsGroupingDemo/ManyRowsGroupingDemo';\r\nimport SearchDemo from './SearchDemo/SearchDemo';\r\nimport SelectionDemo from './SelectionDemo/SelectionDemo';\r\nimport SortingDemo from './SortingDemo/SortingDemo';\r\nimport StateStoringDemo from './StateStoringDemo/StateStoringDemo';\r\nimport ValidationDemo from './ValidationDemo/ValidationDemo';\r\n\r\ninitializeGA();\r\n\r\nconst demos: Demo[] = [\r\n  new Demo(CommandColumnDemo, '/command-column', 'Command Column', 'CommandColumnDemo', 'https://stackblitz.com/edit/table-command-column-js', 'https://stackblitz.com/edit/table-command-column-ts'),\r\n  new Demo(CustomCellDemo, '/custom-cell', 'Custom Cell', 'CustomCellDemo', 'https://stackblitz.com/edit/table-custom-cell-js', 'https://stackblitz.com/edit/table-custom-cell-ts'),\r\n  new Demo(CustomDataRowDemo, '/custom-data-row', 'Custom Row', 'CustomDataRowDemo', 'https://stackblitz.com/edit/table-custom-data-row-js', 'https://stackblitz.com/edit/table-custom-data-row-ts'),\r\n  new Demo(CustomEditorDemo, '/custom-editor', 'Custom Editor', 'CustomEditorDemo', 'https://stackblitz.com/edit/table-custom-editor-js', 'https://stackblitz.com/edit/table-custom-editor-ts'),\r\n  new Demo(CustomHeaderCellDemo, '/custom-header-cell', 'Custom Header Cell', 'CustomHeaderCellDemo', 'https://stackblitz.com/edit/table-custom-header-cell-js', 'https://stackblitz.com/edit/table-custom-header-cell-ts'),\r\n  new Demo(EditingDemo, '/editing', 'Editing', 'EditingDemo', 'https://stackblitz.com/edit/table-editing-js', 'https://stackblitz.com/edit/table-editing-ts'),\r\n  new Demo(EventsDemo, '/events', 'Events', 'EventsDemo', 'https://stackblitz.com/edit/table-events-js', 'https://stackblitz.com/edit/table-events-ts'),\r\n  new Demo(FilterExtendedDemo, '/filter-extended', 'Filter Extended', 'FilterExtendedDemo', 'https://stackblitz.com/edit/table-filter-extended-js', 'https://stackblitz.com/edit/table-filter-extended-ts'),\r\n  new Demo(FilterRowCustomEditorDemo, '/filter-row-custom-editor', 'Filter Row - Custom Editor', 'FilterRowCustomEditorDemo', 'https://stackblitz.com/edit/table-filter-row-custom-editor-js', 'https://stackblitz.com/edit/table-filter-row-custom-editor-ts'),\r\n  new Demo(FilterRowDemo, '/filter-row', 'Filter Row', 'FilterRowDemo', 'https://stackblitz.com/edit/table-filter-row-js', 'https://stackblitz.com/edit/table-filter-row-ts'),\r\n  new Demo(GroupingDemo, '/grouping', 'Grouping', 'GroupingDemo', 'https://stackblitz.com/edit/table-grouping-js', 'https://stackblitz.com/edit/table-grouping-ts', true),\r\n  new Demo(ManyRowsDemo, '/many-rows', '25000 Rows', 'ManyRowsDemo', 'https://stackblitz.com/edit/table-many-rows-js', 'https://stackblitz.com/edit/table-many-rows-ts'),\r\n  new Demo(ManyRowsGroupingDemo, '/many-rows-grouping', '10000 Grouped Rows', 'ManyRowsGroupingDemo', 'https://stackblitz.com/edit/table-many-rows-grouping-js', 'https://stackblitz.com/edit/table-many-rows-grouping-ts', true),\r\n  new Demo(SearchDemo, '/search', 'Search', 'SearchDemo', 'https://stackblitz.com/edit/table-search-js', 'https://stackblitz.com/edit/table-search-ts'),\r\n  new Demo(SelectionDemo, '/selection', 'Selection', 'SelectionDemo', 'https://stackblitz.com/edit/table-selection-js', 'https://stackblitz.com/edit/table-selection-ts'),\r\n  new Demo(SortingDemo, '/sorting', 'Sorting', 'SortingDemo', 'https://stackblitz.com/edit/table-sorting-js', 'https://stackblitz.com/edit/table-sorting-ts'),\r\n  new Demo(StateStoringDemo, '/state-storing', 'State Storing', 'StateStoringDemo', 'https://stackblitz.com/edit/table-state-storing-js', '', true),\r\n  new Demo(ValidationDemo, '/validation', 'Validation', 'ValidationDemo', 'https://stackblitz.com/edit/table-validation-js', 'https://stackblitz.com/edit/table-validation-ts'),\r\n];\r\n\r\nconst cases = demos.map((d: Demo) => {\r\n  return ({\r\n    demoComponent: getDemoPage(d),\r\n    name: d.fileName,\r\n    path: d.path,\r\n    title: d.title,\r\n  });\r\n});\r\n\r\nconst Demos: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div className='demos'>\r\n        <nav>\r\n          <div className='nav-container'>\r\n            <div className='logo-container'>\r\n              <b>ka-table</b>\r\n              <a href='https://github.com/komarovalexander/ka-table'\r\n                onClick={() => { trackEvent('click', 'github_logo'); }}>\r\n                <img src='static/icons/github_logo.svg' alt=''/>\r\n              </a>\r\n              <a href='https://www.npmjs.com/package/ka-table'\r\n                onClick={() => { trackEvent('click', 'npm_logo'); }}>\r\n                <img src='static/icons/npm_logo.svg' alt=''/>\r\n              </a>\r\n            </div>\r\n            <ul className='menu'>\r\n            {\r\n              cases.map((c) => (\r\n                <li key={c.name}>\r\n                    <NavLink to={c.path} activeClassName='active'>\r\n                      <span className='menu-button'>\r\n                        <span className='menu-icon'><img src={`static/icons/${c.name}.svg`} alt=''/></span>\r\n                        <span className='menu-button-inner'>{c.title}</span>\r\n                      </span>\r\n                    </NavLink>\r\n                </li>\r\n              ))\r\n            }\r\n            </ul>\r\n          </div>\r\n          <div className='developers-links'>\r\n            <div>\r\n              <a href='https://github.com/komarovalexander'\r\n                rel='noopener noreferrer'\r\n                target='_blank'\r\n                onClick={() => { trackEvent('click', 'developed_by', 'Alex'); }}>\r\n                  <img src='static/icons/link.svg' alt=''/>\r\n                  Developed by Alexander Komarov\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <a href='https://www.behance.net/daryakomarova'\r\n                rel='noopener noreferrer'\r\n                target='_blank'\r\n                onClick={() => { trackEvent('click', 'developed_by', 'Daria'); }}>\r\n                  <img src='static/icons/link.svg' alt=''/>\r\n                  UI Design by Daria Komarova\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main>\r\n          {\r\n            cases.map((c) => (\r\n              <Route key={c.name} path={c.path} component={withTracker(c.demoComponent)} />\r\n            ))\r\n          }\r\n        </main>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Demos;\r\n","import './App.css';\r\n\r\nimport React from 'react';\r\n\r\nimport Demos from './Demos/Demos';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Demos />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}